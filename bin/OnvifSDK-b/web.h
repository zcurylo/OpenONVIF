/* web.h
   Generated by wsdl2h 2.8.21 from /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/bin/OnvifSDK-b/xml/devicemgmt.wsdl /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/bin/OnvifSDK-b/xml/event.wsdl /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/bin/OnvifSDK-b/xml/analytics.wsdl /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/bin/OnvifSDK-b/xml/remotediscovery.wsdl /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/bin/OnvifSDK-b/xml/media.wsdl and /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/OnvifSDK/typemapWeb.dat
   2015-08-13 12:40:55 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on web.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
tan = "http://www.onvif.org/ver20/analytics/wsdl"
dn = "http://www.onvif.org/ver10/network/wsdl"
wsd = "http://schemas.xmlsoap.org/ws/2005/04/discovery"
wsa = "http://schemas.xmlsoap.org/ws/2004/08/addressing"
trt = "http://www.onvif.org/ver10/media/wsdl"

*/

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tan	"http://www.onvif.org/ver20/analytics/wsdl"
//gsoap tan   schema namespace:	http://www.onvif.org/ver20/analytics/wsdl
//gsoap tan   schema elementForm:	qualified
//gsoap tan   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_dn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap dn    schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap dn    schema elementForm:	qualified
//gsoap dn    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsd	"http://schemas.xmlsoap.org/ws/2005/04/discovery"
//gsoap wsd   schema namespace:	http://schemas.xmlsoap.org/ws/2005/04/discovery
//gsoap wsd   schema elementForm:	qualified
//gsoap wsd   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsa	"http://schemas.xmlsoap.org/ws/2004/08/addressing"
//gsoap wsa   schema namespace:	http://schemas.xmlsoap.org/ws/2004/08/addressing
//gsoap wsa   schema elementForm:	qualified
//gsoap wsa   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:anyType".
class xsd__anyType { _XML __item; struct soap *soap; };

/// Built-in XSD type "xs:QName".
typedef std::string xsd__QName;

/// Built-in XSD type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
	struct soap *soap;
};

/// Built-in XSD type "xs:hexBinary".
class xsd__hexBinary { unsigned char *__ptr; int __size; };

// Imported XSD type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.
/// Primitive built-in type "SOAP-ENV:Envelope".
typedef std::string SOAP_ENV__Envelope;

/// Primitive built-in type "xs:ID".
typedef std::string xsd__ID;

/// Primitive built-in type "xs:IDREFS".
typedef std::string xsd__IDREFS;

/// Primitive built-in type "xs:NCName".
typedef std::string xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef std::string xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Primitive built-in type "xs:integer".
typedef std::string xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef std::string xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef std::string xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.
/// Built-in attribute "xmime:contentType".
typedef std::string _xmime__contentType;

//gsoap xmime schema namespace:	http://www.w3.org/2005/05/xmlmime

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class tds__Service.
class tds__Service;

//  Forward declaration of class tds__DeviceServiceCapabilities.
class tds__DeviceServiceCapabilities;

//  Forward declaration of class tds__NetworkCapabilities.
class tds__NetworkCapabilities;

//  Forward declaration of class tds__SecurityCapabilities.
class tds__SecurityCapabilities;

//  Forward declaration of class tds__SystemCapabilities.
class tds__SystemCapabilities;

//  Forward declaration of class tds__MiscCapabilities.
class tds__MiscCapabilities;

//  Forward declaration of class _tds__GetServices.
class _tds__GetServices;

//  Forward declaration of class _tds__GetServicesResponse.
class _tds__GetServicesResponse;

//  Forward declaration of class _tds__GetServiceCapabilities.
class _tds__GetServiceCapabilities;

//  Forward declaration of class _tds__GetServiceCapabilitiesResponse.
class _tds__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tds__GetDeviceInformation.
class _tds__GetDeviceInformation;

//  Forward declaration of class _tds__GetDeviceInformationResponse.
class _tds__GetDeviceInformationResponse;

//  Forward declaration of class _tds__SetSystemDateAndTime.
class _tds__SetSystemDateAndTime;

//  Forward declaration of class _tds__SetSystemDateAndTimeResponse.
class _tds__SetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__GetSystemDateAndTime.
class _tds__GetSystemDateAndTime;

//  Forward declaration of class _tds__GetSystemDateAndTimeResponse.
class _tds__GetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__SetSystemFactoryDefault.
class _tds__SetSystemFactoryDefault;

//  Forward declaration of class _tds__SetSystemFactoryDefaultResponse.
class _tds__SetSystemFactoryDefaultResponse;

//  Forward declaration of class _tds__UpgradeSystemFirmware.
class _tds__UpgradeSystemFirmware;

//  Forward declaration of class _tds__UpgradeSystemFirmwareResponse.
class _tds__UpgradeSystemFirmwareResponse;

//  Forward declaration of class _tds__SystemReboot.
class _tds__SystemReboot;

//  Forward declaration of class _tds__SystemRebootResponse.
class _tds__SystemRebootResponse;

//  Forward declaration of class _tds__RestoreSystem.
class _tds__RestoreSystem;

//  Forward declaration of class _tds__RestoreSystemResponse.
class _tds__RestoreSystemResponse;

//  Forward declaration of class _tds__GetSystemBackup.
class _tds__GetSystemBackup;

//  Forward declaration of class _tds__GetSystemBackupResponse.
class _tds__GetSystemBackupResponse;

//  Forward declaration of class _tds__GetSystemSupportInformation.
class _tds__GetSystemSupportInformation;

//  Forward declaration of class _tds__GetSystemSupportInformationResponse.
class _tds__GetSystemSupportInformationResponse;

//  Forward declaration of class _tds__GetSystemLog.
class _tds__GetSystemLog;

//  Forward declaration of class _tds__GetSystemLogResponse.
class _tds__GetSystemLogResponse;

//  Forward declaration of class _tds__GetScopes.
class _tds__GetScopes;

//  Forward declaration of class _tds__GetScopesResponse.
class _tds__GetScopesResponse;

//  Forward declaration of class _tds__SetScopes.
class _tds__SetScopes;

//  Forward declaration of class _tds__SetScopesResponse.
class _tds__SetScopesResponse;

//  Forward declaration of class _tds__AddScopes.
class _tds__AddScopes;

//  Forward declaration of class _tds__AddScopesResponse.
class _tds__AddScopesResponse;

//  Forward declaration of class _tds__RemoveScopes.
class _tds__RemoveScopes;

//  Forward declaration of class _tds__RemoveScopesResponse.
class _tds__RemoveScopesResponse;

//  Forward declaration of class _tds__GetDiscoveryMode.
class _tds__GetDiscoveryMode;

//  Forward declaration of class _tds__GetDiscoveryModeResponse.
class _tds__GetDiscoveryModeResponse;

//  Forward declaration of class _tds__SetDiscoveryMode.
class _tds__SetDiscoveryMode;

//  Forward declaration of class _tds__SetDiscoveryModeResponse.
class _tds__SetDiscoveryModeResponse;

//  Forward declaration of class _tds__GetRemoteDiscoveryMode.
class _tds__GetRemoteDiscoveryMode;

//  Forward declaration of class _tds__GetRemoteDiscoveryModeResponse.
class _tds__GetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__SetRemoteDiscoveryMode.
class _tds__SetRemoteDiscoveryMode;

//  Forward declaration of class _tds__SetRemoteDiscoveryModeResponse.
class _tds__SetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__GetDPAddresses.
class _tds__GetDPAddresses;

//  Forward declaration of class _tds__GetDPAddressesResponse.
class _tds__GetDPAddressesResponse;

//  Forward declaration of class _tds__SetDPAddresses.
class _tds__SetDPAddresses;

//  Forward declaration of class _tds__SetDPAddressesResponse.
class _tds__SetDPAddressesResponse;

//  Forward declaration of class _tds__GetEndpointReference.
class _tds__GetEndpointReference;

//  Forward declaration of class _tds__GetEndpointReferenceResponse.
class _tds__GetEndpointReferenceResponse;

//  Forward declaration of class _tds__GetRemoteUser.
class _tds__GetRemoteUser;

//  Forward declaration of class _tds__GetRemoteUserResponse.
class _tds__GetRemoteUserResponse;

//  Forward declaration of class _tds__SetRemoteUser.
class _tds__SetRemoteUser;

//  Forward declaration of class _tds__SetRemoteUserResponse.
class _tds__SetRemoteUserResponse;

//  Forward declaration of class _tds__GetUsers.
class _tds__GetUsers;

//  Forward declaration of class _tds__GetUsersResponse.
class _tds__GetUsersResponse;

//  Forward declaration of class _tds__CreateUsers.
class _tds__CreateUsers;

//  Forward declaration of class _tds__CreateUsersResponse.
class _tds__CreateUsersResponse;

//  Forward declaration of class _tds__DeleteUsers.
class _tds__DeleteUsers;

//  Forward declaration of class _tds__DeleteUsersResponse.
class _tds__DeleteUsersResponse;

//  Forward declaration of class _tds__SetUser.
class _tds__SetUser;

//  Forward declaration of class _tds__SetUserResponse.
class _tds__SetUserResponse;

//  Forward declaration of class _tds__GetWsdlUrl.
class _tds__GetWsdlUrl;

//  Forward declaration of class _tds__GetWsdlUrlResponse.
class _tds__GetWsdlUrlResponse;

//  Forward declaration of class _tds__GetCapabilities.
class _tds__GetCapabilities;

//  Forward declaration of class _tds__GetCapabilitiesResponse.
class _tds__GetCapabilitiesResponse;

//  Forward declaration of class _tds__GetHostname.
class _tds__GetHostname;

//  Forward declaration of class _tds__GetHostnameResponse.
class _tds__GetHostnameResponse;

//  Forward declaration of class _tds__SetHostname.
class _tds__SetHostname;

//  Forward declaration of class _tds__SetHostnameResponse.
class _tds__SetHostnameResponse;

//  Forward declaration of class _tds__SetHostnameFromDHCP.
class _tds__SetHostnameFromDHCP;

//  Forward declaration of class _tds__SetHostnameFromDHCPResponse.
class _tds__SetHostnameFromDHCPResponse;

//  Forward declaration of class _tds__GetDNS.
class _tds__GetDNS;

//  Forward declaration of class _tds__GetDNSResponse.
class _tds__GetDNSResponse;

//  Forward declaration of class _tds__SetDNS.
class _tds__SetDNS;

//  Forward declaration of class _tds__SetDNSResponse.
class _tds__SetDNSResponse;

//  Forward declaration of class _tds__GetNTP.
class _tds__GetNTP;

//  Forward declaration of class _tds__GetNTPResponse.
class _tds__GetNTPResponse;

//  Forward declaration of class _tds__SetNTP.
class _tds__SetNTP;

//  Forward declaration of class _tds__SetNTPResponse.
class _tds__SetNTPResponse;

//  Forward declaration of class _tds__GetDynamicDNS.
class _tds__GetDynamicDNS;

//  Forward declaration of class _tds__GetDynamicDNSResponse.
class _tds__GetDynamicDNSResponse;

//  Forward declaration of class _tds__SetDynamicDNS.
class _tds__SetDynamicDNS;

//  Forward declaration of class _tds__SetDynamicDNSResponse.
class _tds__SetDynamicDNSResponse;

//  Forward declaration of class _tds__GetNetworkInterfaces.
class _tds__GetNetworkInterfaces;

//  Forward declaration of class _tds__GetNetworkInterfacesResponse.
class _tds__GetNetworkInterfacesResponse;

//  Forward declaration of class _tds__SetNetworkInterfaces.
class _tds__SetNetworkInterfaces;

//  Forward declaration of class _tds__SetNetworkInterfacesResponse.
class _tds__SetNetworkInterfacesResponse;

//  Forward declaration of class _tds__GetNetworkProtocols.
class _tds__GetNetworkProtocols;

//  Forward declaration of class _tds__GetNetworkProtocolsResponse.
class _tds__GetNetworkProtocolsResponse;

//  Forward declaration of class _tds__SetNetworkProtocols.
class _tds__SetNetworkProtocols;

//  Forward declaration of class _tds__SetNetworkProtocolsResponse.
class _tds__SetNetworkProtocolsResponse;

//  Forward declaration of class _tds__GetNetworkDefaultGateway.
class _tds__GetNetworkDefaultGateway;

//  Forward declaration of class _tds__GetNetworkDefaultGatewayResponse.
class _tds__GetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__SetNetworkDefaultGateway.
class _tds__SetNetworkDefaultGateway;

//  Forward declaration of class _tds__SetNetworkDefaultGatewayResponse.
class _tds__SetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__GetZeroConfiguration.
class _tds__GetZeroConfiguration;

//  Forward declaration of class _tds__GetZeroConfigurationResponse.
class _tds__GetZeroConfigurationResponse;

//  Forward declaration of class _tds__SetZeroConfiguration.
class _tds__SetZeroConfiguration;

//  Forward declaration of class _tds__SetZeroConfigurationResponse.
class _tds__SetZeroConfigurationResponse;

//  Forward declaration of class _tds__GetIPAddressFilter.
class _tds__GetIPAddressFilter;

//  Forward declaration of class _tds__GetIPAddressFilterResponse.
class _tds__GetIPAddressFilterResponse;

//  Forward declaration of class _tds__SetIPAddressFilter.
class _tds__SetIPAddressFilter;

//  Forward declaration of class _tds__SetIPAddressFilterResponse.
class _tds__SetIPAddressFilterResponse;

//  Forward declaration of class _tds__AddIPAddressFilter.
class _tds__AddIPAddressFilter;

//  Forward declaration of class _tds__AddIPAddressFilterResponse.
class _tds__AddIPAddressFilterResponse;

//  Forward declaration of class _tds__RemoveIPAddressFilter.
class _tds__RemoveIPAddressFilter;

//  Forward declaration of class _tds__RemoveIPAddressFilterResponse.
class _tds__RemoveIPAddressFilterResponse;

//  Forward declaration of class _tds__GetAccessPolicy.
class _tds__GetAccessPolicy;

//  Forward declaration of class _tds__GetAccessPolicyResponse.
class _tds__GetAccessPolicyResponse;

//  Forward declaration of class _tds__SetAccessPolicy.
class _tds__SetAccessPolicy;

//  Forward declaration of class _tds__SetAccessPolicyResponse.
class _tds__SetAccessPolicyResponse;

//  Forward declaration of class _tds__CreateCertificate.
class _tds__CreateCertificate;

//  Forward declaration of class _tds__CreateCertificateResponse.
class _tds__CreateCertificateResponse;

//  Forward declaration of class _tds__GetCertificates.
class _tds__GetCertificates;

//  Forward declaration of class _tds__GetCertificatesResponse.
class _tds__GetCertificatesResponse;

//  Forward declaration of class _tds__GetCertificatesStatus.
class _tds__GetCertificatesStatus;

//  Forward declaration of class _tds__GetCertificatesStatusResponse.
class _tds__GetCertificatesStatusResponse;

//  Forward declaration of class _tds__SetCertificatesStatus.
class _tds__SetCertificatesStatus;

//  Forward declaration of class _tds__SetCertificatesStatusResponse.
class _tds__SetCertificatesStatusResponse;

//  Forward declaration of class _tds__DeleteCertificates.
class _tds__DeleteCertificates;

//  Forward declaration of class _tds__DeleteCertificatesResponse.
class _tds__DeleteCertificatesResponse;

//  Forward declaration of class _tds__GetPkcs10Request.
class _tds__GetPkcs10Request;

//  Forward declaration of class _tds__GetPkcs10RequestResponse.
class _tds__GetPkcs10RequestResponse;

//  Forward declaration of class _tds__LoadCertificates.
class _tds__LoadCertificates;

//  Forward declaration of class _tds__LoadCertificatesResponse.
class _tds__LoadCertificatesResponse;

//  Forward declaration of class _tds__GetClientCertificateMode.
class _tds__GetClientCertificateMode;

//  Forward declaration of class _tds__GetClientCertificateModeResponse.
class _tds__GetClientCertificateModeResponse;

//  Forward declaration of class _tds__SetClientCertificateMode.
class _tds__SetClientCertificateMode;

//  Forward declaration of class _tds__SetClientCertificateModeResponse.
class _tds__SetClientCertificateModeResponse;

//  Forward declaration of class _tds__GetCACertificates.
class _tds__GetCACertificates;

//  Forward declaration of class _tds__GetCACertificatesResponse.
class _tds__GetCACertificatesResponse;

//  Forward declaration of class _tds__LoadCertificateWithPrivateKey.
class _tds__LoadCertificateWithPrivateKey;

//  Forward declaration of class _tds__LoadCertificateWithPrivateKeyResponse.
class _tds__LoadCertificateWithPrivateKeyResponse;

//  Forward declaration of class _tds__GetCertificateInformation.
class _tds__GetCertificateInformation;

//  Forward declaration of class _tds__GetCertificateInformationResponse.
class _tds__GetCertificateInformationResponse;

//  Forward declaration of class _tds__LoadCACertificates.
class _tds__LoadCACertificates;

//  Forward declaration of class _tds__LoadCACertificatesResponse.
class _tds__LoadCACertificatesResponse;

//  Forward declaration of class _tds__CreateDot1XConfiguration.
class _tds__CreateDot1XConfiguration;

//  Forward declaration of class _tds__CreateDot1XConfigurationResponse.
class _tds__CreateDot1XConfigurationResponse;

//  Forward declaration of class _tds__SetDot1XConfiguration.
class _tds__SetDot1XConfiguration;

//  Forward declaration of class _tds__SetDot1XConfigurationResponse.
class _tds__SetDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetDot1XConfiguration.
class _tds__GetDot1XConfiguration;

//  Forward declaration of class _tds__GetDot1XConfigurationResponse.
class _tds__GetDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetDot1XConfigurations.
class _tds__GetDot1XConfigurations;

//  Forward declaration of class _tds__GetDot1XConfigurationsResponse.
class _tds__GetDot1XConfigurationsResponse;

//  Forward declaration of class _tds__DeleteDot1XConfiguration.
class _tds__DeleteDot1XConfiguration;

//  Forward declaration of class _tds__DeleteDot1XConfigurationResponse.
class _tds__DeleteDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetRelayOutputs.
class _tds__GetRelayOutputs;

//  Forward declaration of class _tds__GetRelayOutputsResponse.
class _tds__GetRelayOutputsResponse;

//  Forward declaration of class _tds__SetRelayOutputSettings.
class _tds__SetRelayOutputSettings;

//  Forward declaration of class _tds__SetRelayOutputSettingsResponse.
class _tds__SetRelayOutputSettingsResponse;

//  Forward declaration of class _tds__SetRelayOutputState.
class _tds__SetRelayOutputState;

//  Forward declaration of class _tds__SetRelayOutputStateResponse.
class _tds__SetRelayOutputStateResponse;

//  Forward declaration of class _tds__SendAuxiliaryCommand.
class _tds__SendAuxiliaryCommand;

//  Forward declaration of class _tds__SendAuxiliaryCommandResponse.
class _tds__SendAuxiliaryCommandResponse;

//  Forward declaration of class _tds__GetDot11Capabilities.
class _tds__GetDot11Capabilities;

//  Forward declaration of class _tds__GetDot11CapabilitiesResponse.
class _tds__GetDot11CapabilitiesResponse;

//  Forward declaration of class _tds__GetDot11Status.
class _tds__GetDot11Status;

//  Forward declaration of class _tds__GetDot11StatusResponse.
class _tds__GetDot11StatusResponse;

//  Forward declaration of class _tds__ScanAvailableDot11Networks.
class _tds__ScanAvailableDot11Networks;

//  Forward declaration of class _tds__ScanAvailableDot11NetworksResponse.
class _tds__ScanAvailableDot11NetworksResponse;

//  Forward declaration of class _tds__GetSystemUris.
class _tds__GetSystemUris;

//  Forward declaration of class _tds__GetSystemUrisResponse.
class _tds__GetSystemUrisResponse;

//  Forward declaration of class _tds__StartFirmwareUpgrade.
class _tds__StartFirmwareUpgrade;

//  Forward declaration of class _tds__StartFirmwareUpgradeResponse.
class _tds__StartFirmwareUpgradeResponse;

//  Forward declaration of class _tds__StartSystemRestore.
class _tds__StartSystemRestore;

//  Forward declaration of class _tds__StartSystemRestoreResponse.
class _tds__StartSystemRestoreResponse;

//  Forward declaration of class tt__DeviceEntity.
class tt__DeviceEntity;

//  Forward declaration of class tt__IntRectangle.
class tt__IntRectangle;

//  Forward declaration of class tt__IntRectangleRange.
class tt__IntRectangleRange;

//  Forward declaration of class tt__IntRange.
class tt__IntRange;

//  Forward declaration of class tt__FloatRange.
class tt__FloatRange;

//  Forward declaration of class tt__DurationRange.
class tt__DurationRange;

//  Forward declaration of class tt__IntList.
class tt__IntList;

//  Forward declaration of class tt__FloatList.
class tt__FloatList;

//  Forward declaration of class tt__AnyHolder.
class tt__AnyHolder;

//  Forward declaration of class tt__VideoSource.
class tt__VideoSource;

//  Forward declaration of class tt__VideoSourceExtension.
class tt__VideoSourceExtension;

//  Forward declaration of class tt__VideoSourceExtension2.
class tt__VideoSourceExtension2;

//  Forward declaration of class tt__AudioSource.
class tt__AudioSource;

//  Forward declaration of class tt__Profile.
class tt__Profile;

//  Forward declaration of class tt__ProfileExtension.
class tt__ProfileExtension;

//  Forward declaration of class tt__ProfileExtension2.
class tt__ProfileExtension2;

//  Forward declaration of class tt__ConfigurationEntity.
class tt__ConfigurationEntity;

//  Forward declaration of class tt__VideoSourceConfiguration.
class tt__VideoSourceConfiguration;

//  Forward declaration of class tt__VideoSourceConfigurationExtension.
class tt__VideoSourceConfigurationExtension;

//  Forward declaration of class tt__VideoSourceConfigurationExtension2.
class tt__VideoSourceConfigurationExtension2;

//  Forward declaration of class tt__Rotate.
class tt__Rotate;

//  Forward declaration of class tt__RotateExtension.
class tt__RotateExtension;

//  Forward declaration of class tt__VideoSourceConfigurationOptions.
class tt__VideoSourceConfigurationOptions;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension.
class tt__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension2.
class tt__VideoSourceConfigurationOptionsExtension2;

//  Forward declaration of class tt__RotateOptions.
class tt__RotateOptions;

//  Forward declaration of class tt__RotateOptionsExtension.
class tt__RotateOptionsExtension;

//  Forward declaration of class tt__VideoEncoderConfiguration.
class tt__VideoEncoderConfiguration;

//  Forward declaration of class tt__VideoResolution.
class tt__VideoResolution;

//  Forward declaration of class tt__VideoRateControl.
class tt__VideoRateControl;

//  Forward declaration of class tt__Mpeg4Configuration.
class tt__Mpeg4Configuration;

//  Forward declaration of class tt__H264Configuration.
class tt__H264Configuration;

//  Forward declaration of class tt__VideoEncoderConfigurationOptions.
class tt__VideoEncoderConfigurationOptions;

//  Forward declaration of class tt__VideoEncoderOptionsExtension.
class tt__VideoEncoderOptionsExtension;

//  Forward declaration of class tt__VideoEncoderOptionsExtension2.
class tt__VideoEncoderOptionsExtension2;

//  Forward declaration of class tt__JpegOptions.
class tt__JpegOptions;

//  Forward declaration of class tt__JpegOptions2.
class tt__JpegOptions2;

//  Forward declaration of class tt__Mpeg4Options.
class tt__Mpeg4Options;

//  Forward declaration of class tt__Mpeg4Options2.
class tt__Mpeg4Options2;

//  Forward declaration of class tt__H264Options.
class tt__H264Options;

//  Forward declaration of class tt__H264Options2.
class tt__H264Options2;

//  Forward declaration of class tt__AudioSourceConfiguration.
class tt__AudioSourceConfiguration;

//  Forward declaration of class tt__AudioSourceConfigurationOptions.
class tt__AudioSourceConfigurationOptions;

//  Forward declaration of class tt__AudioSourceOptionsExtension.
class tt__AudioSourceOptionsExtension;

//  Forward declaration of class tt__AudioEncoderConfiguration.
class tt__AudioEncoderConfiguration;

//  Forward declaration of class tt__AudioEncoderConfigurationOptions.
class tt__AudioEncoderConfigurationOptions;

//  Forward declaration of class tt__AudioEncoderConfigurationOption.
class tt__AudioEncoderConfigurationOption;

//  Forward declaration of class tt__VideoAnalyticsConfiguration.
class tt__VideoAnalyticsConfiguration;

//  Forward declaration of class tt__MetadataConfiguration.
class tt__MetadataConfiguration;

//  Forward declaration of class tt__MetadataConfigurationExtension.
class tt__MetadataConfigurationExtension;

//  Forward declaration of class tt__PTZFilter.
class tt__PTZFilter;

//  Forward declaration of class tt__EventSubscription.
class tt__EventSubscription;

//  Forward declaration of class tt__MetadataConfigurationOptions.
class tt__MetadataConfigurationOptions;

//  Forward declaration of class tt__PTZStatusFilterOptions.
class tt__PTZStatusFilterOptions;

//  Forward declaration of class tt__PTZStatusFilterOptionsExtension.
class tt__PTZStatusFilterOptionsExtension;

//  Forward declaration of class tt__VideoOutput.
class tt__VideoOutput;

//  Forward declaration of class tt__VideoOutputExtension.
class tt__VideoOutputExtension;

//  Forward declaration of class tt__VideoOutputConfiguration.
class tt__VideoOutputConfiguration;

//  Forward declaration of class tt__VideoOutputConfigurationOptions.
class tt__VideoOutputConfigurationOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptions.
class tt__VideoDecoderConfigurationOptions;

//  Forward declaration of class tt__H264DecOptions.
class tt__H264DecOptions;

//  Forward declaration of class tt__JpegDecOptions.
class tt__JpegDecOptions;

//  Forward declaration of class tt__Mpeg4DecOptions.
class tt__Mpeg4DecOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptionsExtension.
class tt__VideoDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__AudioOutput.
class tt__AudioOutput;

//  Forward declaration of class tt__AudioOutputConfiguration.
class tt__AudioOutputConfiguration;

//  Forward declaration of class tt__AudioOutputConfigurationOptions.
class tt__AudioOutputConfigurationOptions;

//  Forward declaration of class tt__AudioDecoderConfiguration.
class tt__AudioDecoderConfiguration;

//  Forward declaration of class tt__AudioDecoderConfigurationOptions.
class tt__AudioDecoderConfigurationOptions;

//  Forward declaration of class tt__G711DecOptions.
class tt__G711DecOptions;

//  Forward declaration of class tt__AACDecOptions.
class tt__AACDecOptions;

//  Forward declaration of class tt__G726DecOptions.
class tt__G726DecOptions;

//  Forward declaration of class tt__AudioDecoderConfigurationOptionsExtension.
class tt__AudioDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__MulticastConfiguration.
class tt__MulticastConfiguration;

//  Forward declaration of class tt__StreamSetup.
class tt__StreamSetup;

//  Forward declaration of class tt__Transport.
class tt__Transport;

//  Forward declaration of class tt__MediaUri.
class tt__MediaUri;

//  Forward declaration of class tt__Scope.
class tt__Scope;

//  Forward declaration of class tt__NetworkInterface.
class tt__NetworkInterface;

//  Forward declaration of class tt__NetworkInterfaceExtension.
class tt__NetworkInterfaceExtension;

//  Forward declaration of class tt__Dot3Configuration.
class tt__Dot3Configuration;

//  Forward declaration of class tt__NetworkInterfaceExtension2.
class tt__NetworkInterfaceExtension2;

//  Forward declaration of class tt__NetworkInterfaceLink.
class tt__NetworkInterfaceLink;

//  Forward declaration of class tt__NetworkInterfaceConnectionSetting.
class tt__NetworkInterfaceConnectionSetting;

//  Forward declaration of class tt__NetworkInterfaceInfo.
class tt__NetworkInterfaceInfo;

//  Forward declaration of class tt__IPv6NetworkInterface.
class tt__IPv6NetworkInterface;

//  Forward declaration of class tt__IPv4NetworkInterface.
class tt__IPv4NetworkInterface;

//  Forward declaration of class tt__IPv4Configuration.
class tt__IPv4Configuration;

//  Forward declaration of class tt__IPv6Configuration.
class tt__IPv6Configuration;

//  Forward declaration of class tt__IPv6ConfigurationExtension.
class tt__IPv6ConfigurationExtension;

//  Forward declaration of class tt__NetworkProtocol.
class tt__NetworkProtocol;

//  Forward declaration of class tt__NetworkProtocolExtension.
class tt__NetworkProtocolExtension;

//  Forward declaration of class tt__NetworkHost.
class tt__NetworkHost;

//  Forward declaration of class tt__NetworkHostExtension.
class tt__NetworkHostExtension;

//  Forward declaration of class tt__IPAddress.
class tt__IPAddress;

//  Forward declaration of class tt__PrefixedIPv4Address.
class tt__PrefixedIPv4Address;

//  Forward declaration of class tt__PrefixedIPv6Address.
class tt__PrefixedIPv6Address;

//  Forward declaration of class tt__HostnameInformation.
class tt__HostnameInformation;

//  Forward declaration of class tt__HostnameInformationExtension.
class tt__HostnameInformationExtension;

//  Forward declaration of class tt__DNSInformation.
class tt__DNSInformation;

//  Forward declaration of class tt__DNSInformationExtension.
class tt__DNSInformationExtension;

//  Forward declaration of class tt__NTPInformation.
class tt__NTPInformation;

//  Forward declaration of class tt__NTPInformationExtension.
class tt__NTPInformationExtension;

//  Forward declaration of class tt__DynamicDNSInformation.
class tt__DynamicDNSInformation;

//  Forward declaration of class tt__DynamicDNSInformationExtension.
class tt__DynamicDNSInformationExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfiguration.
class tt__NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension.
class tt__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class tt__IPv6NetworkInterfaceSetConfiguration.
class tt__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__IPv4NetworkInterfaceSetConfiguration.
class tt__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkGateway.
class tt__NetworkGateway;

//  Forward declaration of class tt__NetworkZeroConfiguration.
class tt__NetworkZeroConfiguration;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension.
class tt__NetworkZeroConfigurationExtension;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension2.
class tt__NetworkZeroConfigurationExtension2;

//  Forward declaration of class tt__IPAddressFilter.
class tt__IPAddressFilter;

//  Forward declaration of class tt__IPAddressFilterExtension.
class tt__IPAddressFilterExtension;

//  Forward declaration of class tt__Dot11Configuration.
class tt__Dot11Configuration;

//  Forward declaration of class tt__Dot11SecurityConfiguration.
class tt__Dot11SecurityConfiguration;

//  Forward declaration of class tt__Dot11SecurityConfigurationExtension.
class tt__Dot11SecurityConfigurationExtension;

//  Forward declaration of class tt__Dot11PSKSet.
class tt__Dot11PSKSet;

//  Forward declaration of class tt__Dot11PSKSetExtension.
class tt__Dot11PSKSetExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension2.
class tt__NetworkInterfaceSetConfigurationExtension2;

//  Forward declaration of class tt__Dot11Capabilities.
class tt__Dot11Capabilities;

//  Forward declaration of class tt__Dot11Status.
class tt__Dot11Status;

//  Forward declaration of class tt__Dot11AvailableNetworks.
class tt__Dot11AvailableNetworks;

//  Forward declaration of class tt__Dot11AvailableNetworksExtension.
class tt__Dot11AvailableNetworksExtension;

//  Forward declaration of class tt__Capabilities.
class tt__Capabilities;

//  Forward declaration of class tt__CapabilitiesExtension.
class tt__CapabilitiesExtension;

//  Forward declaration of class tt__CapabilitiesExtension2.
class tt__CapabilitiesExtension2;

//  Forward declaration of class tt__AnalyticsCapabilities.
class tt__AnalyticsCapabilities;

//  Forward declaration of class tt__DeviceCapabilities.
class tt__DeviceCapabilities;

//  Forward declaration of class tt__DeviceCapabilitiesExtension.
class tt__DeviceCapabilitiesExtension;

//  Forward declaration of class tt__EventCapabilities.
class tt__EventCapabilities;

//  Forward declaration of class tt__IOCapabilities.
class tt__IOCapabilities;

//  Forward declaration of class tt__IOCapabilitiesExtension.
class tt__IOCapabilitiesExtension;

//  Forward declaration of class tt__IOCapabilitiesExtension2.
class tt__IOCapabilitiesExtension2;

//  Forward declaration of class tt__MediaCapabilities.
class tt__MediaCapabilities;

//  Forward declaration of class tt__MediaCapabilitiesExtension.
class tt__MediaCapabilitiesExtension;

//  Forward declaration of class tt__RealTimeStreamingCapabilities.
class tt__RealTimeStreamingCapabilities;

//  Forward declaration of class tt__RealTimeStreamingCapabilitiesExtension.
class tt__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class tt__ProfileCapabilities.
class tt__ProfileCapabilities;

//  Forward declaration of class tt__NetworkCapabilities.
class tt__NetworkCapabilities;

//  Forward declaration of class tt__NetworkCapabilitiesExtension.
class tt__NetworkCapabilitiesExtension;

//  Forward declaration of class tt__NetworkCapabilitiesExtension2.
class tt__NetworkCapabilitiesExtension2;

//  Forward declaration of class tt__SecurityCapabilities.
class tt__SecurityCapabilities;

//  Forward declaration of class tt__SecurityCapabilitiesExtension.
class tt__SecurityCapabilitiesExtension;

//  Forward declaration of class tt__SecurityCapabilitiesExtension2.
class tt__SecurityCapabilitiesExtension2;

//  Forward declaration of class tt__SystemCapabilities.
class tt__SystemCapabilities;

//  Forward declaration of class tt__SystemCapabilitiesExtension.
class tt__SystemCapabilitiesExtension;

//  Forward declaration of class tt__SystemCapabilitiesExtension2.
class tt__SystemCapabilitiesExtension2;

//  Forward declaration of class tt__OnvifVersion.
class tt__OnvifVersion;

//  Forward declaration of class tt__ImagingCapabilities.
class tt__ImagingCapabilities;

//  Forward declaration of class tt__PTZCapabilities.
class tt__PTZCapabilities;

//  Forward declaration of class tt__DeviceIOCapabilities.
class tt__DeviceIOCapabilities;

//  Forward declaration of class tt__DisplayCapabilities.
class tt__DisplayCapabilities;

//  Forward declaration of class tt__RecordingCapabilities.
class tt__RecordingCapabilities;

//  Forward declaration of class tt__SearchCapabilities.
class tt__SearchCapabilities;

//  Forward declaration of class tt__ReplayCapabilities.
class tt__ReplayCapabilities;

//  Forward declaration of class tt__ReceiverCapabilities.
class tt__ReceiverCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceCapabilities.
class tt__AnalyticsDeviceCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceExtension.
class tt__AnalyticsDeviceExtension;

//  Forward declaration of class tt__SystemLog.
class tt__SystemLog;

//  Forward declaration of class tt__SupportInformation.
class tt__SupportInformation;

//  Forward declaration of class tt__BinaryData.
class tt__BinaryData;

//  Forward declaration of class tt__AttachmentData.
class tt__AttachmentData;

//  Forward declaration of class tt__BackupFile.
class tt__BackupFile;

//  Forward declaration of class tt__SystemLogUriList.
class tt__SystemLogUriList;

//  Forward declaration of class tt__SystemLogUri.
class tt__SystemLogUri;

//  Forward declaration of class tt__SystemDateTime.
class tt__SystemDateTime;

//  Forward declaration of class tt__SystemDateTimeExtension.
class tt__SystemDateTimeExtension;

//  Forward declaration of class tt__DateTime.
class tt__DateTime;

//  Forward declaration of class tt__Date.
class tt__Date;

//  Forward declaration of class tt__Time.
class tt__Time;

//  Forward declaration of class tt__TimeZone.
class tt__TimeZone;

//  Forward declaration of class tt__RemoteUser.
class tt__RemoteUser;

//  Forward declaration of class tt__User.
class tt__User;

//  Forward declaration of class tt__UserExtension.
class tt__UserExtension;

//  Forward declaration of class tt__CertificateGenerationParameters.
class tt__CertificateGenerationParameters;

//  Forward declaration of class tt__CertificateGenerationParametersExtension.
class tt__CertificateGenerationParametersExtension;

//  Forward declaration of class tt__Certificate.
class tt__Certificate;

//  Forward declaration of class tt__CertificateStatus.
class tt__CertificateStatus;

//  Forward declaration of class tt__CertificateWithPrivateKey.
class tt__CertificateWithPrivateKey;

//  Forward declaration of class tt__CertificateInformation.
class tt__CertificateInformation;

//  Forward declaration of class tt__CertificateUsage.
class tt__CertificateUsage;

//  Forward declaration of class tt__CertificateInformationExtension.
class tt__CertificateInformationExtension;

//  Forward declaration of class tt__Dot1XConfiguration.
class tt__Dot1XConfiguration;

//  Forward declaration of class tt__Dot1XConfigurationExtension.
class tt__Dot1XConfigurationExtension;

//  Forward declaration of class tt__EAPMethodConfiguration.
class tt__EAPMethodConfiguration;

//  Forward declaration of class tt__EapMethodExtension.
class tt__EapMethodExtension;

//  Forward declaration of class tt__TLSConfiguration.
class tt__TLSConfiguration;

//  Forward declaration of class tt__GenericEapPwdConfigurationExtension.
class tt__GenericEapPwdConfigurationExtension;

//  Forward declaration of class tt__RelayOutputSettings.
class tt__RelayOutputSettings;

//  Forward declaration of class tt__RelayOutput.
class tt__RelayOutput;

//  Forward declaration of class tt__DigitalInput.
class tt__DigitalInput;

//  Forward declaration of class tt__PTZNode.
class tt__PTZNode;

//  Forward declaration of class tt__PTZNodeExtension.
class tt__PTZNodeExtension;

//  Forward declaration of class tt__PTZNodeExtension2.
class tt__PTZNodeExtension2;

//  Forward declaration of class tt__PTZPresetTourSupported.
class tt__PTZPresetTourSupported;

//  Forward declaration of class tt__PTZPresetTourSupportedExtension.
class tt__PTZPresetTourSupportedExtension;

//  Forward declaration of class tt__PTZConfiguration.
class tt__PTZConfiguration;

//  Forward declaration of class tt__PTZConfigurationExtension.
class tt__PTZConfigurationExtension;

//  Forward declaration of class tt__PTZConfigurationExtension2.
class tt__PTZConfigurationExtension2;

//  Forward declaration of class tt__PTControlDirection.
class tt__PTControlDirection;

//  Forward declaration of class tt__PTControlDirectionExtension.
class tt__PTControlDirectionExtension;

//  Forward declaration of class tt__EFlip.
class tt__EFlip;

//  Forward declaration of class tt__Reverse.
class tt__Reverse;

//  Forward declaration of class tt__PTZConfigurationOptions.
class tt__PTZConfigurationOptions;

//  Forward declaration of class tt__PTZConfigurationOptions2.
class tt__PTZConfigurationOptions2;

//  Forward declaration of class tt__PTControlDirectionOptions.
class tt__PTControlDirectionOptions;

//  Forward declaration of class tt__PTControlDirectionOptionsExtension.
class tt__PTControlDirectionOptionsExtension;

//  Forward declaration of class tt__EFlipOptions.
class tt__EFlipOptions;

//  Forward declaration of class tt__EFlipOptionsExtension.
class tt__EFlipOptionsExtension;

//  Forward declaration of class tt__ReverseOptions.
class tt__ReverseOptions;

//  Forward declaration of class tt__ReverseOptionsExtension.
class tt__ReverseOptionsExtension;

//  Forward declaration of class tt__PanTiltLimits.
class tt__PanTiltLimits;

//  Forward declaration of class tt__ZoomLimits.
class tt__ZoomLimits;

//  Forward declaration of class tt__PTZSpaces.
class tt__PTZSpaces;

//  Forward declaration of class tt__PTZSpacesExtension.
class tt__PTZSpacesExtension;

//  Forward declaration of class tt__Space2DDescription.
class tt__Space2DDescription;

//  Forward declaration of class tt__Space1DDescription.
class tt__Space1DDescription;

//  Forward declaration of class tt__Vector2D.
class tt__Vector2D;

//  Forward declaration of class tt__Vector1D.
class tt__Vector1D;

//  Forward declaration of class tt__PTZVector.
class tt__PTZVector;

//  Forward declaration of class tt__PTZSpeed.
class tt__PTZSpeed;

//  Forward declaration of class tt__PTZStatus.
class tt__PTZStatus;

//  Forward declaration of class tt__PTZPreset.
class tt__PTZPreset;

//  Forward declaration of class tt__PTZMoveStatus.
class tt__PTZMoveStatus;

//  Forward declaration of class tt__PresetTour.
class tt__PresetTour;

//  Forward declaration of class tt__PTZPresetTourExtension.
class tt__PTZPresetTourExtension;

//  Forward declaration of class tt__PTZPresetTourSpot.
class tt__PTZPresetTourSpot;

//  Forward declaration of class tt__PTZPresetTourSpotExtension.
class tt__PTZPresetTourSpotExtension;

//  Forward declaration of class tt__PTZPresetTourPresetDetail.
class tt__PTZPresetTourPresetDetail;

//  Forward declaration of class tt__PTZPresetTourTypeExtension.
class tt__PTZPresetTourTypeExtension;

//  Forward declaration of class tt__PTZPresetTourStatus.
class tt__PTZPresetTourStatus;

//  Forward declaration of class tt__PTZPresetTourStatusExtension.
class tt__PTZPresetTourStatusExtension;

//  Forward declaration of class tt__PTZPresetTourStartingCondition.
class tt__PTZPresetTourStartingCondition;

//  Forward declaration of class tt__PTZPresetTourStartingConditionExtension.
class tt__PTZPresetTourStartingConditionExtension;

//  Forward declaration of class tt__PTZPresetTourOptions.
class tt__PTZPresetTourOptions;

//  Forward declaration of class tt__PTZPresetTourSpotOptions.
class tt__PTZPresetTourSpotOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptions.
class tt__PTZPresetTourPresetDetailOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptionsExtension.
class tt__PTZPresetTourPresetDetailOptionsExtension;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptions.
class tt__PTZPresetTourStartingConditionOptions;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptionsExtension.
class tt__PTZPresetTourStartingConditionOptionsExtension;

//  Forward declaration of class tt__ImagingStatus.
class tt__ImagingStatus;

//  Forward declaration of class tt__FocusStatus.
class tt__FocusStatus;

//  Forward declaration of class tt__FocusConfiguration.
class tt__FocusConfiguration;

//  Forward declaration of class tt__ImagingSettings.
class tt__ImagingSettings;

//  Forward declaration of class tt__ImagingSettingsExtension.
class tt__ImagingSettingsExtension;

//  Forward declaration of class tt__Exposure.
class tt__Exposure;

//  Forward declaration of class tt__WideDynamicRange.
class tt__WideDynamicRange;

//  Forward declaration of class tt__BacklightCompensation.
class tt__BacklightCompensation;

//  Forward declaration of class tt__ImagingOptions.
class tt__ImagingOptions;

//  Forward declaration of class tt__WideDynamicRangeOptions.
class tt__WideDynamicRangeOptions;

//  Forward declaration of class tt__BacklightCompensationOptions.
class tt__BacklightCompensationOptions;

//  Forward declaration of class tt__FocusOptions.
class tt__FocusOptions;

//  Forward declaration of class tt__ExposureOptions.
class tt__ExposureOptions;

//  Forward declaration of class tt__WhiteBalanceOptions.
class tt__WhiteBalanceOptions;

//  Forward declaration of class tt__FocusMove.
class tt__FocusMove;

//  Forward declaration of class tt__AbsoluteFocus.
class tt__AbsoluteFocus;

//  Forward declaration of class tt__RelativeFocus.
class tt__RelativeFocus;

//  Forward declaration of class tt__ContinuousFocus.
class tt__ContinuousFocus;

//  Forward declaration of class tt__MoveOptions.
class tt__MoveOptions;

//  Forward declaration of class tt__AbsoluteFocusOptions.
class tt__AbsoluteFocusOptions;

//  Forward declaration of class tt__RelativeFocusOptions.
class tt__RelativeFocusOptions;

//  Forward declaration of class tt__ContinuousFocusOptions.
class tt__ContinuousFocusOptions;

//  Forward declaration of class tt__WhiteBalance.
class tt__WhiteBalance;

//  Forward declaration of class tt__ImagingStatus20.
class tt__ImagingStatus20;

//  Forward declaration of class tt__ImagingStatus20Extension.
class tt__ImagingStatus20Extension;

//  Forward declaration of class tt__FocusStatus20.
class tt__FocusStatus20;

//  Forward declaration of class tt__FocusStatus20Extension.
class tt__FocusStatus20Extension;

//  Forward declaration of class tt__ImagingSettings20.
class tt__ImagingSettings20;

//  Forward declaration of class tt__ImagingSettingsExtension20.
class tt__ImagingSettingsExtension20;

//  Forward declaration of class tt__ImagingSettingsExtension202.
class tt__ImagingSettingsExtension202;

//  Forward declaration of class tt__ImageStabilization.
class tt__ImageStabilization;

//  Forward declaration of class tt__ImageStabilizationExtension.
class tt__ImageStabilizationExtension;

//  Forward declaration of class tt__WideDynamicRange20.
class tt__WideDynamicRange20;

//  Forward declaration of class tt__BacklightCompensation20.
class tt__BacklightCompensation20;

//  Forward declaration of class tt__Exposure20.
class tt__Exposure20;

//  Forward declaration of class tt__ImagingOptions20.
class tt__ImagingOptions20;

//  Forward declaration of class tt__ImagingOptions20Extension.
class tt__ImagingOptions20Extension;

//  Forward declaration of class tt__ImagingOptions20Extension2.
class tt__ImagingOptions20Extension2;

//  Forward declaration of class tt__ImageStabilizationOptions.
class tt__ImageStabilizationOptions;

//  Forward declaration of class tt__ImageStabilizationOptionsExtension.
class tt__ImageStabilizationOptionsExtension;

//  Forward declaration of class tt__WideDynamicRangeOptions20.
class tt__WideDynamicRangeOptions20;

//  Forward declaration of class tt__BacklightCompensationOptions20.
class tt__BacklightCompensationOptions20;

//  Forward declaration of class tt__ExposureOptions20.
class tt__ExposureOptions20;

//  Forward declaration of class tt__MoveOptions20.
class tt__MoveOptions20;

//  Forward declaration of class tt__RelativeFocusOptions20.
class tt__RelativeFocusOptions20;

//  Forward declaration of class tt__WhiteBalance20.
class tt__WhiteBalance20;

//  Forward declaration of class tt__WhiteBalance20Extension.
class tt__WhiteBalance20Extension;

//  Forward declaration of class tt__FocusConfiguration20.
class tt__FocusConfiguration20;

//  Forward declaration of class tt__FocusConfiguration20Extension.
class tt__FocusConfiguration20Extension;

//  Forward declaration of class tt__WhiteBalanceOptions20.
class tt__WhiteBalanceOptions20;

//  Forward declaration of class tt__WhiteBalanceOptions20Extension.
class tt__WhiteBalanceOptions20Extension;

//  Forward declaration of class tt__FocusOptions20.
class tt__FocusOptions20;

//  Forward declaration of class tt__FocusOptions20Extension.
class tt__FocusOptions20Extension;

//  Forward declaration of class tt__MessageExtension.
class tt__MessageExtension;

//  Forward declaration of class tt__ItemList.
class tt__ItemList;

//  Forward declaration of class tt__ItemListExtension.
class tt__ItemListExtension;

//  Forward declaration of class tt__MessageDescription.
class tt__MessageDescription;

//  Forward declaration of class tt__MessageDescriptionExtension.
class tt__MessageDescriptionExtension;

//  Forward declaration of class tt__ItemListDescription.
class tt__ItemListDescription;

//  Forward declaration of class tt__ItemListDescriptionExtension.
class tt__ItemListDescriptionExtension;

//  Forward declaration of class tt__Vector.
class tt__Vector;

//  Forward declaration of class tt__Rectangle.
class tt__Rectangle;

//  Forward declaration of class tt__Polygon.
class tt__Polygon;

//  Forward declaration of class tt__Polyline.
class tt__Polyline;

//  Forward declaration of class tt__Color.
class tt__Color;

//  Forward declaration of class tt__ColorCovariance.
class tt__ColorCovariance;

//  Forward declaration of class tt__Appearance.
class tt__Appearance;

//  Forward declaration of class tt__AppearanceExtension.
class tt__AppearanceExtension;

//  Forward declaration of class tt__ShapeDescriptor.
class tt__ShapeDescriptor;

//  Forward declaration of class tt__ShapeDescriptorExtension.
class tt__ShapeDescriptorExtension;

//  Forward declaration of class tt__ColorDescriptor.
class tt__ColorDescriptor;

//  Forward declaration of class tt__ColorDescriptorExtension.
class tt__ColorDescriptorExtension;

//  Forward declaration of class tt__ClassDescriptor.
class tt__ClassDescriptor;

//  Forward declaration of class tt__ClassDescriptorExtension.
class tt__ClassDescriptorExtension;

//  Forward declaration of class tt__ClassDescriptorExtension2.
class tt__ClassDescriptorExtension2;

//  Forward declaration of class tt__OtherType.
class tt__OtherType;

//  Forward declaration of class tt__Object.
class tt__Object;

//  Forward declaration of class tt__ObjectExtension.
class tt__ObjectExtension;

//  Forward declaration of class tt__Transformation.
class tt__Transformation;

//  Forward declaration of class tt__TransformationExtension.
class tt__TransformationExtension;

//  Forward declaration of class tt__Frame.
class tt__Frame;

//  Forward declaration of class tt__FrameExtension.
class tt__FrameExtension;

//  Forward declaration of class tt__FrameExtension2.
class tt__FrameExtension2;

//  Forward declaration of class tt__Merge.
class tt__Merge;

//  Forward declaration of class tt__Split.
class tt__Split;

//  Forward declaration of class tt__Rename.
class tt__Rename;

//  Forward declaration of class tt__ObjectId.
class tt__ObjectId;

//  Forward declaration of class tt__Behaviour.
class tt__Behaviour;

//  Forward declaration of class tt__BehaviourExtension.
class tt__BehaviourExtension;

//  Forward declaration of class tt__ObjectTree.
class tt__ObjectTree;

//  Forward declaration of class tt__ObjectTreeExtension.
class tt__ObjectTreeExtension;

//  Forward declaration of class tt__MotionInCells.
class tt__MotionInCells;

//  Forward declaration of class tt__AnalyticsEngineConfiguration.
class tt__AnalyticsEngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineConfigurationExtension.
class tt__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class tt__RuleEngineConfiguration.
class tt__RuleEngineConfiguration;

//  Forward declaration of class tt__RuleEngineConfigurationExtension.
class tt__RuleEngineConfigurationExtension;

//  Forward declaration of class tt__Config.
class tt__Config;

//  Forward declaration of class tt__ConfigDescription.
class tt__ConfigDescription;

//  Forward declaration of class tt__ConfigDescriptionExtension.
class tt__ConfigDescriptionExtension;

//  Forward declaration of class tt__SupportedRules.
class tt__SupportedRules;

//  Forward declaration of class tt__SupportedRulesExtension.
class tt__SupportedRulesExtension;

//  Forward declaration of class tt__SupportedAnalyticsModules.
class tt__SupportedAnalyticsModules;

//  Forward declaration of class tt__SupportedAnalyticsModulesExtension.
class tt__SupportedAnalyticsModulesExtension;

//  Forward declaration of class tt__PolygonConfiguration.
class tt__PolygonConfiguration;

//  Forward declaration of class tt__PolylineArray.
class tt__PolylineArray;

//  Forward declaration of class tt__PolylineArrayExtension.
class tt__PolylineArrayExtension;

//  Forward declaration of class tt__PolylineArrayConfiguration.
class tt__PolylineArrayConfiguration;

//  Forward declaration of class tt__MotionExpression.
class tt__MotionExpression;

//  Forward declaration of class tt__MotionExpressionConfiguration.
class tt__MotionExpressionConfiguration;

//  Forward declaration of class tt__CellLayout.
class tt__CellLayout;

//  Forward declaration of class tt__MetadataStream.
class tt__MetadataStream;

//  Forward declaration of class tt__MetadataStreamExtension.
class tt__MetadataStreamExtension;

//  Forward declaration of class tt__VideoAnalyticsStream.
class tt__VideoAnalyticsStream;

//  Forward declaration of class tt__VideoAnalyticsStreamExtension.
class tt__VideoAnalyticsStreamExtension;

//  Forward declaration of class tt__PTZStream.
class tt__PTZStream;

//  Forward declaration of class tt__PTZStreamExtension.
class tt__PTZStreamExtension;

//  Forward declaration of class tt__EventStream.
class tt__EventStream;

//  Forward declaration of class tt__EventStreamExtension.
class tt__EventStreamExtension;

//  Forward declaration of class tt__PaneConfiguration.
class tt__PaneConfiguration;

//  Forward declaration of class tt__PaneLayout.
class tt__PaneLayout;

//  Forward declaration of class tt__Layout.
class tt__Layout;

//  Forward declaration of class tt__LayoutExtension.
class tt__LayoutExtension;

//  Forward declaration of class tt__CodingCapabilities.
class tt__CodingCapabilities;

//  Forward declaration of class tt__LayoutOptions.
class tt__LayoutOptions;

//  Forward declaration of class tt__LayoutOptionsExtension.
class tt__LayoutOptionsExtension;

//  Forward declaration of class tt__PaneLayoutOptions.
class tt__PaneLayoutOptions;

//  Forward declaration of class tt__PaneOptionExtension.
class tt__PaneOptionExtension;

//  Forward declaration of class tt__Receiver.
class tt__Receiver;

//  Forward declaration of class tt__ReceiverConfiguration.
class tt__ReceiverConfiguration;

//  Forward declaration of class tt__ReceiverStateInformation.
class tt__ReceiverStateInformation;

//  Forward declaration of class tt__SourceReference.
class tt__SourceReference;

//  Forward declaration of class tt__DateTimeRange.
class tt__DateTimeRange;

//  Forward declaration of class tt__RecordingSummary.
class tt__RecordingSummary;

//  Forward declaration of class tt__SearchScope.
class tt__SearchScope;

//  Forward declaration of class tt__SearchScopeExtension.
class tt__SearchScopeExtension;

//  Forward declaration of class tt__EventFilter.
class tt__EventFilter;

//  Forward declaration of class tt__PTZPositionFilter.
class tt__PTZPositionFilter;

//  Forward declaration of class tt__MetadataFilter.
class tt__MetadataFilter;

//  Forward declaration of class tt__FindRecordingResultList.
class tt__FindRecordingResultList;

//  Forward declaration of class tt__FindEventResultList.
class tt__FindEventResultList;

//  Forward declaration of class tt__FindEventResult.
class tt__FindEventResult;

//  Forward declaration of class tt__FindPTZPositionResultList.
class tt__FindPTZPositionResultList;

//  Forward declaration of class tt__FindPTZPositionResult.
class tt__FindPTZPositionResult;

//  Forward declaration of class tt__FindMetadataResultList.
class tt__FindMetadataResultList;

//  Forward declaration of class tt__FindMetadataResult.
class tt__FindMetadataResult;

//  Forward declaration of class tt__RecordingInformation.
class tt__RecordingInformation;

//  Forward declaration of class tt__RecordingSourceInformation.
class tt__RecordingSourceInformation;

//  Forward declaration of class tt__TrackInformation.
class tt__TrackInformation;

//  Forward declaration of class tt__MediaAttributes.
class tt__MediaAttributes;

//  Forward declaration of class tt__TrackAttributes.
class tt__TrackAttributes;

//  Forward declaration of class tt__TrackAttributesExtension.
class tt__TrackAttributesExtension;

//  Forward declaration of class tt__VideoAttributes.
class tt__VideoAttributes;

//  Forward declaration of class tt__AudioAttributes.
class tt__AudioAttributes;

//  Forward declaration of class tt__MetadataAttributes.
class tt__MetadataAttributes;

//  Forward declaration of class tt__RecordingConfiguration.
class tt__RecordingConfiguration;

//  Forward declaration of class tt__TrackConfiguration.
class tt__TrackConfiguration;

//  Forward declaration of class tt__GetRecordingsResponseItem.
class tt__GetRecordingsResponseItem;

//  Forward declaration of class tt__GetTracksResponseList.
class tt__GetTracksResponseList;

//  Forward declaration of class tt__GetTracksResponseItem.
class tt__GetTracksResponseItem;

//  Forward declaration of class tt__RecordingJobConfiguration.
class tt__RecordingJobConfiguration;

//  Forward declaration of class tt__RecordingJobConfigurationExtension.
class tt__RecordingJobConfigurationExtension;

//  Forward declaration of class tt__RecordingJobSource.
class tt__RecordingJobSource;

//  Forward declaration of class tt__RecordingJobSourceExtension.
class tt__RecordingJobSourceExtension;

//  Forward declaration of class tt__RecordingJobTrack.
class tt__RecordingJobTrack;

//  Forward declaration of class tt__RecordingJobStateInformation.
class tt__RecordingJobStateInformation;

//  Forward declaration of class tt__RecordingJobStateInformationExtension.
class tt__RecordingJobStateInformationExtension;

//  Forward declaration of class tt__RecordingJobStateSource.
class tt__RecordingJobStateSource;

//  Forward declaration of class tt__RecordingJobStateTracks.
class tt__RecordingJobStateTracks;

//  Forward declaration of class tt__RecordingJobStateTrack.
class tt__RecordingJobStateTrack;

//  Forward declaration of class tt__GetRecordingJobsResponseItem.
class tt__GetRecordingJobsResponseItem;

//  Forward declaration of class tt__ReplayConfiguration.
class tt__ReplayConfiguration;

//  Forward declaration of class tt__AnalyticsEngine.
class tt__AnalyticsEngine;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfiguration.
class tt__AnalyticsDeviceEngineConfiguration;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfigurationExtension.
class tt__AnalyticsDeviceEngineConfigurationExtension;

//  Forward declaration of class tt__EngineConfiguration.
class tt__EngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineInputInfo.
class tt__AnalyticsEngineInputInfo;

//  Forward declaration of class tt__AnalyticsEngineInputInfoExtension.
class tt__AnalyticsEngineInputInfoExtension;

//  Forward declaration of class tt__AnalyticsEngineInput.
class tt__AnalyticsEngineInput;

//  Forward declaration of class tt__SourceIdentification.
class tt__SourceIdentification;

//  Forward declaration of class tt__SourceIdentificationExtension.
class tt__SourceIdentificationExtension;

//  Forward declaration of class tt__MetadataInput.
class tt__MetadataInput;

//  Forward declaration of class tt__MetadataInputExtension.
class tt__MetadataInputExtension;

//  Forward declaration of class tt__AnalyticsEngineControl.
class tt__AnalyticsEngineControl;

//  Forward declaration of class tt__AnalyticsStateInformation.
class tt__AnalyticsStateInformation;

//  Forward declaration of class tt__AnalyticsState.
class tt__AnalyticsState;

//  Forward declaration of class tt__ActionEngineEventPayload.
class tt__ActionEngineEventPayload;

//  Forward declaration of class tt__ActionEngineEventPayloadExtension.
class tt__ActionEngineEventPayloadExtension;

//  Forward declaration of class _tt__Message.
class _tt__Message;

//  Forward declaration of class wsnt__QueryExpressionType.
class wsnt__QueryExpressionType;

//  Forward declaration of class wsnt__TopicExpressionType.
class wsnt__TopicExpressionType;

//  Forward declaration of class wsnt__FilterType.
class wsnt__FilterType;

//  Forward declaration of class wsnt__SubscriptionPolicyType.
class wsnt__SubscriptionPolicyType;

//  Forward declaration of class wsnt__NotificationMessageHolderType.
class wsnt__NotificationMessageHolderType;

//  Forward declaration of class wsnt__SubscribeCreationFailedFaultType.
class wsnt__SubscribeCreationFailedFaultType;

//  Forward declaration of class wsnt__InvalidFilterFaultType.
class wsnt__InvalidFilterFaultType;

//  Forward declaration of class wsnt__TopicExpressionDialectUnknownFaultType.
class wsnt__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class wsnt__InvalidTopicExpressionFaultType.
class wsnt__InvalidTopicExpressionFaultType;

//  Forward declaration of class wsnt__TopicNotSupportedFaultType.
class wsnt__TopicNotSupportedFaultType;

//  Forward declaration of class wsnt__MultipleTopicsSpecifiedFaultType.
class wsnt__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class wsnt__InvalidProducerPropertiesExpressionFaultType.
class wsnt__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class wsnt__InvalidMessageContentExpressionFaultType.
class wsnt__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class wsnt__UnrecognizedPolicyRequestFaultType.
class wsnt__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class wsnt__UnsupportedPolicyRequestFaultType.
class wsnt__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class wsnt__NotifyMessageNotSupportedFaultType.
class wsnt__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class wsnt__UnacceptableInitialTerminationTimeFaultType.
class wsnt__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class wsnt__NoCurrentMessageOnTopicFaultType.
class wsnt__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class wsnt__UnableToGetMessagesFaultType.
class wsnt__UnableToGetMessagesFaultType;

//  Forward declaration of class wsnt__UnableToDestroyPullPointFaultType.
class wsnt__UnableToDestroyPullPointFaultType;

//  Forward declaration of class wsnt__UnableToCreatePullPointFaultType.
class wsnt__UnableToCreatePullPointFaultType;

//  Forward declaration of class wsnt__UnacceptableTerminationTimeFaultType.
class wsnt__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class wsnt__UnableToDestroySubscriptionFaultType.
class wsnt__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class wsnt__PauseFailedFaultType.
class wsnt__PauseFailedFaultType;

//  Forward declaration of class wsnt__ResumeFailedFaultType.
class wsnt__ResumeFailedFaultType;

//  Forward declaration of class _wsnt__NotificationProducerRP.
class _wsnt__NotificationProducerRP;

//  Forward declaration of class _wsnt__SubscriptionManagerRP.
class _wsnt__SubscriptionManagerRP;

//  Forward declaration of class _wsnt__Notify.
class _wsnt__Notify;

//  Forward declaration of class _wsnt__UseRaw.
class _wsnt__UseRaw;

//  Forward declaration of class _wsnt__Subscribe.
class _wsnt__Subscribe;

//  Forward declaration of class _wsnt__SubscribeResponse.
class _wsnt__SubscribeResponse;

//  Forward declaration of class _wsnt__GetCurrentMessage.
class _wsnt__GetCurrentMessage;

//  Forward declaration of class _wsnt__GetCurrentMessageResponse.
class _wsnt__GetCurrentMessageResponse;

//  Forward declaration of class _wsnt__GetMessages.
class _wsnt__GetMessages;

//  Forward declaration of class _wsnt__GetMessagesResponse.
class _wsnt__GetMessagesResponse;

//  Forward declaration of class _wsnt__DestroyPullPoint.
class _wsnt__DestroyPullPoint;

//  Forward declaration of class _wsnt__DestroyPullPointResponse.
class _wsnt__DestroyPullPointResponse;

//  Forward declaration of class _wsnt__CreatePullPoint.
class _wsnt__CreatePullPoint;

//  Forward declaration of class _wsnt__CreatePullPointResponse.
class _wsnt__CreatePullPointResponse;

//  Forward declaration of class _wsnt__Renew.
class _wsnt__Renew;

//  Forward declaration of class _wsnt__RenewResponse.
class _wsnt__RenewResponse;

//  Forward declaration of class _wsnt__Unsubscribe.
class _wsnt__Unsubscribe;

//  Forward declaration of class _wsnt__UnsubscribeResponse.
class _wsnt__UnsubscribeResponse;

//  Forward declaration of class _wsnt__PauseSubscription.
class _wsnt__PauseSubscription;

//  Forward declaration of class _wsnt__PauseSubscriptionResponse.
class _wsnt__PauseSubscriptionResponse;

//  Forward declaration of class _wsnt__ResumeSubscription.
class _wsnt__ResumeSubscription;

//  Forward declaration of class _wsnt__ResumeSubscriptionResponse.
class _wsnt__ResumeSubscriptionResponse;

//  Forward declaration of class wsrfbf__BaseFaultType.
class wsrfbf__BaseFaultType;

//  Forward declaration of class wstop__Documentation.
class wstop__Documentation;

//  Forward declaration of class wstop__ExtensibleDocumented.
class wstop__ExtensibleDocumented;

//  Forward declaration of class wstop__QueryExpressionType.
class wstop__QueryExpressionType;

//  Forward declaration of class wstop__TopicNamespaceType.
class wstop__TopicNamespaceType;

//  Forward declaration of class wstop__TopicType.
class wstop__TopicType;

//  Forward declaration of class wstop__TopicSetType.
class wstop__TopicSetType;

//  Forward declaration of class tev__Capabilities.
class tev__Capabilities;

//  Forward declaration of class _tev__GetServiceCapabilities.
class _tev__GetServiceCapabilities;

//  Forward declaration of class _tev__GetServiceCapabilitiesResponse.
class _tev__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tev__CreatePullPointSubscription.
class _tev__CreatePullPointSubscription;

//  Forward declaration of class _tev__CreatePullPointSubscriptionResponse.
class _tev__CreatePullPointSubscriptionResponse;

//  Forward declaration of class _tev__PullMessages.
class _tev__PullMessages;

//  Forward declaration of class _tev__PullMessagesResponse.
class _tev__PullMessagesResponse;

//  Forward declaration of class _tev__PullMessagesFaultResponse.
class _tev__PullMessagesFaultResponse;

//  Forward declaration of class _tev__Seek.
class _tev__Seek;

//  Forward declaration of class _tev__SeekResponse.
class _tev__SeekResponse;

//  Forward declaration of class _tev__SetSynchronizationPoint.
class _tev__SetSynchronizationPoint;

//  Forward declaration of class _tev__SetSynchronizationPointResponse.
class _tev__SetSynchronizationPointResponse;

//  Forward declaration of class _tev__GetEventProperties.
class _tev__GetEventProperties;

//  Forward declaration of class _tev__GetEventPropertiesResponse.
class _tev__GetEventPropertiesResponse;

//  Forward declaration of class wsrfr__ResourceUnknownFaultType.
class wsrfr__ResourceUnknownFaultType;

//  Forward declaration of class wsrfr__ResourceUnavailableFaultType.
class wsrfr__ResourceUnavailableFaultType;

//  Forward declaration of class tan__Capabilities.
class tan__Capabilities;

//  Forward declaration of class _tan__GetServiceCapabilities.
class _tan__GetServiceCapabilities;

//  Forward declaration of class _tan__GetServiceCapabilitiesResponse.
class _tan__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tan__GetSupportedRules.
class _tan__GetSupportedRules;

//  Forward declaration of class _tan__GetSupportedRulesResponse.
class _tan__GetSupportedRulesResponse;

//  Forward declaration of class _tan__CreateRules.
class _tan__CreateRules;

//  Forward declaration of class _tan__CreateRulesResponse.
class _tan__CreateRulesResponse;

//  Forward declaration of class _tan__DeleteRules.
class _tan__DeleteRules;

//  Forward declaration of class _tan__DeleteRulesResponse.
class _tan__DeleteRulesResponse;

//  Forward declaration of class _tan__ModifyRules.
class _tan__ModifyRules;

//  Forward declaration of class _tan__ModifyRulesResponse.
class _tan__ModifyRulesResponse;

//  Forward declaration of class _tan__GetRules.
class _tan__GetRules;

//  Forward declaration of class _tan__GetRulesResponse.
class _tan__GetRulesResponse;

//  Forward declaration of class _tan__GetSupportedAnalyticsModules.
class _tan__GetSupportedAnalyticsModules;

//  Forward declaration of class _tan__GetSupportedAnalyticsModulesResponse.
class _tan__GetSupportedAnalyticsModulesResponse;

//  Forward declaration of class _tan__CreateAnalyticsModules.
class _tan__CreateAnalyticsModules;

//  Forward declaration of class _tan__CreateAnalyticsModulesResponse.
class _tan__CreateAnalyticsModulesResponse;

//  Forward declaration of class _tan__DeleteAnalyticsModules.
class _tan__DeleteAnalyticsModules;

//  Forward declaration of class _tan__DeleteAnalyticsModulesResponse.
class _tan__DeleteAnalyticsModulesResponse;

//  Forward declaration of class _tan__ModifyAnalyticsModules.
class _tan__ModifyAnalyticsModules;

//  Forward declaration of class _tan__ModifyAnalyticsModulesResponse.
class _tan__ModifyAnalyticsModulesResponse;

//  Forward declaration of class _tan__GetAnalyticsModules.
class _tan__GetAnalyticsModules;

//  Forward declaration of class _tan__GetAnalyticsModulesResponse.
class _tan__GetAnalyticsModulesResponse;

//  Forward declaration of class wsd__HelloType.
class wsd__HelloType;

//  Forward declaration of class wsd__ByeType.
class wsd__ByeType;

//  Forward declaration of class wsd__ProbeType.
class wsd__ProbeType;

//  Forward declaration of class wsd__ProbeMatchesType.
class wsd__ProbeMatchesType;

//  Forward declaration of class wsd__ProbeMatchType.
class wsd__ProbeMatchType;

//  Forward declaration of class wsd__ResolveType.
class wsd__ResolveType;

//  Forward declaration of class wsd__ResolveMatchesType.
class wsd__ResolveMatchesType;

//  Forward declaration of class wsd__ResolveMatchType.
class wsd__ResolveMatchType;

//  Forward declaration of class wsd__ScopesType.
class wsd__ScopesType;

//  Forward declaration of class wsd__SecurityType.
class wsd__SecurityType;

//  Forward declaration of class wsd__SigType.
class wsd__SigType;

//  Forward declaration of class wsd__AppSequenceType.
class wsd__AppSequenceType;

//  Forward declaration of class wsa__EndpointReferenceType.
class wsa__EndpointReferenceType;

//  Forward declaration of class wsa__ReferencePropertiesType.
class wsa__ReferencePropertiesType;

//  Forward declaration of class wsa__ReferenceParametersType.
class wsa__ReferenceParametersType;

//  Forward declaration of class wsa__ServiceNameType.
class wsa__ServiceNameType;

//  Forward declaration of class wsa__Relationship.
class wsa__Relationship;

//  Forward declaration of class wsa__ReplyAfterType.
class wsa__ReplyAfterType;

//  Forward declaration of class wsa__RetryAfterType.
class wsa__RetryAfterType;

//  Forward declaration of class wsa__AttributedQName.
class wsa__AttributedQName;

//  Forward declaration of class wsa__AttributedURI.
class wsa__AttributedURI;

//  Forward declaration of class trt__Capabilities.
class trt__Capabilities;

//  Forward declaration of class trt__ProfileCapabilities.
class trt__ProfileCapabilities;

//  Forward declaration of class trt__StreamingCapabilities.
class trt__StreamingCapabilities;

//  Forward declaration of class _trt__GetServiceCapabilities.
class _trt__GetServiceCapabilities;

//  Forward declaration of class _trt__GetServiceCapabilitiesResponse.
class _trt__GetServiceCapabilitiesResponse;

//  Forward declaration of class _trt__GetVideoSources.
class _trt__GetVideoSources;

//  Forward declaration of class _trt__GetVideoSourcesResponse.
class _trt__GetVideoSourcesResponse;

//  Forward declaration of class _trt__GetAudioSources.
class _trt__GetAudioSources;

//  Forward declaration of class _trt__GetAudioSourcesResponse.
class _trt__GetAudioSourcesResponse;

//  Forward declaration of class _trt__GetAudioOutputs.
class _trt__GetAudioOutputs;

//  Forward declaration of class _trt__GetAudioOutputsResponse.
class _trt__GetAudioOutputsResponse;

//  Forward declaration of class _trt__CreateProfile.
class _trt__CreateProfile;

//  Forward declaration of class _trt__CreateProfileResponse.
class _trt__CreateProfileResponse;

//  Forward declaration of class _trt__GetProfile.
class _trt__GetProfile;

//  Forward declaration of class _trt__GetProfileResponse.
class _trt__GetProfileResponse;

//  Forward declaration of class _trt__GetProfiles.
class _trt__GetProfiles;

//  Forward declaration of class _trt__GetProfilesResponse.
class _trt__GetProfilesResponse;

//  Forward declaration of class _trt__AddVideoEncoderConfiguration.
class _trt__AddVideoEncoderConfiguration;

//  Forward declaration of class _trt__AddVideoEncoderConfigurationResponse.
class _trt__AddVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoEncoderConfiguration.
class _trt__RemoveVideoEncoderConfiguration;

//  Forward declaration of class _trt__RemoveVideoEncoderConfigurationResponse.
class _trt__RemoveVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddVideoSourceConfiguration.
class _trt__AddVideoSourceConfiguration;

//  Forward declaration of class _trt__AddVideoSourceConfigurationResponse.
class _trt__AddVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoSourceConfiguration.
class _trt__RemoveVideoSourceConfiguration;

//  Forward declaration of class _trt__RemoveVideoSourceConfigurationResponse.
class _trt__RemoveVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__AddAudioEncoderConfiguration.
class _trt__AddAudioEncoderConfiguration;

//  Forward declaration of class _trt__AddAudioEncoderConfigurationResponse.
class _trt__AddAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioEncoderConfiguration.
class _trt__RemoveAudioEncoderConfiguration;

//  Forward declaration of class _trt__RemoveAudioEncoderConfigurationResponse.
class _trt__RemoveAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddAudioSourceConfiguration.
class _trt__AddAudioSourceConfiguration;

//  Forward declaration of class _trt__AddAudioSourceConfigurationResponse.
class _trt__AddAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioSourceConfiguration.
class _trt__RemoveAudioSourceConfiguration;

//  Forward declaration of class _trt__RemoveAudioSourceConfigurationResponse.
class _trt__RemoveAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__AddPTZConfiguration.
class _trt__AddPTZConfiguration;

//  Forward declaration of class _trt__AddPTZConfigurationResponse.
class _trt__AddPTZConfigurationResponse;

//  Forward declaration of class _trt__RemovePTZConfiguration.
class _trt__RemovePTZConfiguration;

//  Forward declaration of class _trt__RemovePTZConfigurationResponse.
class _trt__RemovePTZConfigurationResponse;

//  Forward declaration of class _trt__AddVideoAnalyticsConfiguration.
class _trt__AddVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__AddVideoAnalyticsConfigurationResponse.
class _trt__AddVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfiguration.
class _trt__RemoveVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfigurationResponse.
class _trt__RemoveVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__AddMetadataConfiguration.
class _trt__AddMetadataConfiguration;

//  Forward declaration of class _trt__AddMetadataConfigurationResponse.
class _trt__AddMetadataConfigurationResponse;

//  Forward declaration of class _trt__RemoveMetadataConfiguration.
class _trt__RemoveMetadataConfiguration;

//  Forward declaration of class _trt__RemoveMetadataConfigurationResponse.
class _trt__RemoveMetadataConfigurationResponse;

//  Forward declaration of class _trt__AddAudioOutputConfiguration.
class _trt__AddAudioOutputConfiguration;

//  Forward declaration of class _trt__AddAudioOutputConfigurationResponse.
class _trt__AddAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioOutputConfiguration.
class _trt__RemoveAudioOutputConfiguration;

//  Forward declaration of class _trt__RemoveAudioOutputConfigurationResponse.
class _trt__RemoveAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__AddAudioDecoderConfiguration.
class _trt__AddAudioDecoderConfiguration;

//  Forward declaration of class _trt__AddAudioDecoderConfigurationResponse.
class _trt__AddAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioDecoderConfiguration.
class _trt__RemoveAudioDecoderConfiguration;

//  Forward declaration of class _trt__RemoveAudioDecoderConfigurationResponse.
class _trt__RemoveAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__DeleteProfile.
class _trt__DeleteProfile;

//  Forward declaration of class _trt__DeleteProfileResponse.
class _trt__DeleteProfileResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurations.
class _trt__GetVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationsResponse.
class _trt__GetVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurations.
class _trt__GetVideoSourceConfigurations;

//  Forward declaration of class _trt__GetVideoSourceConfigurationsResponse.
class _trt__GetVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurations.
class _trt__GetAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationsResponse.
class _trt__GetAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurations.
class _trt__GetAudioSourceConfigurations;

//  Forward declaration of class _trt__GetAudioSourceConfigurationsResponse.
class _trt__GetAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurations.
class _trt__GetVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationsResponse.
class _trt__GetVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurations.
class _trt__GetMetadataConfigurations;

//  Forward declaration of class _trt__GetMetadataConfigurationsResponse.
class _trt__GetMetadataConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioOutputConfigurations.
class _trt__GetAudioOutputConfigurations;

//  Forward declaration of class _trt__GetAudioOutputConfigurationsResponse.
class _trt__GetAudioOutputConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfigurations.
class _trt__GetAudioDecoderConfigurations;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationsResponse.
class _trt__GetAudioDecoderConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfiguration.
class _trt__GetVideoSourceConfiguration;

//  Forward declaration of class _trt__GetVideoSourceConfigurationResponse.
class _trt__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfiguration.
class _trt__GetVideoEncoderConfiguration;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationResponse.
class _trt__GetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetAudioSourceConfiguration.
class _trt__GetAudioSourceConfiguration;

//  Forward declaration of class _trt__GetAudioSourceConfigurationResponse.
class _trt__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfiguration.
class _trt__GetAudioEncoderConfiguration;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationResponse.
class _trt__GetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfiguration.
class _trt__GetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationResponse.
class _trt__GetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__GetMetadataConfiguration.
class _trt__GetMetadataConfiguration;

//  Forward declaration of class _trt__GetMetadataConfigurationResponse.
class _trt__GetMetadataConfigurationResponse;

//  Forward declaration of class _trt__GetAudioOutputConfiguration.
class _trt__GetAudioOutputConfiguration;

//  Forward declaration of class _trt__GetAudioOutputConfigurationResponse.
class _trt__GetAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfiguration.
class _trt__GetAudioDecoderConfiguration;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationResponse.
class _trt__GetAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurations.
class _trt__GetCompatibleVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurationsResponse.
class _trt__GetCompatibleVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurations.
class _trt__GetCompatibleVideoSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurationsResponse.
class _trt__GetCompatibleVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurations.
class _trt__GetCompatibleAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurationsResponse.
class _trt__GetCompatibleAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurations.
class _trt__GetCompatibleAudioSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurationsResponse.
class _trt__GetCompatibleAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurations.
class _trt__GetCompatibleVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse.
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurations.
class _trt__GetCompatibleMetadataConfigurations;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurationsResponse.
class _trt__GetCompatibleMetadataConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioOutputConfigurations.
class _trt__GetCompatibleAudioOutputConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioOutputConfigurationsResponse.
class _trt__GetCompatibleAudioOutputConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioDecoderConfigurations.
class _trt__GetCompatibleAudioDecoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioDecoderConfigurationsResponse.
class _trt__GetCompatibleAudioDecoderConfigurationsResponse;

//  Forward declaration of class _trt__SetVideoEncoderConfiguration.
class _trt__SetVideoEncoderConfiguration;

//  Forward declaration of class _trt__SetVideoEncoderConfigurationResponse.
class _trt__SetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetVideoSourceConfiguration.
class _trt__SetVideoSourceConfiguration;

//  Forward declaration of class _trt__SetVideoSourceConfigurationResponse.
class _trt__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__SetAudioEncoderConfiguration.
class _trt__SetAudioEncoderConfiguration;

//  Forward declaration of class _trt__SetAudioEncoderConfigurationResponse.
class _trt__SetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetAudioSourceConfiguration.
class _trt__SetAudioSourceConfiguration;

//  Forward declaration of class _trt__SetAudioSourceConfigurationResponse.
class _trt__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__SetVideoAnalyticsConfiguration.
class _trt__SetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__SetVideoAnalyticsConfigurationResponse.
class _trt__SetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__SetMetadataConfiguration.
class _trt__SetMetadataConfiguration;

//  Forward declaration of class _trt__SetMetadataConfigurationResponse.
class _trt__SetMetadataConfigurationResponse;

//  Forward declaration of class _trt__SetAudioOutputConfiguration.
class _trt__SetAudioOutputConfiguration;

//  Forward declaration of class _trt__SetAudioOutputConfigurationResponse.
class _trt__SetAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__SetAudioDecoderConfiguration.
class _trt__SetAudioDecoderConfiguration;

//  Forward declaration of class _trt__SetAudioDecoderConfigurationResponse.
class _trt__SetAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptions.
class _trt__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptionsResponse.
class _trt__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptions.
class _trt__GetVideoEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptionsResponse.
class _trt__GetVideoEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptions.
class _trt__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptionsResponse.
class _trt__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptions.
class _trt__GetAudioEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptionsResponse.
class _trt__GetAudioEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurationOptions.
class _trt__GetMetadataConfigurationOptions;

//  Forward declaration of class _trt__GetMetadataConfigurationOptionsResponse.
class _trt__GetMetadataConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioOutputConfigurationOptions.
class _trt__GetAudioOutputConfigurationOptions;

//  Forward declaration of class _trt__GetAudioOutputConfigurationOptionsResponse.
class _trt__GetAudioOutputConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationOptions.
class _trt__GetAudioDecoderConfigurationOptions;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationOptionsResponse.
class _trt__GetAudioDecoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstances.
class _trt__GetGuaranteedNumberOfVideoEncoderInstances;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

//  Forward declaration of class _trt__GetStreamUri.
class _trt__GetStreamUri;

//  Forward declaration of class _trt__GetStreamUriResponse.
class _trt__GetStreamUriResponse;

//  Forward declaration of class _trt__StartMulticastStreaming.
class _trt__StartMulticastStreaming;

//  Forward declaration of class _trt__StartMulticastStreamingResponse.
class _trt__StartMulticastStreamingResponse;

//  Forward declaration of class _trt__StopMulticastStreaming.
class _trt__StopMulticastStreaming;

//  Forward declaration of class _trt__StopMulticastStreamingResponse.
class _trt__StopMulticastStreamingResponse;

//  Forward declaration of class _trt__SetSynchronizationPoint.
class _trt__SetSynchronizationPoint;

//  Forward declaration of class _trt__SetSynchronizationPointResponse.
class _trt__SetSynchronizationPointResponse;

//  Forward declaration of class _trt__GetSnapshotUri.
class _trt__GetSnapshotUri;

//  Forward declaration of class _trt__GetSnapshotUriResponse.
class _trt__GetSnapshotUriResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of xs:int.
///
typedef std::string tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
///
typedef std::string tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
///
typedef std::string tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
///
typedef std::string tt__StringAttrList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef std::string wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "tns:RelationshipType xs:QName".
typedef std::string wsd__OpenRelationshipType;

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType is a simpleType containing a whitespace separated list of xs:QName.
///
typedef xsd__QName wsd__QNameListType;

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType is a simpleType containing a whitespace separated list of xs:anyURI.
///
typedef std::string wsd__UriListType;

/// @brief Union of values from member types "tns:FaultCodeType xs:QName".
typedef std::string wsd__FaultCodeOpenType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef std::string tt__ReferenceToken:64;

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
typedef std::string tt__Name:64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RotateMode
{
	tt__RotateMode__OFF,	///< xs:string value="OFF"
	tt__RotateMode__ON,	///< xs:string value="ON"
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of XSD type xs:integer.
///
/// Length of this string is 0..unbounded.
/// Value range is [0..31].
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of XSD type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__DNSName;

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of XSD type xs:token.
///
/// Length of this string is 0..unbounded.
typedef xsd__token tt__Domain;

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 1..32.
typedef xsd__hexBinary tt__Dot11SSIDType 1:32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of XSD type xs:hexBinary.
///
/// Length of this string is 32.
typedef xsd__hexBinary tt__Dot11PSK;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
/// Content pattern is "[ -~]{8,63}".
typedef std::string tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__SystemLogType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..128.
typedef std::string tt__AuxiliaryData:128;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Enabled__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of XSD type xs:anyURI.
///
/// Length of this string is 0..unbounded.
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__Direction__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ClassType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ClassType
{
	tt__ClassType__Animal,	///< xs:string value="Animal"
	tt__ClassType__Face,	///< xs:string value="Face"
	tt__ClassType__Human,	///< xs:string value="Human"
	tt__ClassType__Vehical,	///< xs:string value="Vehical"
	tt__ClassType__Other,	///< xs:string value="Other"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverMode__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "tt__ReceiverState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef std::string tt__Description;

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef std::string tt__XPathExpression;

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__SearchState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__RecordingStatus__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__TrackType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef std::string tt__RecordingJobMode;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..unbounded.
typedef std::string tt__RecordingJobState;

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "tt__ModeOfOperation__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )*
///   TopicPath ::= RootTopic ChildTopicExpression*
///   RootTopic ::= NamespacePrefix? ('//')? (NCName | '*')
///   NamespacePrefix ::= NCName ':'
///   ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of XSD type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic*
///   RootTopic ::= QName
///   ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of XSD type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
typedef xsd__QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":RelationshipType is a simpleType restriction of XSD type xs:QName.
///
/// @note The enum values are prefixed with "wsd__RelationshipType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsd__RelationshipType
{
	wsd__RelationshipType__wsd__Suppression,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":Suppression"
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":FaultCodeType is a simpleType restriction of XSD type xs:QName.
///
/// @note The enum values are prefixed with "wsd__FaultCodeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsd__FaultCodeType
{
	wsd__FaultCodeType__wsd__MatchingRuleNotSupported,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2005/04/discovery":MatchingRuleNotSupported"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":RelationshipTypeValues is a simpleType restriction of XSD type xs:QName.
///
/// @note The enum values are prefixed with "wsa__RelationshipTypeValues__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsa__RelationshipTypeValues
{
	wsa__RelationshipTypeValues__wsa__Reply,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":Reply"
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":FaultSubcodeValues is a simpleType restriction of XSD type xs:QName.
///
/// @note The enum values are prefixed with "wsa__FaultSubcodeValues__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum wsa__FaultSubcodeValues
{
	wsa__FaultSubcodeValues__wsa__InvalidMessageInformationHeader,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":InvalidMessageInformationHeader"
	wsa__FaultSubcodeValues__wsa__MessageInformationHeaderRequired,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":MessageInformationHeaderRequired"
	wsa__FaultSubcodeValues__wsa__DestinationUnreachable,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":DestinationUnreachable"
	wsa__FaultSubcodeValues__wsa__ActionNotSupported,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":ActionNotSupported"
	wsa__FaultSubcodeValues__wsa__EndpointUnavailable,	///< xs:QName value=""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointUnavailable"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__TrackReference;

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__JobToken;

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// Length of this string is 0..unbounded.
typedef tt__ReferenceToken tt__RecordingJobReference;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// class tds__Service operations:
/// - soap_new_tds__Service(soap*) allocate
/// - soap_new_tds__Service(soap*, int num) allocate array
/// - soap_new_req_tds__Service(soap*, ...) allocate, set required members
/// - soap_new_set_tds__Service(soap*, ...) allocate, set all public members
/// - int soap_read_tds__Service(soap*, tds__Service*) deserialize from a stream
/// - int soap_write_tds__Service(soap, tds__Service*) serialize to a stream
class tds__Service
{ public:
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
/// Element "Namespace" of XSD type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// class _tds__Service_Capabilities operations:
/// - soap_new__tds__Service_Capabilities(soap*) allocate
/// - soap_new__tds__Service_Capabilities(soap*, int num) allocate array
/// - soap_new_req__tds__Service_Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__Service_Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) deserialize from a stream
/// - int soap_write__tds__Service_Capabilities(soap, _tds__Service_Capabilities*) serialize to a stream
    class _tds__Service_Capabilities
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
/// Element "Version" of XSD type "http://www.onvif.org/ver10/schema":OnvifVersion.
    tt__OnvifVersion*                    Version                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// class tds__DeviceServiceCapabilities operations:
/// - soap_new_tds__DeviceServiceCapabilities(soap*) allocate
/// - soap_new_tds__DeviceServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__DeviceServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__DeviceServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) deserialize from a stream
/// - int soap_write_tds__DeviceServiceCapabilities(soap, tds__DeviceServiceCapabilities*) serialize to a stream
class tds__DeviceServiceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    tds__NetworkCapabilities*            Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    tds__SecurityCapabilities*           Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    tds__SystemCapabilities*             System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
/// Element "Misc" of XSD type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    tds__MiscCapabilities*               Misc                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
/// class tds__NetworkCapabilities operations:
/// - soap_new_tds__NetworkCapabilities(soap*) allocate
/// - soap_new_tds__NetworkCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__NetworkCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tds__NetworkCapabilities(soap, tds__NetworkCapabilities*) serialize to a stream
class tds__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPFilter" of XSD type xs:boolean.
   @bool*                                IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
/// Attribute "ZeroConfiguration" of XSD type xs:boolean.
   @bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
/// Attribute "IPVersion6" of XSD type xs:boolean.
   @bool*                                IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "DynDNS" of XSD type xs:boolean.
   @bool*                                DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot11Configuration" of XSD type xs:boolean.
   @bool*                                Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1XConfigurations" of XSD type xs:int.
   @int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HostnameFromDHCP" of XSD type xs:boolean.
   @bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
/// Attribute "NTP" of XSD type xs:int.
   @int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "DHCPv6" of XSD type xs:boolean.
   @bool*                                DHCPv6                         0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
/// class tds__SecurityCapabilities operations:
/// - soap_new_tds__SecurityCapabilities(soap*) allocate
/// - soap_new_tds__SecurityCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__SecurityCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tds__SecurityCapabilities(soap, tds__SecurityCapabilities*) serialize to a stream
class tds__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.0" of XSD type xs:boolean.
   @bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.1" of XSD type xs:boolean.
   @bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
/// Attribute "TLS1.2" of XSD type xs:boolean.
   @bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
/// Attribute "OnboardKeyGeneration" of XSD type xs:boolean.
   @bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "AccessPolicyConfig" of XSD type xs:boolean.
   @bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
/// Attribute "DefaultAccessPolicy" of XSD type xs:boolean.
   @bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Dot1X" of XSD type xs:boolean.
   @bool*                                Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteUserHandling" of XSD type xs:boolean.
   @bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
/// Attribute "X.509Token" of XSD type xs:boolean.
   @bool*                                X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
/// Attribute "SAMLToken" of XSD type xs:boolean.
   @bool*                                SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
/// Attribute "KerberosToken" of XSD type xs:boolean.
   @bool*                                KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
/// Attribute "UsernameToken" of XSD type xs:boolean.
   @bool*                                UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpDigest" of XSD type xs:boolean.
   @bool*                                HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
/// Attribute "RELToken" of XSD type xs:boolean.
   @bool*                                RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Attribute "SupportedEAPMethods" of XSD type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
   @tds__EAPMethodTypes*                 SupportedEAPMethods            0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
/// class tds__SystemCapabilities operations:
/// - soap_new_tds__SystemCapabilities(soap*) allocate
/// - soap_new_tds__SystemCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__SystemCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__SystemCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tds__SystemCapabilities(soap, tds__SystemCapabilities*) serialize to a stream
class tds__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryResolve" of XSD type xs:boolean.
   @bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
/// Attribute "DiscoveryBye" of XSD type xs:boolean.
   @bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery, see WS-Discovery.
/// </BLOCKQUOTE></PRE>
/// Attribute "RemoteDiscovery" of XSD type xs:boolean.
   @bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemBackup" of XSD type xs:boolean.
   @bool*                                SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "SystemLogging" of XSD type xs:boolean.
   @bool*                                SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "FirmwareUpgrade" of XSD type xs:boolean.
   @bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpFirmwareUpgrade" of XSD type xs:boolean.
   @bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemBackup" of XSD type xs:boolean.
   @bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSystemLogging" of XSD type xs:boolean.
   @bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
/// Attribute "HttpSupportInformation" of XSD type xs:boolean.
   @bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
/// class tds__MiscCapabilities operations:
/// - soap_new_tds__MiscCapabilities(soap*) allocate
/// - soap_new_tds__MiscCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__MiscCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__MiscCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) deserialize from a stream
/// - int soap_write_tds__MiscCapabilities(soap, tds__MiscCapabilities*) serialize to a stream
class tds__MiscCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
/// Attribute "AuxiliaryCommands" of XSD type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  AuxiliaryCommands              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// class _tds__GetServices operations:
/// - soap_new__tds__GetServices(soap*) allocate
/// - soap_new__tds__GetServices(soap*, int num) allocate array
/// - soap_new_req__tds__GetServices(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServices(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServices(soap*, _tds__GetServices*) deserialize from a stream
/// - int soap_write__tds__GetServices(soap, _tds__GetServices*) serialize to a stream
class _tds__GetServices
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
/// Element "IncludeCapability" of XSD type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// class _tds__GetServicesResponse operations:
/// - soap_new__tds__GetServicesResponse(soap*) allocate
/// - soap_new__tds__GetServicesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetServicesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServicesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServicesResponse(soap, _tds__GetServicesResponse*) serialize to a stream
class _tds__GetServicesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
/// Vector of tds__Service* of length 1..unbounded.
    std::vector<tds__Service*          > Service                        1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// class _tds__GetServiceCapabilities operations:
/// - soap_new__tds__GetServiceCapabilities(soap*) allocate
/// - soap_new__tds__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilities(soap, _tds__GetServiceCapabilities*) serialize to a stream
class _tds__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// class _tds__GetServiceCapabilitiesResponse operations:
/// - soap_new__tds__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilitiesResponse(soap, _tds__GetServiceCapabilitiesResponse*) serialize to a stream
class _tds__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    tds__DeviceServiceCapabilities*      Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// class _tds__GetDeviceInformation operations:
/// - soap_new__tds__GetDeviceInformation(soap*) allocate
/// - soap_new__tds__GetDeviceInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetDeviceInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDeviceInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformation(soap, _tds__GetDeviceInformation*) serialize to a stream
class _tds__GetDeviceInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// class _tds__GetDeviceInformationResponse operations:
/// - soap_new__tds__GetDeviceInformationResponse(soap*) allocate
/// - soap_new__tds__GetDeviceInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDeviceInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDeviceInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformationResponse(soap, _tds__GetDeviceInformationResponse*) serialize to a stream
class _tds__GetDeviceInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Manufacturer" of XSD type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
/// Element "Model" of XSD type xs:string.
    std::string                          Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareVersion" of XSD type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
/// Element "SerialNumber" of XSD type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
/// Element "HardwareId" of XSD type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
/// class _tds__SetSystemDateAndTime operations:
/// - soap_new__tds__SetSystemDateAndTime(soap*) allocate
/// - soap_new__tds__SetSystemDateAndTime(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemDateAndTime(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTime(soap, _tds__SetSystemDateAndTime*) serialize to a stream
class _tds__SetSystemDateAndTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// class _tds__SetSystemDateAndTimeResponse operations:
/// - soap_new__tds__SetSystemDateAndTimeResponse(soap*) allocate
/// - soap_new__tds__SetSystemDateAndTimeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTimeResponse(soap, _tds__SetSystemDateAndTimeResponse*) serialize to a stream
class _tds__SetSystemDateAndTimeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// class _tds__GetSystemDateAndTime operations:
/// - soap_new__tds__GetSystemDateAndTime(soap*) allocate
/// - soap_new__tds__GetSystemDateAndTime(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemDateAndTime(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTime(soap, _tds__GetSystemDateAndTime*) serialize to a stream
class _tds__GetSystemDateAndTime
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// class _tds__GetSystemDateAndTimeResponse operations:
/// - soap_new__tds__GetSystemDateAndTimeResponse(soap*) allocate
/// - soap_new__tds__GetSystemDateAndTimeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTimeResponse(soap, _tds__GetSystemDateAndTimeResponse*) serialize to a stream
class _tds__GetSystemDateAndTimeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
/// Element "SystemDateAndTime" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// class _tds__SetSystemFactoryDefault operations:
/// - soap_new__tds__SetSystemFactoryDefault(soap*) allocate
/// - soap_new__tds__SetSystemFactoryDefault(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemFactoryDefault(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemFactoryDefault(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefault(soap, _tds__SetSystemFactoryDefault*) serialize to a stream
class _tds__SetSystemFactoryDefault
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
/// Element "FactoryDefault" of XSD type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// class _tds__SetSystemFactoryDefaultResponse operations:
/// - soap_new__tds__SetSystemFactoryDefaultResponse(soap*) allocate
/// - soap_new__tds__SetSystemFactoryDefaultResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(soap, _tds__SetSystemFactoryDefaultResponse*) serialize to a stream
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// class _tds__UpgradeSystemFirmware operations:
/// - soap_new__tds__UpgradeSystemFirmware(soap*) allocate
/// - soap_new__tds__UpgradeSystemFirmware(soap*, int num) allocate array
/// - soap_new_req__tds__UpgradeSystemFirmware(soap*, ...) allocate, set required members
/// - soap_new_set__tds__UpgradeSystemFirmware(soap*, ...) allocate, set all public members
/// - int soap_read__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmware(soap, _tds__UpgradeSystemFirmware*) serialize to a stream
class _tds__UpgradeSystemFirmware
{ public:
/// Element "Firmware" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// class _tds__UpgradeSystemFirmwareResponse operations:
/// - soap_new__tds__UpgradeSystemFirmwareResponse(soap*) allocate
/// - soap_new__tds__UpgradeSystemFirmwareResponse(soap*, int num) allocate array
/// - soap_new_req__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(soap, _tds__UpgradeSystemFirmwareResponse*) serialize to a stream
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element "Message" of XSD type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// class _tds__SystemReboot operations:
/// - soap_new__tds__SystemReboot(soap*) allocate
/// - soap_new__tds__SystemReboot(soap*, int num) allocate array
/// - soap_new_req__tds__SystemReboot(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SystemReboot(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SystemReboot(soap*, _tds__SystemReboot*) deserialize from a stream
/// - int soap_write__tds__SystemReboot(soap, _tds__SystemReboot*) serialize to a stream
class _tds__SystemReboot
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// class _tds__SystemRebootResponse operations:
/// - soap_new__tds__SystemRebootResponse(soap*) allocate
/// - soap_new__tds__SystemRebootResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SystemRebootResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SystemRebootResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) deserialize from a stream
/// - int soap_write__tds__SystemRebootResponse(soap, _tds__SystemRebootResponse*) serialize to a stream
class _tds__SystemRebootResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
/// Element "Message" of XSD type xs:string.
    std::string                          Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// class _tds__RestoreSystem operations:
/// - soap_new__tds__RestoreSystem(soap*) allocate
/// - soap_new__tds__RestoreSystem(soap*, int num) allocate array
/// - soap_new_req__tds__RestoreSystem(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RestoreSystem(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RestoreSystem(soap*, _tds__RestoreSystem*) deserialize from a stream
/// - int soap_write__tds__RestoreSystem(soap, _tds__RestoreSystem*) serialize to a stream
class _tds__RestoreSystem
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// class _tds__RestoreSystemResponse operations:
/// - soap_new__tds__RestoreSystemResponse(soap*) allocate
/// - soap_new__tds__RestoreSystemResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RestoreSystemResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RestoreSystemResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) deserialize from a stream
/// - int soap_write__tds__RestoreSystemResponse(soap, _tds__RestoreSystemResponse*) serialize to a stream
class _tds__RestoreSystemResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// class _tds__GetSystemBackup operations:
/// - soap_new__tds__GetSystemBackup(soap*) allocate
/// - soap_new__tds__GetSystemBackup(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemBackup(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemBackup(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackup(soap, _tds__GetSystemBackup*) serialize to a stream
class _tds__GetSystemBackup
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// class _tds__GetSystemBackupResponse operations:
/// - soap_new__tds__GetSystemBackupResponse(soap*) allocate
/// - soap_new__tds__GetSystemBackupResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemBackupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemBackupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackupResponse(soap, _tds__GetSystemBackupResponse*) serialize to a stream
class _tds__GetSystemBackupResponse
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// class _tds__GetSystemSupportInformation operations:
/// - soap_new__tds__GetSystemSupportInformation(soap*) allocate
/// - soap_new__tds__GetSystemSupportInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemSupportInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemSupportInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformation(soap, _tds__GetSystemSupportInformation*) serialize to a stream
class _tds__GetSystemSupportInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// class _tds__GetSystemSupportInformationResponse operations:
/// - soap_new__tds__GetSystemSupportInformationResponse(soap*) allocate
/// - soap_new__tds__GetSystemSupportInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformationResponse(soap, _tds__GetSystemSupportInformationResponse*) serialize to a stream
class _tds__GetSystemSupportInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
/// Element "SupportInformation" of XSD type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// class _tds__GetSystemLog operations:
/// - soap_new__tds__GetSystemLog(soap*) allocate
/// - soap_new__tds__GetSystemLog(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemLog(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemLog(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemLog(soap*, _tds__GetSystemLog*) deserialize from a stream
/// - int soap_write__tds__GetSystemLog(soap, _tds__GetSystemLog*) serialize to a stream
class _tds__GetSystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
/// Element "LogType" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// class _tds__GetSystemLogResponse operations:
/// - soap_new__tds__GetSystemLogResponse(soap*) allocate
/// - soap_new__tds__GetSystemLogResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemLogResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemLogResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemLogResponse(soap, _tds__GetSystemLogResponse*) serialize to a stream
class _tds__GetSystemLogResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLog" of XSD type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// class _tds__GetScopes operations:
/// - soap_new__tds__GetScopes(soap*) allocate
/// - soap_new__tds__GetScopes(soap*, int num) allocate array
/// - soap_new_req__tds__GetScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetScopes(soap*, _tds__GetScopes*) deserialize from a stream
/// - int soap_write__tds__GetScopes(soap, _tds__GetScopes*) serialize to a stream
class _tds__GetScopes
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// class _tds__GetScopesResponse operations:
/// - soap_new__tds__GetScopesResponse(soap*) allocate
/// - soap_new__tds__GetScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__GetScopesResponse(soap, _tds__GetScopesResponse*) serialize to a stream
class _tds__GetScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Scope* of length 1..unbounded.
    std::vector<tt__Scope*             > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// class _tds__SetScopes operations:
/// - soap_new__tds__SetScopes(soap*) allocate
/// - soap_new__tds__SetScopes(soap*, int num) allocate array
/// - soap_new_req__tds__SetScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetScopes(soap*, _tds__SetScopes*) deserialize from a stream
/// - int soap_write__tds__SetScopes(soap, _tds__SetScopes*) serialize to a stream
class _tds__SetScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// class _tds__SetScopesResponse operations:
/// - soap_new__tds__SetScopesResponse(soap*) allocate
/// - soap_new__tds__SetScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__SetScopesResponse(soap, _tds__SetScopesResponse*) serialize to a stream
class _tds__SetScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// class _tds__AddScopes operations:
/// - soap_new__tds__AddScopes(soap*) allocate
/// - soap_new__tds__AddScopes(soap*, int num) allocate array
/// - soap_new_req__tds__AddScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddScopes(soap*, _tds__AddScopes*) deserialize from a stream
/// - int soap_write__tds__AddScopes(soap, _tds__AddScopes*) serialize to a stream
class _tds__AddScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// class _tds__AddScopesResponse operations:
/// - soap_new__tds__AddScopesResponse(soap*) allocate
/// - soap_new__tds__AddScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__AddScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) deserialize from a stream
/// - int soap_write__tds__AddScopesResponse(soap, _tds__AddScopesResponse*) serialize to a stream
class _tds__AddScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// class _tds__RemoveScopes operations:
/// - soap_new__tds__RemoveScopes(soap*) allocate
/// - soap_new__tds__RemoveScopes(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveScopes(soap*, _tds__RemoveScopes*) deserialize from a stream
/// - int soap_write__tds__RemoveScopes(soap, _tds__RemoveScopes*) serialize to a stream
class _tds__RemoveScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// class _tds__RemoveScopesResponse operations:
/// - soap_new__tds__RemoveScopesResponse(soap*) allocate
/// - soap_new__tds__RemoveScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveScopesResponse(soap, _tds__RemoveScopesResponse*) serialize to a stream
class _tds__RemoveScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// class _tds__GetDiscoveryMode operations:
/// - soap_new__tds__GetDiscoveryMode(soap*) allocate
/// - soap_new__tds__GetDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryMode(soap, _tds__GetDiscoveryMode*) serialize to a stream
class _tds__GetDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// class _tds__GetDiscoveryModeResponse operations:
/// - soap_new__tds__GetDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__GetDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryModeResponse(soap, _tds__GetDiscoveryModeResponse*) serialize to a stream
class _tds__GetDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// class _tds__SetDiscoveryMode operations:
/// - soap_new__tds__SetDiscoveryMode(soap*) allocate
/// - soap_new__tds__SetDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryMode(soap, _tds__SetDiscoveryMode*) serialize to a stream
class _tds__SetDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// class _tds__SetDiscoveryModeResponse operations:
/// - soap_new__tds__SetDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__SetDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryModeResponse(soap, _tds__SetDiscoveryModeResponse*) serialize to a stream
class _tds__SetDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// class _tds__GetRemoteDiscoveryMode operations:
/// - soap_new__tds__GetRemoteDiscoveryMode(soap*) allocate
/// - soap_new__tds__GetRemoteDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryMode(soap, _tds__GetRemoteDiscoveryMode*) serialize to a stream
class _tds__GetRemoteDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// class _tds__GetRemoteDiscoveryModeResponse operations:
/// - soap_new__tds__GetRemoteDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__GetRemoteDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(soap, _tds__GetRemoteDiscoveryModeResponse*) serialize to a stream
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// class _tds__SetRemoteDiscoveryMode operations:
/// - soap_new__tds__SetRemoteDiscoveryMode(soap*) allocate
/// - soap_new__tds__SetRemoteDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryMode(soap, _tds__SetRemoteDiscoveryMode*) serialize to a stream
class _tds__SetRemoteDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscoveryMode" of XSD type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// class _tds__SetRemoteDiscoveryModeResponse operations:
/// - soap_new__tds__SetRemoteDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__SetRemoteDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(soap, _tds__SetRemoteDiscoveryModeResponse*) serialize to a stream
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// class _tds__GetDPAddresses operations:
/// - soap_new__tds__GetDPAddresses(soap*) allocate
/// - soap_new__tds__GetDPAddresses(soap*, int num) allocate array
/// - soap_new_req__tds__GetDPAddresses(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDPAddresses(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__GetDPAddresses(soap, _tds__GetDPAddresses*) serialize to a stream
class _tds__GetDPAddresses
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// class _tds__GetDPAddressesResponse operations:
/// - soap_new__tds__GetDPAddressesResponse(soap*) allocate
/// - soap_new__tds__GetDPAddressesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDPAddressesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDPAddressesResponse(soap, _tds__GetDPAddressesResponse*) serialize to a stream
class _tds__GetDPAddressesResponse
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// class _tds__SetDPAddresses operations:
/// - soap_new__tds__SetDPAddresses(soap*) allocate
/// - soap_new__tds__SetDPAddresses(soap*, int num) allocate array
/// - soap_new_req__tds__SetDPAddresses(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDPAddresses(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__SetDPAddresses(soap, _tds__SetDPAddresses*) serialize to a stream
class _tds__SetDPAddresses
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// class _tds__SetDPAddressesResponse operations:
/// - soap_new__tds__SetDPAddressesResponse(soap*) allocate
/// - soap_new__tds__SetDPAddressesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDPAddressesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__SetDPAddressesResponse(soap, _tds__SetDPAddressesResponse*) serialize to a stream
class _tds__SetDPAddressesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// class _tds__GetEndpointReference operations:
/// - soap_new__tds__GetEndpointReference(soap*) allocate
/// - soap_new__tds__GetEndpointReference(soap*, int num) allocate array
/// - soap_new_req__tds__GetEndpointReference(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetEndpointReference(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReference(soap, _tds__GetEndpointReference*) serialize to a stream
class _tds__GetEndpointReference
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// class _tds__GetEndpointReferenceResponse operations:
/// - soap_new__tds__GetEndpointReferenceResponse(soap*) allocate
/// - soap_new__tds__GetEndpointReferenceResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReferenceResponse(soap, _tds__GetEndpointReferenceResponse*) serialize to a stream
class _tds__GetEndpointReferenceResponse
{ public:
/// Element "GUID" of XSD type xs:string.
    std::string                          GUID                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// class _tds__GetRemoteUser operations:
/// - soap_new__tds__GetRemoteUser(soap*) allocate
/// - soap_new__tds__GetRemoteUser(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUser(soap, _tds__GetRemoteUser*) serialize to a stream
class _tds__GetRemoteUser
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// class _tds__GetRemoteUserResponse operations:
/// - soap_new__tds__GetRemoteUserResponse(soap*) allocate
/// - soap_new__tds__GetRemoteUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUserResponse(soap, _tds__GetRemoteUserResponse*) serialize to a stream
class _tds__GetRemoteUserResponse
{ public:
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// class _tds__SetRemoteUser operations:
/// - soap_new__tds__SetRemoteUser(soap*) allocate
/// - soap_new__tds__SetRemoteUser(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUser(soap, _tds__SetRemoteUser*) serialize to a stream
class _tds__SetRemoteUser
{ public:
/// Element "RemoteUser" of XSD type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// class _tds__SetRemoteUserResponse operations:
/// - soap_new__tds__SetRemoteUserResponse(soap*) allocate
/// - soap_new__tds__SetRemoteUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUserResponse(soap, _tds__SetRemoteUserResponse*) serialize to a stream
class _tds__SetRemoteUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// class _tds__GetUsers operations:
/// - soap_new__tds__GetUsers(soap*) allocate
/// - soap_new__tds__GetUsers(soap*, int num) allocate array
/// - soap_new_req__tds__GetUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetUsers(soap*, _tds__GetUsers*) deserialize from a stream
/// - int soap_write__tds__GetUsers(soap, _tds__GetUsers*) serialize to a stream
class _tds__GetUsers
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// class _tds__GetUsersResponse operations:
/// - soap_new__tds__GetUsersResponse(soap*) allocate
/// - soap_new__tds__GetUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) deserialize from a stream
/// - int soap_write__tds__GetUsersResponse(soap, _tds__GetUsersResponse*) serialize to a stream
class _tds__GetUsersResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__User* of length 0..unbounded.
    std::vector<tt__User*              > User                           0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// class _tds__CreateUsers operations:
/// - soap_new__tds__CreateUsers(soap*) allocate
/// - soap_new__tds__CreateUsers(soap*, int num) allocate array
/// - soap_new_req__tds__CreateUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateUsers(soap*, _tds__CreateUsers*) deserialize from a stream
/// - int soap_write__tds__CreateUsers(soap, _tds__CreateUsers*) serialize to a stream
class _tds__CreateUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// class _tds__CreateUsersResponse operations:
/// - soap_new__tds__CreateUsersResponse(soap*) allocate
/// - soap_new__tds__CreateUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) deserialize from a stream
/// - int soap_write__tds__CreateUsersResponse(soap, _tds__CreateUsersResponse*) serialize to a stream
class _tds__CreateUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// class _tds__DeleteUsers operations:
/// - soap_new__tds__DeleteUsers(soap*) allocate
/// - soap_new__tds__DeleteUsers(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteUsers(soap*, _tds__DeleteUsers*) deserialize from a stream
/// - int soap_write__tds__DeleteUsers(soap, _tds__DeleteUsers*) serialize to a stream
class _tds__DeleteUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Username                       1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// class _tds__DeleteUsersResponse operations:
/// - soap_new__tds__DeleteUsersResponse(soap*) allocate
/// - soap_new__tds__DeleteUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteUsersResponse(soap, _tds__DeleteUsersResponse*) serialize to a stream
class _tds__DeleteUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// class _tds__SetUser operations:
/// - soap_new__tds__SetUser(soap*) allocate
/// - soap_new__tds__SetUser(soap*, int num) allocate array
/// - soap_new_req__tds__SetUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetUser(soap*, _tds__SetUser*) deserialize from a stream
/// - int soap_write__tds__SetUser(soap, _tds__SetUser*) serialize to a stream
class _tds__SetUser
{ public:
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// class _tds__SetUserResponse operations:
/// - soap_new__tds__SetUserResponse(soap*) allocate
/// - soap_new__tds__SetUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetUserResponse(soap*, _tds__SetUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetUserResponse(soap, _tds__SetUserResponse*) serialize to a stream
class _tds__SetUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// class _tds__GetWsdlUrl operations:
/// - soap_new__tds__GetWsdlUrl(soap*) allocate
/// - soap_new__tds__GetWsdlUrl(soap*, int num) allocate array
/// - soap_new_req__tds__GetWsdlUrl(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetWsdlUrl(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrl(soap, _tds__GetWsdlUrl*) serialize to a stream
class _tds__GetWsdlUrl
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// class _tds__GetWsdlUrlResponse operations:
/// - soap_new__tds__GetWsdlUrlResponse(soap*) allocate
/// - soap_new__tds__GetWsdlUrlResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetWsdlUrlResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetWsdlUrlResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrlResponse(soap, _tds__GetWsdlUrlResponse*) serialize to a stream
class _tds__GetWsdlUrlResponse
{ public:
/// Element "WsdlUrl" of XSD type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// class _tds__GetCapabilities operations:
/// - soap_new__tds__GetCapabilities(soap*) allocate
/// - soap_new__tds__GetCapabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCapabilities(soap*, _tds__GetCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetCapabilities(soap, _tds__GetCapabilities*) serialize to a stream
class _tds__GetCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__CapabilityCategory of length 0..unbounded.
    std::vector<enum tt__CapabilityCategory> Category                       0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// class _tds__GetCapabilitiesResponse operations:
/// - soap_new__tds__GetCapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCapabilitiesResponse(soap, _tds__GetCapabilitiesResponse*) serialize to a stream
class _tds__GetCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// class _tds__GetHostname operations:
/// - soap_new__tds__GetHostname(soap*) allocate
/// - soap_new__tds__GetHostname(soap*, int num) allocate array
/// - soap_new_req__tds__GetHostname(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetHostname(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetHostname(soap*, _tds__GetHostname*) deserialize from a stream
/// - int soap_write__tds__GetHostname(soap, _tds__GetHostname*) serialize to a stream
class _tds__GetHostname
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// class _tds__GetHostnameResponse operations:
/// - soap_new__tds__GetHostnameResponse(soap*) allocate
/// - soap_new__tds__GetHostnameResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetHostnameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetHostnameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__GetHostnameResponse(soap, _tds__GetHostnameResponse*) serialize to a stream
class _tds__GetHostnameResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
/// Element "HostnameInformation" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// class _tds__SetHostname operations:
/// - soap_new__tds__SetHostname(soap*) allocate
/// - soap_new__tds__SetHostname(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostname(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostname(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostname(soap*, _tds__SetHostname*) deserialize from a stream
/// - int soap_write__tds__SetHostname(soap, _tds__SetHostname*) serialize to a stream
class _tds__SetHostname
{ public:
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// class _tds__SetHostnameResponse operations:
/// - soap_new__tds__SetHostnameResponse(soap*) allocate
/// - soap_new__tds__SetHostnameResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameResponse(soap, _tds__SetHostnameResponse*) serialize to a stream
class _tds__SetHostnameResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// class _tds__SetHostnameFromDHCP operations:
/// - soap_new__tds__SetHostnameFromDHCP(soap*) allocate
/// - soap_new__tds__SetHostnameFromDHCP(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameFromDHCP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameFromDHCP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCP(soap, _tds__SetHostnameFromDHCP*) serialize to a stream
class _tds__SetHostnameFromDHCP
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// class _tds__SetHostnameFromDHCPResponse operations:
/// - soap_new__tds__SetHostnameFromDHCPResponse(soap*) allocate
/// - soap_new__tds__SetHostnameFromDHCPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCPResponse(soap, _tds__SetHostnameFromDHCPResponse*) serialize to a stream
class _tds__SetHostnameFromDHCPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// class _tds__GetDNS operations:
/// - soap_new__tds__GetDNS(soap*) allocate
/// - soap_new__tds__GetDNS(soap*, int num) allocate array
/// - soap_new_req__tds__GetDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDNS(soap*, _tds__GetDNS*) deserialize from a stream
/// - int soap_write__tds__GetDNS(soap, _tds__GetDNS*) serialize to a stream
class _tds__GetDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// class _tds__GetDNSResponse operations:
/// - soap_new__tds__GetDNSResponse(soap*) allocate
/// - soap_new__tds__GetDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDNSResponse(soap, _tds__GetDNSResponse*) serialize to a stream
class _tds__GetDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// class _tds__SetDNS operations:
/// - soap_new__tds__SetDNS(soap*) allocate
/// - soap_new__tds__SetDNS(soap*, int num) allocate array
/// - soap_new_req__tds__SetDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDNS(soap*, _tds__SetDNS*) deserialize from a stream
/// - int soap_write__tds__SetDNS(soap, _tds__SetDNS*) serialize to a stream
class _tds__SetDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// class _tds__SetDNSResponse operations:
/// - soap_new__tds__SetDNSResponse(soap*) allocate
/// - soap_new__tds__SetDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDNSResponse(soap, _tds__SetDNSResponse*) serialize to a stream
class _tds__SetDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// class _tds__GetNTP operations:
/// - soap_new__tds__GetNTP(soap*) allocate
/// - soap_new__tds__GetNTP(soap*, int num) allocate array
/// - soap_new_req__tds__GetNTP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNTP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNTP(soap*, _tds__GetNTP*) deserialize from a stream
/// - int soap_write__tds__GetNTP(soap, _tds__GetNTP*) serialize to a stream
class _tds__GetNTP
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// class _tds__GetNTPResponse operations:
/// - soap_new__tds__GetNTPResponse(soap*) allocate
/// - soap_new__tds__GetNTPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNTPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNTPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__GetNTPResponse(soap, _tds__GetNTPResponse*) serialize to a stream
class _tds__GetNTPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
/// Element "NTPInformation" of XSD type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// class _tds__SetNTP operations:
/// - soap_new__tds__SetNTP(soap*) allocate
/// - soap_new__tds__SetNTP(soap*, int num) allocate array
/// - soap_new_req__tds__SetNTP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNTP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNTP(soap*, _tds__SetNTP*) deserialize from a stream
/// - int soap_write__tds__SetNTP(soap, _tds__SetNTP*) serialize to a stream
class _tds__SetNTP
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// class _tds__SetNTPResponse operations:
/// - soap_new__tds__SetNTPResponse(soap*) allocate
/// - soap_new__tds__SetNTPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNTPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNTPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__SetNTPResponse(soap, _tds__SetNTPResponse*) serialize to a stream
class _tds__SetNTPResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// class _tds__GetDynamicDNS operations:
/// - soap_new__tds__GetDynamicDNS(soap*) allocate
/// - soap_new__tds__GetDynamicDNS(soap*, int num) allocate array
/// - soap_new_req__tds__GetDynamicDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDynamicDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNS(soap, _tds__GetDynamicDNS*) serialize to a stream
class _tds__GetDynamicDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// class _tds__GetDynamicDNSResponse operations:
/// - soap_new__tds__GetDynamicDNSResponse(soap*) allocate
/// - soap_new__tds__GetDynamicDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNSResponse(soap, _tds__GetDynamicDNSResponse*) serialize to a stream
class _tds__GetDynamicDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
/// Element "DynamicDNSInformation" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// class _tds__SetDynamicDNS operations:
/// - soap_new__tds__SetDynamicDNS(soap*) allocate
/// - soap_new__tds__SetDynamicDNS(soap*, int num) allocate array
/// - soap_new_req__tds__SetDynamicDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDynamicDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNS(soap, _tds__SetDynamicDNS*) serialize to a stream
class _tds__SetDynamicDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// class _tds__SetDynamicDNSResponse operations:
/// - soap_new__tds__SetDynamicDNSResponse(soap*) allocate
/// - soap_new__tds__SetDynamicDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNSResponse(soap, _tds__SetDynamicDNSResponse*) serialize to a stream
class _tds__SetDynamicDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// class _tds__GetNetworkInterfaces operations:
/// - soap_new__tds__GetNetworkInterfaces(soap*) allocate
/// - soap_new__tds__GetNetworkInterfaces(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkInterfaces(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfaces(soap, _tds__GetNetworkInterfaces*) serialize to a stream
class _tds__GetNetworkInterfaces
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// class _tds__GetNetworkInterfacesResponse operations:
/// - soap_new__tds__GetNetworkInterfacesResponse(soap*) allocate
/// - soap_new__tds__GetNetworkInterfacesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfacesResponse(soap, _tds__GetNetworkInterfacesResponse*) serialize to a stream
class _tds__GetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkInterface* of length 1..unbounded.
    std::vector<tt__NetworkInterface*  > NetworkInterfaces              1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// class _tds__SetNetworkInterfaces operations:
/// - soap_new__tds__SetNetworkInterfaces(soap*) allocate
/// - soap_new__tds__SetNetworkInterfaces(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkInterfaces(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfaces(soap, _tds__SetNetworkInterfaces*) serialize to a stream
class _tds__SetNetworkInterfaces
{ public:
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkInterface" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// class _tds__SetNetworkInterfacesResponse operations:
/// - soap_new__tds__SetNetworkInterfacesResponse(soap*) allocate
/// - soap_new__tds__SetNetworkInterfacesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfacesResponse(soap, _tds__SetNetworkInterfacesResponse*) serialize to a stream
class _tds__SetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
/// Element "RebootNeeded" of XSD type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// class _tds__GetNetworkProtocols operations:
/// - soap_new__tds__GetNetworkProtocols(soap*) allocate
/// - soap_new__tds__GetNetworkProtocols(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkProtocols(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkProtocols(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocols(soap, _tds__GetNetworkProtocols*) serialize to a stream
class _tds__GetNetworkProtocols
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// class _tds__GetNetworkProtocolsResponse operations:
/// - soap_new__tds__GetNetworkProtocolsResponse(soap*) allocate
/// - soap_new__tds__GetNetworkProtocolsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocolsResponse(soap, _tds__GetNetworkProtocolsResponse*) serialize to a stream
class _tds__GetNetworkProtocolsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkProtocol* of length 0..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// class _tds__SetNetworkProtocols operations:
/// - soap_new__tds__SetNetworkProtocols(soap*) allocate
/// - soap_new__tds__SetNetworkProtocols(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkProtocols(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkProtocols(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocols(soap, _tds__SetNetworkProtocols*) serialize to a stream
class _tds__SetNetworkProtocols
{ public:
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkProtocol* of length 1..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// class _tds__SetNetworkProtocolsResponse operations:
/// - soap_new__tds__SetNetworkProtocolsResponse(soap*) allocate
/// - soap_new__tds__SetNetworkProtocolsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocolsResponse(soap, _tds__SetNetworkProtocolsResponse*) serialize to a stream
class _tds__SetNetworkProtocolsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// class _tds__GetNetworkDefaultGateway operations:
/// - soap_new__tds__GetNetworkDefaultGateway(soap*) allocate
/// - soap_new__tds__GetNetworkDefaultGateway(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGateway(soap, _tds__GetNetworkDefaultGateway*) serialize to a stream
class _tds__GetNetworkDefaultGateway
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// class _tds__GetNetworkDefaultGatewayResponse operations:
/// - soap_new__tds__GetNetworkDefaultGatewayResponse(soap*) allocate
/// - soap_new__tds__GetNetworkDefaultGatewayResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(soap, _tds__GetNetworkDefaultGatewayResponse*) serialize to a stream
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
/// Element "NetworkGateway" of XSD type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// class _tds__SetNetworkDefaultGateway operations:
/// - soap_new__tds__SetNetworkDefaultGateway(soap*) allocate
/// - soap_new__tds__SetNetworkDefaultGateway(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGateway(soap, _tds__SetNetworkDefaultGateway*) serialize to a stream
class _tds__SetNetworkDefaultGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// class _tds__SetNetworkDefaultGatewayResponse operations:
/// - soap_new__tds__SetNetworkDefaultGatewayResponse(soap*) allocate
/// - soap_new__tds__SetNetworkDefaultGatewayResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(soap, _tds__SetNetworkDefaultGatewayResponse*) serialize to a stream
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// class _tds__GetZeroConfiguration operations:
/// - soap_new__tds__GetZeroConfiguration(soap*) allocate
/// - soap_new__tds__GetZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__GetZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfiguration(soap, _tds__GetZeroConfiguration*) serialize to a stream
class _tds__GetZeroConfiguration
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// class _tds__GetZeroConfigurationResponse operations:
/// - soap_new__tds__GetZeroConfigurationResponse(soap*) allocate
/// - soap_new__tds__GetZeroConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfigurationResponse(soap, _tds__GetZeroConfigurationResponse*) serialize to a stream
class _tds__GetZeroConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// class _tds__SetZeroConfiguration operations:
/// - soap_new__tds__SetZeroConfiguration(soap*) allocate
/// - soap_new__tds__SetZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__SetZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfiguration(soap, _tds__SetZeroConfiguration*) serialize to a stream
class _tds__SetZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// class _tds__SetZeroConfigurationResponse operations:
/// - soap_new__tds__SetZeroConfigurationResponse(soap*) allocate
/// - soap_new__tds__SetZeroConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfigurationResponse(soap, _tds__SetZeroConfigurationResponse*) serialize to a stream
class _tds__SetZeroConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// class _tds__GetIPAddressFilter operations:
/// - soap_new__tds__GetIPAddressFilter(soap*) allocate
/// - soap_new__tds__GetIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__GetIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilter(soap, _tds__GetIPAddressFilter*) serialize to a stream
class _tds__GetIPAddressFilter
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// class _tds__GetIPAddressFilterResponse operations:
/// - soap_new__tds__GetIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__GetIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilterResponse(soap, _tds__GetIPAddressFilterResponse*) serialize to a stream
class _tds__GetIPAddressFilterResponse
{ public:
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// class _tds__SetIPAddressFilter operations:
/// - soap_new__tds__SetIPAddressFilter(soap*) allocate
/// - soap_new__tds__SetIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__SetIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilter(soap, _tds__SetIPAddressFilter*) serialize to a stream
class _tds__SetIPAddressFilter
{ public:
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// class _tds__SetIPAddressFilterResponse operations:
/// - soap_new__tds__SetIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__SetIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilterResponse(soap, _tds__SetIPAddressFilterResponse*) serialize to a stream
class _tds__SetIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// class _tds__AddIPAddressFilter operations:
/// - soap_new__tds__AddIPAddressFilter(soap*) allocate
/// - soap_new__tds__AddIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__AddIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilter(soap, _tds__AddIPAddressFilter*) serialize to a stream
class _tds__AddIPAddressFilter
{ public:
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// class _tds__AddIPAddressFilterResponse operations:
/// - soap_new__tds__AddIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__AddIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilterResponse(soap, _tds__AddIPAddressFilterResponse*) serialize to a stream
class _tds__AddIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// class _tds__RemoveIPAddressFilter operations:
/// - soap_new__tds__RemoveIPAddressFilter(soap*) allocate
/// - soap_new__tds__RemoveIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilter(soap, _tds__RemoveIPAddressFilter*) serialize to a stream
class _tds__RemoveIPAddressFilter
{ public:
/// Element "IPAddressFilter" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// class _tds__RemoveIPAddressFilterResponse operations:
/// - soap_new__tds__RemoveIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__RemoveIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilterResponse(soap, _tds__RemoveIPAddressFilterResponse*) serialize to a stream
class _tds__RemoveIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// class _tds__GetAccessPolicy operations:
/// - soap_new__tds__GetAccessPolicy(soap*) allocate
/// - soap_new__tds__GetAccessPolicy(soap*, int num) allocate array
/// - soap_new_req__tds__GetAccessPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetAccessPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicy(soap, _tds__GetAccessPolicy*) serialize to a stream
class _tds__GetAccessPolicy
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// class _tds__GetAccessPolicyResponse operations:
/// - soap_new__tds__GetAccessPolicyResponse(soap*) allocate
/// - soap_new__tds__GetAccessPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicyResponse(soap, _tds__GetAccessPolicyResponse*) serialize to a stream
class _tds__GetAccessPolicyResponse
{ public:
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// class _tds__SetAccessPolicy operations:
/// - soap_new__tds__SetAccessPolicy(soap*) allocate
/// - soap_new__tds__SetAccessPolicy(soap*, int num) allocate array
/// - soap_new_req__tds__SetAccessPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetAccessPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicy(soap, _tds__SetAccessPolicy*) serialize to a stream
class _tds__SetAccessPolicy
{ public:
/// Element "PolicyFile" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// class _tds__SetAccessPolicyResponse operations:
/// - soap_new__tds__SetAccessPolicyResponse(soap*) allocate
/// - soap_new__tds__SetAccessPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicyResponse(soap, _tds__SetAccessPolicyResponse*) serialize to a stream
class _tds__SetAccessPolicyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// class _tds__CreateCertificate operations:
/// - soap_new__tds__CreateCertificate(soap*) allocate
/// - soap_new__tds__CreateCertificate(soap*, int num) allocate array
/// - soap_new_req__tds__CreateCertificate(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateCertificate(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateCertificate(soap*, _tds__CreateCertificate*) deserialize from a stream
/// - int soap_write__tds__CreateCertificate(soap, _tds__CreateCertificate*) serialize to a stream
class _tds__CreateCertificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotBefore" of XSD type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
/// Element "ValidNotAfter" of XSD type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// class _tds__CreateCertificateResponse operations:
/// - soap_new__tds__CreateCertificateResponse(soap*) allocate
/// - soap_new__tds__CreateCertificateResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateCertificateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateCertificateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) deserialize from a stream
/// - int soap_write__tds__CreateCertificateResponse(soap, _tds__CreateCertificateResponse*) serialize to a stream
class _tds__CreateCertificateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "NvtCertificate" of XSD type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// class _tds__GetCertificates operations:
/// - soap_new__tds__GetCertificates(soap*) allocate
/// - soap_new__tds__GetCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificates(soap*, _tds__GetCertificates*) deserialize from a stream
/// - int soap_write__tds__GetCertificates(soap, _tds__GetCertificates*) serialize to a stream
class _tds__GetCertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// class _tds__GetCertificatesResponse operations:
/// - soap_new__tds__GetCertificatesResponse(soap*) allocate
/// - soap_new__tds__GetCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesResponse(soap, _tds__GetCertificatesResponse*) serialize to a stream
class _tds__GetCertificatesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > NvtCertificate                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// class _tds__GetCertificatesStatus operations:
/// - soap_new__tds__GetCertificatesStatus(soap*) allocate
/// - soap_new__tds__GetCertificatesStatus(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesStatus(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesStatus(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatus(soap, _tds__GetCertificatesStatus*) serialize to a stream
class _tds__GetCertificatesStatus
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// class _tds__GetCertificatesStatusResponse operations:
/// - soap_new__tds__GetCertificatesStatusResponse(soap*) allocate
/// - soap_new__tds__GetCertificatesStatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatusResponse(soap, _tds__GetCertificatesStatusResponse*) serialize to a stream
class _tds__GetCertificatesStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// class _tds__SetCertificatesStatus operations:
/// - soap_new__tds__SetCertificatesStatus(soap*) allocate
/// - soap_new__tds__SetCertificatesStatus(soap*, int num) allocate array
/// - soap_new_req__tds__SetCertificatesStatus(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetCertificatesStatus(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatus(soap, _tds__SetCertificatesStatus*) serialize to a stream
class _tds__SetCertificatesStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// class _tds__SetCertificatesStatusResponse operations:
/// - soap_new__tds__SetCertificatesStatusResponse(soap*) allocate
/// - soap_new__tds__SetCertificatesStatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatusResponse(soap, _tds__SetCertificatesStatusResponse*) serialize to a stream
class _tds__SetCertificatesStatusResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// class _tds__DeleteCertificates operations:
/// - soap_new__tds__DeleteCertificates(soap*) allocate
/// - soap_new__tds__DeleteCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificates(soap, _tds__DeleteCertificates*) serialize to a stream
class _tds__DeleteCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__token of length 1..unbounded.
    std::vector<xsd__token             > CertificateID                  1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// class _tds__DeleteCertificatesResponse operations:
/// - soap_new__tds__DeleteCertificatesResponse(soap*) allocate
/// - soap_new__tds__DeleteCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificatesResponse(soap, _tds__DeleteCertificatesResponse*) serialize to a stream
class _tds__DeleteCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// class _tds__GetPkcs10Request operations:
/// - soap_new__tds__GetPkcs10Request(soap*) allocate
/// - soap_new__tds__GetPkcs10Request(soap*, int num) allocate array
/// - soap_new_req__tds__GetPkcs10Request(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetPkcs10Request(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10Request(soap, _tds__GetPkcs10Request*) serialize to a stream
class _tds__GetPkcs10Request
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
/// Element "Subject" of XSD type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
/// Element "Attributes" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// class _tds__GetPkcs10RequestResponse operations:
/// - soap_new__tds__GetPkcs10RequestResponse(soap*) allocate
/// - soap_new__tds__GetPkcs10RequestResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10RequestResponse(soap, _tds__GetPkcs10RequestResponse*) serialize to a stream
class _tds__GetPkcs10RequestResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Pkcs10Request" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// class _tds__LoadCertificates operations:
/// - soap_new__tds__LoadCertificates(soap*) allocate
/// - soap_new__tds__LoadCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificates(soap*, _tds__LoadCertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCertificates(soap, _tds__LoadCertificates*) serialize to a stream
class _tds__LoadCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > NVTCertificate                 1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// class _tds__LoadCertificatesResponse operations:
/// - soap_new__tds__LoadCertificatesResponse(soap*) allocate
/// - soap_new__tds__LoadCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificatesResponse(soap, _tds__LoadCertificatesResponse*) serialize to a stream
class _tds__LoadCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// class _tds__GetClientCertificateMode operations:
/// - soap_new__tds__GetClientCertificateMode(soap*) allocate
/// - soap_new__tds__GetClientCertificateMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetClientCertificateMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetClientCertificateMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateMode(soap, _tds__GetClientCertificateMode*) serialize to a stream
class _tds__GetClientCertificateMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// class _tds__GetClientCertificateModeResponse operations:
/// - soap_new__tds__GetClientCertificateModeResponse(soap*) allocate
/// - soap_new__tds__GetClientCertificateModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateModeResponse(soap, _tds__GetClientCertificateModeResponse*) serialize to a stream
class _tds__GetClientCertificateModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// class _tds__SetClientCertificateMode operations:
/// - soap_new__tds__SetClientCertificateMode(soap*) allocate
/// - soap_new__tds__SetClientCertificateMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetClientCertificateMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetClientCertificateMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateMode(soap, _tds__SetClientCertificateMode*) serialize to a stream
class _tds__SetClientCertificateMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// class _tds__SetClientCertificateModeResponse operations:
/// - soap_new__tds__SetClientCertificateModeResponse(soap*) allocate
/// - soap_new__tds__SetClientCertificateModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateModeResponse(soap, _tds__SetClientCertificateModeResponse*) serialize to a stream
class _tds__SetClientCertificateModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// class _tds__GetCACertificates operations:
/// - soap_new__tds__GetCACertificates(soap*) allocate
/// - soap_new__tds__GetCACertificates(soap*, int num) allocate array
/// - soap_new_req__tds__GetCACertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCACertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCACertificates(soap*, _tds__GetCACertificates*) deserialize from a stream
/// - int soap_write__tds__GetCACertificates(soap, _tds__GetCACertificates*) serialize to a stream
class _tds__GetCACertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// class _tds__GetCACertificatesResponse operations:
/// - soap_new__tds__GetCACertificatesResponse(soap*) allocate
/// - soap_new__tds__GetCACertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCACertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCACertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCACertificatesResponse(soap, _tds__GetCACertificatesResponse*) serialize to a stream
class _tds__GetCACertificatesResponse
{ public:
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// class _tds__LoadCertificateWithPrivateKey operations:
/// - soap_new__tds__LoadCertificateWithPrivateKey(soap*) allocate
/// - soap_new__tds__LoadCertificateWithPrivateKey(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKey(soap, _tds__LoadCertificateWithPrivateKey*) serialize to a stream
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Vector of tt__CertificateWithPrivateKey* of length 1..unbounded.
    std::vector<tt__CertificateWithPrivateKey*> CertificateWithPrivateKey      1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// class _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*) allocate
/// - soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a stream
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// class _tds__GetCertificateInformation operations:
/// - soap_new__tds__GetCertificateInformation(soap*) allocate
/// - soap_new__tds__GetCertificateInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificateInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificateInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformation(soap, _tds__GetCertificateInformation*) serialize to a stream
class _tds__GetCertificateInformation
{ public:
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// class _tds__GetCertificateInformationResponse operations:
/// - soap_new__tds__GetCertificateInformationResponse(soap*) allocate
/// - soap_new__tds__GetCertificateInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificateInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificateInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformationResponse(soap, _tds__GetCertificateInformationResponse*) serialize to a stream
class _tds__GetCertificateInformationResponse
{ public:
/// Element "CertificateInformation" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// class _tds__LoadCACertificates operations:
/// - soap_new__tds__LoadCACertificates(soap*) allocate
/// - soap_new__tds__LoadCACertificates(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCACertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCACertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificates(soap, _tds__LoadCACertificates*) serialize to a stream
class _tds__LoadCACertificates
{ public:
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// class _tds__LoadCACertificatesResponse operations:
/// - soap_new__tds__LoadCACertificatesResponse(soap*) allocate
/// - soap_new__tds__LoadCACertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCACertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCACertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificatesResponse(soap, _tds__LoadCACertificatesResponse*) serialize to a stream
class _tds__LoadCACertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// class _tds__CreateDot1XConfiguration operations:
/// - soap_new__tds__CreateDot1XConfiguration(soap*) allocate
/// - soap_new__tds__CreateDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__CreateDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfiguration(soap, _tds__CreateDot1XConfiguration*) serialize to a stream
class _tds__CreateDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// class _tds__CreateDot1XConfigurationResponse operations:
/// - soap_new__tds__CreateDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__CreateDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfigurationResponse(soap, _tds__CreateDot1XConfigurationResponse*) serialize to a stream
class _tds__CreateDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// class _tds__SetDot1XConfiguration operations:
/// - soap_new__tds__SetDot1XConfiguration(soap*) allocate
/// - soap_new__tds__SetDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__SetDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfiguration(soap, _tds__SetDot1XConfiguration*) serialize to a stream
class _tds__SetDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// class _tds__SetDot1XConfigurationResponse operations:
/// - soap_new__tds__SetDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__SetDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfigurationResponse(soap, _tds__SetDot1XConfigurationResponse*) serialize to a stream
class _tds__SetDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// class _tds__GetDot1XConfiguration operations:
/// - soap_new__tds__GetDot1XConfiguration(soap*) allocate
/// - soap_new__tds__GetDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfiguration(soap, _tds__GetDot1XConfiguration*) serialize to a stream
class _tds__GetDot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// class _tds__GetDot1XConfigurationResponse operations:
/// - soap_new__tds__GetDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationResponse(soap, _tds__GetDot1XConfigurationResponse*) serialize to a stream
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element "Dot1XConfiguration" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// class _tds__GetDot1XConfigurations operations:
/// - soap_new__tds__GetDot1XConfigurations(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurations(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurations(soap, _tds__GetDot1XConfigurations*) serialize to a stream
class _tds__GetDot1XConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// class _tds__GetDot1XConfigurationsResponse operations:
/// - soap_new__tds__GetDot1XConfigurationsResponse(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationsResponse(soap, _tds__GetDot1XConfigurationsResponse*) serialize to a stream
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Vector of tt__Dot1XConfiguration* of length 0..unbounded.
    std::vector<tt__Dot1XConfiguration*> Dot1XConfiguration             0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// class _tds__DeleteDot1XConfiguration operations:
/// - soap_new__tds__DeleteDot1XConfiguration(soap*) allocate
/// - soap_new__tds__DeleteDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfiguration(soap, _tds__DeleteDot1XConfiguration*) serialize to a stream
class _tds__DeleteDot1XConfiguration
{ public:
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > Dot1XConfigurationToken        0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// class _tds__DeleteDot1XConfigurationResponse operations:
/// - soap_new__tds__DeleteDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__DeleteDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(soap, _tds__DeleteDot1XConfigurationResponse*) serialize to a stream
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// class _tds__GetRelayOutputs operations:
/// - soap_new__tds__GetRelayOutputs(soap*) allocate
/// - soap_new__tds__GetRelayOutputs(soap*, int num) allocate array
/// - soap_new_req__tds__GetRelayOutputs(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRelayOutputs(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputs(soap, _tds__GetRelayOutputs*) serialize to a stream
class _tds__GetRelayOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// class _tds__GetRelayOutputsResponse operations:
/// - soap_new__tds__GetRelayOutputsResponse(soap*) allocate
/// - soap_new__tds__GetRelayOutputsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRelayOutputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRelayOutputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputsResponse(soap, _tds__GetRelayOutputsResponse*) serialize to a stream
class _tds__GetRelayOutputsResponse
{ public:
/// Vector of tt__RelayOutput* of length 0..unbounded.
    std::vector<tt__RelayOutput*       > RelayOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// class _tds__SetRelayOutputSettings operations:
/// - soap_new__tds__SetRelayOutputSettings(soap*) allocate
/// - soap_new__tds__SetRelayOutputSettings(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettings(soap, _tds__SetRelayOutputSettings*) serialize to a stream
class _tds__SetRelayOutputSettings
{ public:
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// class _tds__SetRelayOutputSettingsResponse operations:
/// - soap_new__tds__SetRelayOutputSettingsResponse(soap*) allocate
/// - soap_new__tds__SetRelayOutputSettingsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettingsResponse(soap, _tds__SetRelayOutputSettingsResponse*) serialize to a stream
class _tds__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// class _tds__SetRelayOutputState operations:
/// - soap_new__tds__SetRelayOutputState(soap*) allocate
/// - soap_new__tds__SetRelayOutputState(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputState(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputState(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputState(soap, _tds__SetRelayOutputState*) serialize to a stream
class _tds__SetRelayOutputState
{ public:
/// Element "RelayOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of XSD type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// class _tds__SetRelayOutputStateResponse operations:
/// - soap_new__tds__SetRelayOutputStateResponse(soap*) allocate
/// - soap_new__tds__SetRelayOutputStateResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputStateResponse(soap, _tds__SetRelayOutputStateResponse*) serialize to a stream
class _tds__SetRelayOutputStateResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// class _tds__SendAuxiliaryCommand operations:
/// - soap_new__tds__SendAuxiliaryCommand(soap*) allocate
/// - soap_new__tds__SendAuxiliaryCommand(soap*, int num) allocate array
/// - soap_new_req__tds__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommand(soap, _tds__SendAuxiliaryCommand*) serialize to a stream
class _tds__SendAuxiliaryCommand
{ public:
/// Element "AuxiliaryCommand" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// class _tds__SendAuxiliaryCommandResponse operations:
/// - soap_new__tds__SendAuxiliaryCommandResponse(soap*) allocate
/// - soap_new__tds__SendAuxiliaryCommandResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommandResponse(soap, _tds__SendAuxiliaryCommandResponse*) serialize to a stream
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element "AuxiliaryCommandResponse" of XSD type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData*                   AuxiliaryCommandResponse       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// class _tds__GetDot11Capabilities operations:
/// - soap_new__tds__GetDot11Capabilities(soap*) allocate
/// - soap_new__tds__GetDot11Capabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) deserialize from a stream
/// - int soap_write__tds__GetDot11Capabilities(soap, _tds__GetDot11Capabilities*) serialize to a stream
class _tds__GetDot11Capabilities
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// class _tds__GetDot11CapabilitiesResponse operations:
/// - soap_new__tds__GetDot11CapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetDot11CapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11CapabilitiesResponse(soap, _tds__GetDot11CapabilitiesResponse*) serialize to a stream
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// class _tds__GetDot11Status operations:
/// - soap_new__tds__GetDot11Status(soap*) allocate
/// - soap_new__tds__GetDot11Status(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11Status(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11Status(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11Status(soap*, _tds__GetDot11Status*) deserialize from a stream
/// - int soap_write__tds__GetDot11Status(soap, _tds__GetDot11Status*) serialize to a stream
class _tds__GetDot11Status
{ public:
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// class _tds__GetDot11StatusResponse operations:
/// - soap_new__tds__GetDot11StatusResponse(soap*) allocate
/// - soap_new__tds__GetDot11StatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11StatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11StatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11StatusResponse(soap, _tds__GetDot11StatusResponse*) serialize to a stream
class _tds__GetDot11StatusResponse
{ public:
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// class _tds__ScanAvailableDot11Networks operations:
/// - soap_new__tds__ScanAvailableDot11Networks(soap*) allocate
/// - soap_new__tds__ScanAvailableDot11Networks(soap*, int num) allocate array
/// - soap_new_req__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set required members
/// - soap_new_set__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set all public members
/// - int soap_read__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11Networks(soap, _tds__ScanAvailableDot11Networks*) serialize to a stream
class _tds__ScanAvailableDot11Networks
{ public:
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// class _tds__ScanAvailableDot11NetworksResponse operations:
/// - soap_new__tds__ScanAvailableDot11NetworksResponse(soap*) allocate
/// - soap_new__tds__ScanAvailableDot11NetworksResponse(soap*, int num) allocate array
/// - soap_new_req__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(soap, _tds__ScanAvailableDot11NetworksResponse*) serialize to a stream
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Vector of tt__Dot11AvailableNetworks* of length 0..unbounded.
    std::vector<tt__Dot11AvailableNetworks*> Networks                       0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// class _tds__GetSystemUris operations:
/// - soap_new__tds__GetSystemUris(soap*) allocate
/// - soap_new__tds__GetSystemUris(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUris(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUris(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUris(soap*, _tds__GetSystemUris*) deserialize from a stream
/// - int soap_write__tds__GetSystemUris(soap, _tds__GetSystemUris*) serialize to a stream
class _tds__GetSystemUris
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// class _tds__GetSystemUrisResponse operations:
/// - soap_new__tds__GetSystemUrisResponse(soap*) allocate
/// - soap_new__tds__GetSystemUrisResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUrisResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUrisResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse(soap, _tds__GetSystemUrisResponse*) serialize to a stream
class _tds__GetSystemUrisResponse
{ public:
/// Element "SystemLogUris" of XSD type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of XSD type xs:anyURI.
    xsd__anyURI*                         SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of XSD type xs:anyURI.
    xsd__anyURI*                         SystemBackupUri                0;	///< Optional element.
/// class _tds__GetSystemUrisResponse_Extension operations:
/// - soap_new__tds__GetSystemUrisResponse_Extension(soap*) allocate
/// - soap_new__tds__GetSystemUrisResponse_Extension(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse_Extension(soap, _tds__GetSystemUrisResponse_Extension*) serialize to a stream
    class _tds__GetSystemUrisResponse_Extension
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// class _tds__StartFirmwareUpgrade operations:
/// - soap_new__tds__StartFirmwareUpgrade(soap*) allocate
/// - soap_new__tds__StartFirmwareUpgrade(soap*, int num) allocate array
/// - soap_new_req__tds__StartFirmwareUpgrade(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartFirmwareUpgrade(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgrade(soap, _tds__StartFirmwareUpgrade*) serialize to a stream
class _tds__StartFirmwareUpgrade
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// class _tds__StartFirmwareUpgradeResponse operations:
/// - soap_new__tds__StartFirmwareUpgradeResponse(soap*) allocate
/// - soap_new__tds__StartFirmwareUpgradeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgradeResponse(soap, _tds__StartFirmwareUpgradeResponse*) serialize to a stream
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of XSD type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// class _tds__StartSystemRestore operations:
/// - soap_new__tds__StartSystemRestore(soap*) allocate
/// - soap_new__tds__StartSystemRestore(soap*, int num) allocate array
/// - soap_new_req__tds__StartSystemRestore(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartSystemRestore(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestore(soap, _tds__StartSystemRestore*) serialize to a stream
class _tds__StartSystemRestore
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// class _tds__StartSystemRestoreResponse operations:
/// - soap_new__tds__StartSystemRestoreResponse(soap*) allocate
/// - soap_new__tds__StartSystemRestoreResponse(soap*, int num) allocate array
/// - soap_new_req__tds__StartSystemRestoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartSystemRestoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestoreResponse(soap, _tds__StartSystemRestoreResponse*) serialize to a stream
class _tds__StartSystemRestoreResponse
{ public:
/// Element "UploadUri" of XSD type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of XSD type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
/// class tt__DeviceEntity operations:
/// - soap_new_tt__DeviceEntity(soap*) allocate
/// - soap_new_tt__DeviceEntity(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap, tt__DeviceEntity*) serialize to a stream
class tt__DeviceEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
/// class tt__IntRectangle operations:
/// - soap_new_tt__IntRectangle(soap*) allocate
/// - soap_new_tt__IntRectangle(soap*, int num) allocate array
/// - soap_new_req_tt__IntRectangle(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRectangle(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRectangle(soap*, tt__IntRectangle*) deserialize from a stream
/// - int soap_write_tt__IntRectangle(soap, tt__IntRectangle*) serialize to a stream
class tt__IntRectangle
{ public:
/// Attribute "x" of XSD type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute "width" of XSD type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute "height" of XSD type xs:int.
   @int                                  height                         1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
/// class tt__IntRectangleRange operations:
/// - soap_new_tt__IntRectangleRange(soap*) allocate
/// - soap_new_tt__IntRectangleRange(soap*, int num) allocate array
/// - soap_new_req_tt__IntRectangleRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRectangleRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) deserialize from a stream
/// - int soap_write_tt__IntRectangleRange(soap, tt__IntRectangleRange*) serialize to a stream
class tt__IntRectangleRange
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
/// Element "WidthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
/// Element "HeightRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
/// class tt__IntRange operations:
/// - soap_new_tt__IntRange(soap*) allocate
/// - soap_new_tt__IntRange(soap*, int num) allocate array
/// - soap_new_req_tt__IntRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a stream
/// - int soap_write_tt__IntRange(soap, tt__IntRange*) serialize to a stream
class tt__IntRange
{ public:
/// Element "Min" of XSD type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:int.
    int                                  Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
/// class tt__FloatRange operations:
/// - soap_new_tt__FloatRange(soap*) allocate
/// - soap_new_tt__FloatRange(soap*, int num) allocate array
/// - soap_new_req_tt__FloatRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FloatRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a stream
/// - int soap_write_tt__FloatRange(soap, tt__FloatRange*) serialize to a stream
class tt__FloatRange
{ public:
/// Element "Min" of XSD type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:float.
    float                                Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
/// class tt__DurationRange operations:
/// - soap_new_tt__DurationRange(soap*) allocate
/// - soap_new_tt__DurationRange(soap*, int num) allocate array
/// - soap_new_req_tt__DurationRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DurationRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a stream
/// - int soap_write_tt__DurationRange(soap, tt__DurationRange*) serialize to a stream
class tt__DurationRange
{ public:
/// Element "Min" of XSD type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of XSD type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
/// class tt__IntList operations:
/// - soap_new_tt__IntList(soap*) allocate
/// - soap_new_tt__IntList(soap*, int num) allocate array
/// - soap_new_req_tt__IntList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntList(soap*, tt__IntList*) deserialize from a stream
/// - int soap_write_tt__IntList(soap, tt__IntList*) serialize to a stream
class tt__IntList
{ public:
/// Vector of int of length 0..unbounded.
    std::vector<int                    > Items                          0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatList is a complexType.
///
/// class tt__FloatList operations:
/// - soap_new_tt__FloatList(soap*) allocate
/// - soap_new_tt__FloatList(soap*, int num) allocate array
/// - soap_new_req_tt__FloatList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FloatList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FloatList(soap*, tt__FloatList*) deserialize from a stream
/// - int soap_write_tt__FloatList(soap, tt__FloatList*) serialize to a stream
class tt__FloatList
{ public:
/// Vector of float of length 0..unbounded.
    std::vector<float                  > Items                          0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
/// class tt__AnyHolder operations:
/// - soap_new_tt__AnyHolder(soap*) allocate
/// - soap_new_tt__AnyHolder(soap*, int num) allocate array
/// - soap_new_req_tt__AnyHolder(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnyHolder(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnyHolder(soap*, tt__AnyHolder*) deserialize from a stream
/// - int soap_write_tt__AnyHolder(soap, tt__AnyHolder*) serialize to a stream
class tt__AnyHolder
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
/// class tt__VideoSourceExtension operations:
/// - soap_new_tt__VideoSourceExtension(soap*) allocate
/// - soap_new_tt__VideoSourceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension(soap, tt__VideoSourceExtension*) serialize to a stream
class tt__VideoSourceExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
/// class tt__VideoSourceExtension2 operations:
/// - soap_new_tt__VideoSourceExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension2(soap, tt__VideoSourceExtension2*) serialize to a stream
class tt__VideoSourceExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
/// class tt__Profile operations:
/// - soap_new_tt__Profile(soap*) allocate
/// - soap_new_tt__Profile(soap*, int num) allocate array
/// - soap_new_req_tt__Profile(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Profile(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Profile(soap*, tt__Profile*) deserialize from a stream
/// - int soap_write_tt__Profile(soap, tt__Profile*) serialize to a stream
class tt__Profile
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
/// Element "VideoSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
/// Element "VideoEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
/// Element "PTZConfiguration" of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataConfiguration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "fixed" of XSD type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
/// class tt__ProfileExtension operations:
/// - soap_new_tt__ProfileExtension(soap*) allocate
/// - soap_new_tt__ProfileExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileExtension(soap*, tt__ProfileExtension*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension(soap, tt__ProfileExtension*) serialize to a stream
class tt__ProfileExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
/// class tt__ProfileExtension2 operations:
/// - soap_new_tt__ProfileExtension2(soap*) allocate
/// - soap_new_tt__ProfileExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension2(soap, tt__ProfileExtension2*) serialize to a stream
class tt__ProfileExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
/// class tt__ConfigurationEntity operations:
/// - soap_new_tt__ConfigurationEntity(soap*) allocate
/// - soap_new_tt__ConfigurationEntity(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigurationEntity(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigurationEntity(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a stream
/// - int soap_write_tt__ConfigurationEntity(soap, tt__ConfigurationEntity*) serialize to a stream
class tt__ConfigurationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
/// class tt__VideoSourceConfigurationExtension operations:
/// - soap_new_tt__VideoSourceConfigurationExtension(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension(soap, tt__VideoSourceConfigurationExtension*) serialize to a stream
class tt__VideoSourceConfigurationExtension
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
/// class tt__VideoSourceConfigurationExtension2 operations:
/// - soap_new_tt__VideoSourceConfigurationExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension2(soap, tt__VideoSourceConfigurationExtension2*) serialize to a stream
class tt__VideoSourceConfigurationExtension2
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
/// class tt__Rotate operations:
/// - soap_new_tt__Rotate(soap*) allocate
/// - soap_new_tt__Rotate(soap*, int num) allocate array
/// - soap_new_req_tt__Rotate(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Rotate(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Rotate(soap*, tt__Rotate*) deserialize from a stream
/// - int soap_write_tt__Rotate(soap, tt__Rotate*) serialize to a stream
class tt__Rotate
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
/// Element "Degree" of XSD type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
/// class tt__RotateExtension operations:
/// - soap_new_tt__RotateExtension(soap*) allocate
/// - soap_new_tt__RotateExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RotateExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateExtension(soap*, tt__RotateExtension*) deserialize from a stream
/// - int soap_write_tt__RotateExtension(soap, tt__RotateExtension*) serialize to a stream
class tt__RotateExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
/// class tt__VideoSourceConfigurationOptions operations:
/// - soap_new_tt__VideoSourceConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptions(soap, tt__VideoSourceConfigurationOptions*) serialize to a stream
class tt__VideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
/// </BLOCKQUOTE></PRE>
/// Element "BoundsRange" of XSD type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    tt__IntRectangleRange*               BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > VideoSourceTokensAvailable     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
/// class tt__VideoSourceConfigurationOptionsExtension operations:
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension(soap, tt__VideoSourceConfigurationOptionsExtension*) serialize to a stream
class tt__VideoSourceConfigurationOptionsExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
/// Element "Rotate" of XSD type "http://www.onvif.org/ver10/schema":RotateOptions.
    tt__RotateOptions*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
/// class tt__VideoSourceConfigurationOptionsExtension2 operations:
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap, tt__VideoSourceConfigurationOptionsExtension2*) serialize to a stream
class tt__VideoSourceConfigurationOptionsExtension2
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
/// class tt__RotateOptions operations:
/// - soap_new_tt__RotateOptions(soap*) allocate
/// - soap_new_tt__RotateOptions(soap*, int num) allocate array
/// - soap_new_req_tt__RotateOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateOptions(soap*, tt__RotateOptions*) deserialize from a stream
/// - int soap_write_tt__RotateOptions(soap, tt__RotateOptions*) serialize to a stream
class tt__RotateOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__RotateMode of length 1..unbounded.
    std::vector<enum tt__RotateMode    > Mode                           1;
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
/// Element "DegreeList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         DegreeList                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    tt__RotateOptionsExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
/// class tt__RotateOptionsExtension operations:
/// - soap_new_tt__RotateOptionsExtension(soap*) allocate
/// - soap_new_tt__RotateOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RotateOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__RotateOptionsExtension(soap, tt__RotateOptionsExtension*) serialize to a stream
class tt__RotateOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
/// class tt__VideoResolution operations:
/// - soap_new_tt__VideoResolution(soap*) allocate
/// - soap_new_tt__VideoResolution(soap*, int num) allocate array
/// - soap_new_req_tt__VideoResolution(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoResolution(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoResolution(soap*, tt__VideoResolution*) deserialize from a stream
/// - int soap_write_tt__VideoResolution(soap, tt__VideoResolution*) serialize to a stream
class tt__VideoResolution
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
/// class tt__VideoRateControl operations:
/// - soap_new_tt__VideoRateControl(soap*) allocate
/// - soap_new_tt__VideoRateControl(soap*, int num) allocate array
/// - soap_new_req_tt__VideoRateControl(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoRateControl(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoRateControl(soap*, tt__VideoRateControl*) deserialize from a stream
/// - int soap_write_tt__VideoRateControl(soap, tt__VideoRateControl*) serialize to a stream
class tt__VideoRateControl
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateLimit" of XSD type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
/// Element "EncodingInterval" of XSD type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
/// Element "BitrateLimit" of XSD type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
/// class tt__Mpeg4Configuration operations:
/// - soap_new_tt__Mpeg4Configuration(soap*) allocate
/// - soap_new_tt__Mpeg4Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Configuration(soap, tt__Mpeg4Configuration*) serialize to a stream
class tt__Mpeg4Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4Profile" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
/// class tt__H264Configuration operations:
/// - soap_new_tt__H264Configuration(soap*) allocate
/// - soap_new_tt__H264Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__H264Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Configuration(soap*, tt__H264Configuration*) deserialize from a stream
/// - int soap_write_tt__H264Configuration(soap, tt__H264Configuration*) serialize to a stream
class tt__H264Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
/// Element "GovLength" of XSD type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
/// Element "H264Profile" of XSD type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
/// class tt__VideoEncoderConfigurationOptions operations:
/// - soap_new_tt__VideoEncoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfigurationOptions(soap, tt__VideoEncoderConfigurationOptions*) serialize to a stream
class tt__VideoEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
/// Element "QualityRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
    tt__JpegOptions*                     JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    tt__Mpeg4Options*                    MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options.
    tt__H264Options*                     H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    tt__VideoEncoderOptionsExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
/// class tt__VideoEncoderOptionsExtension operations:
/// - soap_new_tt__VideoEncoderOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoEncoderOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension(soap, tt__VideoEncoderOptionsExtension*) serialize to a stream
class tt__VideoEncoderOptionsExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type "http://www.onvif.org/ver10/schema":JpegOptions2.
    tt__JpegOptions2*                    JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    tt__Mpeg4Options2*                   MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Options2.
    tt__H264Options2*                    H264                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    tt__VideoEncoderOptionsExtension2*   Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
/// class tt__VideoEncoderOptionsExtension2 operations:
/// - soap_new_tt__VideoEncoderOptionsExtension2(soap*) allocate
/// - soap_new_tt__VideoEncoderOptionsExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension2(soap, tt__VideoEncoderOptionsExtension2*) serialize to a stream
class tt__VideoEncoderOptionsExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// class tt__JpegOptions operations:
/// - soap_new_tt__JpegOptions(soap*) allocate
/// - soap_new_tt__JpegOptions(soap*, int num) allocate array
/// - soap_new_req_tt__JpegOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegOptions(soap*, tt__JpegOptions*) deserialize from a stream
/// - int soap_write_tt__JpegOptions(soap, tt__JpegOptions*) serialize to a stream
class tt__JpegOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// class tt__Mpeg4Options operations:
/// - soap_new_tt__Mpeg4Options(soap*) allocate
/// - soap_new_tt__Mpeg4Options(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Options(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Options(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options(soap, tt__Mpeg4Options*) serialize to a stream
class tt__Mpeg4Options
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// class tt__H264Options operations:
/// - soap_new_tt__H264Options(soap*) allocate
/// - soap_new_tt__H264Options(soap*, int num) allocate array
/// - soap_new_req_tt__H264Options(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Options(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Options(soap*, tt__H264Options*) deserialize from a stream
/// - int soap_write_tt__H264Options(soap, tt__H264Options*) serialize to a stream
class tt__H264Options
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
/// class tt__AudioSourceConfigurationOptions operations:
/// - soap_new_tt__AudioSourceConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfigurationOptions(soap, tt__AudioSourceConfigurationOptions*) serialize to a stream
class tt__AudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > InputTokensAvailable           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    tt__AudioSourceOptionsExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
/// class tt__AudioSourceOptionsExtension operations:
/// - soap_new_tt__AudioSourceOptionsExtension(soap*) allocate
/// - soap_new_tt__AudioSourceOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioSourceOptionsExtension(soap, tt__AudioSourceOptionsExtension*) serialize to a stream
class tt__AudioSourceOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
/// class tt__AudioEncoderConfigurationOptions operations:
/// - soap_new_tt__AudioEncoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOptions(soap, tt__AudioEncoderConfigurationOptions*) serialize to a stream
class tt__AudioEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioEncoderConfigurationOption* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfigurationOption*> Options                        0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
/// class tt__AudioEncoderConfigurationOption operations:
/// - soap_new_tt__AudioEncoderConfigurationOption(soap*) allocate
/// - soap_new_tt__AudioEncoderConfigurationOption(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOption(soap, tt__AudioEncoderConfigurationOption*) serialize to a stream
class tt__AudioEncoderConfigurationOption
{ public:
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "BitrateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateList" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateList                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
/// class tt__MetadataConfigurationExtension operations:
/// - soap_new_tt__MetadataConfigurationExtension(soap*) allocate
/// - soap_new_tt__MetadataConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationExtension(soap, tt__MetadataConfigurationExtension*) serialize to a stream
class tt__MetadataConfigurationExtension
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
/// class tt__PTZFilter operations:
/// - soap_new_tt__PTZFilter(soap*) allocate
/// - soap_new_tt__PTZFilter(soap*, int num) allocate array
/// - soap_new_req_tt__PTZFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZFilter(soap*, tt__PTZFilter*) deserialize from a stream
/// - int soap_write_tt__PTZFilter(soap, tt__PTZFilter*) serialize to a stream
class tt__PTZFilter
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
/// class tt__EventSubscription operations:
/// - soap_new_tt__EventSubscription(soap*) allocate
/// - soap_new_tt__EventSubscription(soap*, int num) allocate array
/// - soap_new_req_tt__EventSubscription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventSubscription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventSubscription(soap*, tt__EventSubscription*) deserialize from a stream
/// - int soap_write_tt__EventSubscription(soap, tt__EventSubscription*) serialize to a stream
class tt__EventSubscription
{ public:
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// class _tt__EventSubscription_SubscriptionPolicy operations:
/// - soap_new__tt__EventSubscription_SubscriptionPolicy(soap*) allocate
/// - soap_new__tt__EventSubscription_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tt__EventSubscription_SubscriptionPolicy(soap, _tt__EventSubscription_SubscriptionPolicy*) serialize to a stream
    class _tt__EventSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
/// class tt__MetadataConfigurationOptions operations:
/// - soap_new_tt__MetadataConfigurationOptions(soap*) allocate
/// - soap_new_tt__MetadataConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptions(soap, tt__MetadataConfigurationOptions*) serialize to a stream
class tt__MetadataConfigurationOptions
{ public:
/// Element "PTZStatusFilterOptions" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    tt__PTZStatusFilterOptions*          PTZStatusFilterOptions         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
/// class tt__PTZStatusFilterOptions operations:
/// - soap_new_tt__PTZStatusFilterOptions(soap*) allocate
/// - soap_new_tt__PTZStatusFilterOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatusFilterOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatusFilterOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptions(soap, tt__PTZStatusFilterOptions*) serialize to a stream
class tt__PTZStatusFilterOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltStatusSupported" of XSD type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomStatusSupported" of XSD type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSupported" of XSD type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSupported" of XSD type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
/// class tt__PTZStatusFilterOptionsExtension operations:
/// - soap_new_tt__PTZStatusFilterOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZStatusFilterOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptionsExtension(soap, tt__PTZStatusFilterOptionsExtension*) serialize to a stream
class tt__PTZStatusFilterOptionsExtension
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
/// class tt__VideoOutputExtension operations:
/// - soap_new_tt__VideoOutputExtension(soap*) allocate
/// - soap_new_tt__VideoOutputExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension*) deserialize from a stream
/// - int soap_write_tt__VideoOutputExtension(soap, tt__VideoOutputExtension*) serialize to a stream
class tt__VideoOutputExtension
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
/// class tt__VideoOutputConfigurationOptions operations:
/// - soap_new_tt__VideoOutputConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoOutputConfigurationOptions(soap, tt__VideoOutputConfigurationOptions*) serialize to a stream
class tt__VideoOutputConfigurationOptions
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
/// class tt__VideoDecoderConfigurationOptions operations:
/// - soap_new_tt__VideoDecoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoDecoderConfigurationOptions(soap, tt__VideoDecoderConfigurationOptions*) serialize to a stream
class tt__VideoDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "JpegDecOptions" of XSD type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    tt__JpegDecOptions*                  JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "H264DecOptions" of XSD type "http://www.onvif.org/ver10/schema":H264DecOptions.
    tt__H264DecOptions*                  H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
/// Element "Mpeg4DecOptions" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    tt__Mpeg4DecOptions*                 Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
/// class tt__H264DecOptions operations:
/// - soap_new_tt__H264DecOptions(soap*) allocate
/// - soap_new_tt__H264DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__H264DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264DecOptions(soap*, tt__H264DecOptions*) deserialize from a stream
/// - int soap_write_tt__H264DecOptions(soap, tt__H264DecOptions*) serialize to a stream
class tt__H264DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > SupportedH264Profiles          1;
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
/// class tt__JpegDecOptions operations:
/// - soap_new_tt__JpegDecOptions(soap*) allocate
/// - soap_new_tt__JpegDecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__JpegDecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegDecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegDecOptions(soap*, tt__JpegDecOptions*) deserialize from a stream
/// - int soap_write_tt__JpegDecOptions(soap, tt__JpegDecOptions*) serialize to a stream
class tt__JpegDecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
/// class tt__Mpeg4DecOptions operations:
/// - soap_new_tt__Mpeg4DecOptions(soap*) allocate
/// - soap_new_tt__Mpeg4DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions*) deserialize from a stream
/// - int soap_write_tt__Mpeg4DecOptions(soap, tt__Mpeg4DecOptions*) serialize to a stream
class tt__Mpeg4DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > SupportedMpeg4Profiles         1;
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedInputBitrate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
/// Element "SupportedFrameRate" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
/// class tt__VideoDecoderConfigurationOptionsExtension operations:
/// - soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoDecoderConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoDecoderConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoDecoderConfigurationOptionsExtension(soap, tt__VideoDecoderConfigurationOptionsExtension*) serialize to a stream
class tt__VideoDecoderConfigurationOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
/// class tt__AudioOutputConfigurationOptions operations:
/// - soap_new_tt__AudioOutputConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfigurationOptions(soap, tt__AudioOutputConfigurationOptions*) serialize to a stream
class tt__AudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > OutputTokensAvailable          1;
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > SendPrimacyOptions             0;
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevelRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        OutputLevelRange               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
/// class tt__AudioDecoderConfigurationOptions operations:
/// - soap_new_tt__AudioDecoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptions(soap, tt__AudioDecoderConfigurationOptions*) serialize to a stream
class tt__AudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "AACDecOptions" of XSD type "http://www.onvif.org/ver10/schema":AACDecOptions.
    tt__AACDecOptions*                   AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G711DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G711DecOptions.
    tt__G711DecOptions*                  G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
/// Element "G726DecOptions" of XSD type "http://www.onvif.org/ver10/schema":G726DecOptions.
    tt__G726DecOptions*                  G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
/// class tt__G711DecOptions operations:
/// - soap_new_tt__G711DecOptions(soap*) allocate
/// - soap_new_tt__G711DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__G711DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__G711DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__G711DecOptions(soap*, tt__G711DecOptions*) deserialize from a stream
/// - int soap_write_tt__G711DecOptions(soap, tt__G711DecOptions*) serialize to a stream
class tt__G711DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
/// class tt__AACDecOptions operations:
/// - soap_new_tt__AACDecOptions(soap*) allocate
/// - soap_new_tt__AACDecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AACDecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AACDecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AACDecOptions(soap*, tt__AACDecOptions*) deserialize from a stream
/// - int soap_write_tt__AACDecOptions(soap, tt__AACDecOptions*) serialize to a stream
class tt__AACDecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
/// class tt__G726DecOptions operations:
/// - soap_new_tt__G726DecOptions(soap*) allocate
/// - soap_new_tt__G726DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__G726DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__G726DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__G726DecOptions(soap*, tt__G726DecOptions*) deserialize from a stream
/// - int soap_write_tt__G726DecOptions(soap, tt__G726DecOptions*) serialize to a stream
class tt__G726DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
/// Element "SampleRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList*                         SampleRateRange                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
/// class tt__AudioDecoderConfigurationOptionsExtension operations:
/// - soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap, tt__AudioDecoderConfigurationOptionsExtension*) serialize to a stream
class tt__AudioDecoderConfigurationOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
/// class tt__MulticastConfiguration operations:
/// - soap_new_tt__MulticastConfiguration(soap*) allocate
/// - soap_new_tt__MulticastConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MulticastConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MulticastConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) deserialize from a stream
/// - int soap_write_tt__MulticastConfiguration(soap, tt__MulticastConfiguration*) serialize to a stream
class tt__MulticastConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPAddress.
    tt__IPAddress*                       Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
/// Element "Port" of XSD type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
/// class tt__StreamSetup operations:
/// - soap_new_tt__StreamSetup(soap*) allocate
/// - soap_new_tt__StreamSetup(soap*, int num) allocate array
/// - soap_new_req_tt__StreamSetup(soap*, ...) allocate, set required members
/// - soap_new_set_tt__StreamSetup(soap*, ...) allocate, set all public members
/// - int soap_read_tt__StreamSetup(soap*, tt__StreamSetup*) deserialize from a stream
/// - int soap_write_tt__StreamSetup(soap, tt__StreamSetup*) serialize to a stream
class tt__StreamSetup
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
/// Element "Stream" of XSD type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Transport                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
/// class tt__Transport operations:
/// - soap_new_tt__Transport(soap*) allocate
/// - soap_new_tt__Transport(soap*, int num) allocate array
/// - soap_new_req_tt__Transport(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Transport(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Transport(soap*, tt__Transport*) deserialize from a stream
/// - int soap_write_tt__Transport(soap, tt__Transport*) serialize to a stream
class tt__Transport
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
/// Element "Protocol" of XSD type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
/// Element "Tunnel" of XSD type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Tunnel                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
/// class tt__MediaUri operations:
/// - soap_new_tt__MediaUri(soap*) allocate
/// - soap_new_tt__MediaUri(soap*, int num) allocate array
/// - soap_new_req_tt__MediaUri(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaUri(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaUri(soap*, tt__MediaUri*) deserialize from a stream
/// - int soap_write_tt__MediaUri(soap, tt__MediaUri*) serialize to a stream
class tt__MediaUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterConnect" of XSD type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
/// Element "InvalidAfterReboot" of XSD type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// class tt__Scope operations:
/// - soap_new_tt__Scope(soap*) allocate
/// - soap_new_tt__Scope(soap*, int num) allocate array
/// - soap_new_req_tt__Scope(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Scope(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Scope(soap*, tt__Scope*) deserialize from a stream
/// - int soap_write_tt__Scope(soap, tt__Scope*) serialize to a stream
class tt__Scope
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeDef" of XSD type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
/// Element "ScopeItem" of XSD type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// class tt__NetworkInterfaceExtension operations:
/// - soap_new_tt__NetworkInterfaceExtension(soap*) allocate
/// - soap_new_tt__NetworkInterfaceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension(soap, tt__NetworkInterfaceExtension*) serialize to a stream
class tt__NetworkInterfaceExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// class tt__Dot3Configuration operations:
/// - soap_new_tt__Dot3Configuration(soap*) allocate
/// - soap_new_tt__Dot3Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot3Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot3Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot3Configuration(soap, tt__Dot3Configuration*) serialize to a stream
class tt__Dot3Configuration
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// class tt__NetworkInterfaceExtension2 operations:
/// - soap_new_tt__NetworkInterfaceExtension2(soap*) allocate
/// - soap_new_tt__NetworkInterfaceExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension2(soap, tt__NetworkInterfaceExtension2*) serialize to a stream
class tt__NetworkInterfaceExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// class tt__NetworkInterfaceLink operations:
/// - soap_new_tt__NetworkInterfaceLink(soap*) allocate
/// - soap_new_tt__NetworkInterfaceLink(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceLink(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceLink(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceLink(soap, tt__NetworkInterfaceLink*) serialize to a stream
class tt__NetworkInterfaceLink
{ public:
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
/// Element "AdminSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
/// Element "OperSettings" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceType" of XSD type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// class tt__NetworkInterfaceConnectionSetting operations:
/// - soap_new_tt__NetworkInterfaceConnectionSetting(soap*) allocate
/// - soap_new_tt__NetworkInterfaceConnectionSetting(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(soap, tt__NetworkInterfaceConnectionSetting*) serialize to a stream
class tt__NetworkInterfaceConnectionSetting
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
/// Element "AutoNegotiation" of XSD type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
/// Element "Duplex" of XSD type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// class tt__NetworkInterfaceInfo operations:
/// - soap_new_tt__NetworkInterfaceInfo(soap*) allocate
/// - soap_new_tt__NetworkInterfaceInfo(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceInfo(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceInfo(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceInfo(soap, tt__NetworkInterfaceInfo*) serialize to a stream
class tt__NetworkInterfaceInfo
{ public:
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
/// Element "HwAddress" of XSD type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// class tt__IPv6NetworkInterface operations:
/// - soap_new_tt__IPv6NetworkInterface(soap*) allocate
/// - soap_new_tt__IPv6NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterface(soap, tt__IPv6NetworkInterface*) serialize to a stream
class tt__IPv6NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// class tt__IPv4NetworkInterface operations:
/// - soap_new_tt__IPv4NetworkInterface(soap*) allocate
/// - soap_new_tt__IPv4NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterface(soap, tt__IPv4NetworkInterface*) serialize to a stream
class tt__IPv4NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Config" of XSD type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// class tt__IPv4Configuration operations:
/// - soap_new_tt__IPv4Configuration(soap*) allocate
/// - soap_new_tt__IPv4Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv4Configuration(soap, tt__IPv4Configuration*) serialize to a stream
class tt__IPv4Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
/// Element "LinkLocal" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// class tt__IPv6Configuration operations:
/// - soap_new_tt__IPv6Configuration(soap*) allocate
/// - soap_new_tt__IPv6Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv6Configuration(soap, tt__IPv6Configuration*) serialize to a stream
class tt__IPv6Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> LinkLocal                      0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromDHCP                       0;
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromRA                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// class tt__IPv6ConfigurationExtension operations:
/// - soap_new_tt__IPv6ConfigurationExtension(soap*) allocate
/// - soap_new_tt__IPv6ConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__IPv6ConfigurationExtension(soap, tt__IPv6ConfigurationExtension*) serialize to a stream
class tt__IPv6ConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// class tt__NetworkProtocol operations:
/// - soap_new_tt__NetworkProtocol(soap*) allocate
/// - soap_new_tt__NetworkProtocol(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocol(soap, tt__NetworkProtocol*) serialize to a stream
class tt__NetworkProtocol
{ public:
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
/// Vector of int of length 1..unbounded.
    std::vector<int                    > Port                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// class tt__NetworkProtocolExtension operations:
/// - soap_new_tt__NetworkProtocolExtension(soap*) allocate
/// - soap_new_tt__NetworkProtocolExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkProtocolExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkProtocolExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocolExtension(soap, tt__NetworkProtocolExtension*) serialize to a stream
class tt__NetworkProtocolExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// class tt__NetworkHost operations:
/// - soap_new_tt__NetworkHost(soap*) allocate
/// - soap_new_tt__NetworkHost(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkHost(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkHost(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkHost(soap*, tt__NetworkHost*) deserialize from a stream
/// - int soap_write_tt__NetworkHost(soap, tt__NetworkHost*) serialize to a stream
class tt__NetworkHost
{ public:
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "DNSname" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         DNSname                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// class tt__NetworkHostExtension operations:
/// - soap_new_tt__NetworkHostExtension(soap*) allocate
/// - soap_new_tt__NetworkHostExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkHostExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkHostExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkHostExtension(soap, tt__NetworkHostExtension*) serialize to a stream
class tt__NetworkHostExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// class tt__IPAddress operations:
/// - soap_new_tt__IPAddress(soap*) allocate
/// - soap_new_tt__IPAddress(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddress(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddress(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddress(soap*, tt__IPAddress*) deserialize from a stream
/// - int soap_write_tt__IPAddress(soap, tt__IPAddress*) serialize to a stream
class tt__IPAddress
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "IPv6Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// class tt__PrefixedIPv4Address operations:
/// - soap_new_tt__PrefixedIPv4Address(soap*) allocate
/// - soap_new_tt__PrefixedIPv4Address(soap*, int num) allocate array
/// - soap_new_req_tt__PrefixedIPv4Address(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PrefixedIPv4Address(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv4Address(soap, tt__PrefixedIPv4Address*) serialize to a stream
class tt__PrefixedIPv4Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// class tt__PrefixedIPv6Address operations:
/// - soap_new_tt__PrefixedIPv6Address(soap*) allocate
/// - soap_new_tt__PrefixedIPv6Address(soap*, int num) allocate array
/// - soap_new_req_tt__PrefixedIPv6Address(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PrefixedIPv6Address(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv6Address(soap, tt__PrefixedIPv6Address*) serialize to a stream
class tt__PrefixedIPv6Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
/// Element "PrefixLength" of XSD type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// class tt__HostnameInformation operations:
/// - soap_new_tt__HostnameInformation(soap*) allocate
/// - soap_new_tt__HostnameInformation(soap*, int num) allocate array
/// - soap_new_req_tt__HostnameInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__HostnameInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__HostnameInformation(soap*, tt__HostnameInformation*) deserialize from a stream
/// - int soap_write_tt__HostnameInformation(soap, tt__HostnameInformation*) serialize to a stream
class tt__HostnameInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// class tt__HostnameInformationExtension operations:
/// - soap_new_tt__HostnameInformationExtension(soap*) allocate
/// - soap_new_tt__HostnameInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__HostnameInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__HostnameInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) deserialize from a stream
/// - int soap_write_tt__HostnameInformationExtension(soap, tt__HostnameInformationExtension*) serialize to a stream
class tt__HostnameInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// class tt__DNSInformation operations:
/// - soap_new_tt__DNSInformation(soap*) allocate
/// - soap_new_tt__DNSInformation(soap*, int num) allocate array
/// - soap_new_req_tt__DNSInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DNSInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DNSInformation(soap*, tt__DNSInformation*) deserialize from a stream
/// - int soap_write_tt__DNSInformation(soap, tt__DNSInformation*) serialize to a stream
class tt__DNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// class tt__DNSInformationExtension operations:
/// - soap_new_tt__DNSInformationExtension(soap*) allocate
/// - soap_new_tt__DNSInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DNSInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DNSInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DNSInformationExtension(soap, tt__DNSInformationExtension*) serialize to a stream
class tt__DNSInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// class tt__NTPInformation operations:
/// - soap_new_tt__NTPInformation(soap*) allocate
/// - soap_new_tt__NTPInformation(soap*, int num) allocate array
/// - soap_new_req_tt__NTPInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NTPInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NTPInformation(soap*, tt__NTPInformation*) deserialize from a stream
/// - int soap_write_tt__NTPInformation(soap, tt__NTPInformation*) serialize to a stream
class tt__NTPInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Element "FromDHCP" of XSD type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPFromDHCP                    0;
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// class tt__NTPInformationExtension operations:
/// - soap_new_tt__NTPInformationExtension(soap*) allocate
/// - soap_new_tt__NTPInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NTPInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NTPInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) deserialize from a stream
/// - int soap_write_tt__NTPInformationExtension(soap, tt__NTPInformationExtension*) serialize to a stream
class tt__NTPInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// class tt__DynamicDNSInformation operations:
/// - soap_new_tt__DynamicDNSInformation(soap*) allocate
/// - soap_new_tt__DynamicDNSInformation(soap*, int num) allocate array
/// - soap_new_req_tt__DynamicDNSInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DynamicDNSInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformation(soap, tt__DynamicDNSInformation*) serialize to a stream
class tt__DynamicDNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
/// Element "TTL" of XSD type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// class tt__DynamicDNSInformationExtension operations:
/// - soap_new_tt__DynamicDNSInformationExtension(soap*) allocate
/// - soap_new_tt__DynamicDNSInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformationExtension(soap, tt__DynamicDNSInformationExtension*) serialize to a stream
class tt__DynamicDNSInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// class tt__NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(soap, tt__NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
/// Element "MTU" of XSD type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// class tt__NetworkInterfaceSetConfigurationExtension operations:
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a stream
class tt__NetworkInterfaceSetConfigurationExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// class tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__IPv6NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
/// Element "AcceptRouterAdvert" of XSD type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// class tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__IPv4NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
/// Element "DHCP" of XSD type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// class tt__NetworkGateway operations:
/// - soap_new_tt__NetworkGateway(soap*) allocate
/// - soap_new_tt__NetworkGateway(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkGateway(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkGateway(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkGateway(soap*, tt__NetworkGateway*) deserialize from a stream
/// - int soap_write_tt__NetworkGateway(soap, tt__NetworkGateway*) serialize to a stream
class tt__NetworkGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// class tt__NetworkZeroConfiguration operations:
/// - soap_new_tt__NetworkZeroConfiguration(soap*) allocate
/// - soap_new_tt__NetworkZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfiguration(soap, tt__NetworkZeroConfiguration*) serialize to a stream
class tt__NetworkZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
/// Element "InterfaceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > Addresses                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// class tt__NetworkZeroConfigurationExtension operations:
/// - soap_new_tt__NetworkZeroConfigurationExtension(soap*) allocate
/// - soap_new_tt__NetworkZeroConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension(soap, tt__NetworkZeroConfigurationExtension*) serialize to a stream
class tt__NetworkZeroConfigurationExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__NetworkZeroConfiguration* of length 0..unbounded.
    std::vector<tt__NetworkZeroConfiguration*> Additional                     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// class tt__NetworkZeroConfigurationExtension2 operations:
/// - soap_new_tt__NetworkZeroConfigurationExtension2(soap*) allocate
/// - soap_new_tt__NetworkZeroConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(soap, tt__NetworkZeroConfigurationExtension2*) serialize to a stream
class tt__NetworkZeroConfigurationExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// class tt__IPAddressFilter operations:
/// - soap_new_tt__IPAddressFilter(soap*) allocate
/// - soap_new_tt__IPAddressFilter(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilter(soap, tt__IPAddressFilter*) serialize to a stream
class tt__IPAddressFilter
{ public:
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> IPv4Address                    0;
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> IPv6Address                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// class tt__IPAddressFilterExtension operations:
/// - soap_new_tt__IPAddressFilterExtension(soap*) allocate
/// - soap_new_tt__IPAddressFilterExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddressFilterExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddressFilterExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilterExtension(soap, tt__IPAddressFilterExtension*) serialize to a stream
class tt__IPAddressFilterExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// class tt__Dot11Configuration operations:
/// - soap_new_tt__Dot11Configuration(soap*) allocate
/// - soap_new_tt__Dot11Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot11Configuration(soap, tt__Dot11Configuration*) serialize to a stream
class tt__Dot11Configuration
{ public:
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// class tt__Dot11SecurityConfiguration operations:
/// - soap_new_tt__Dot11SecurityConfiguration(soap*) allocate
/// - soap_new_tt__Dot11SecurityConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfiguration(soap, tt__Dot11SecurityConfiguration*) serialize to a stream
class tt__Dot11SecurityConfiguration
{ public:
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element "Dot1X" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Dot1X                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// class tt__Dot11SecurityConfigurationExtension operations:
/// - soap_new_tt__Dot11SecurityConfigurationExtension(soap*) allocate
/// - soap_new_tt__Dot11SecurityConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(soap, tt__Dot11SecurityConfigurationExtension*) serialize to a stream
class tt__Dot11SecurityConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// class tt__Dot11PSKSet operations:
/// - soap_new_tt__Dot11PSKSet(soap*) allocate
/// - soap_new_tt__Dot11PSKSet(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11PSKSet(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11PSKSet(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSet(soap, tt__Dot11PSKSet*) serialize to a stream
class tt__Dot11PSKSet
{ public:
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
/// Element "Passphrase" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase*              Passphrase                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// class tt__Dot11PSKSetExtension operations:
/// - soap_new_tt__Dot11PSKSetExtension(soap*) allocate
/// - soap_new_tt__Dot11PSKSetExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11PSKSetExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11PSKSetExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSetExtension(soap, tt__Dot11PSKSetExtension*) serialize to a stream
class tt__Dot11PSKSetExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// class tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a stream
class tt__NetworkInterfaceSetConfigurationExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// class tt__Dot11Capabilities operations:
/// - soap_new_tt__Dot11Capabilities(soap*) allocate
/// - soap_new_tt__Dot11Capabilities(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) deserialize from a stream
/// - int soap_write_tt__Dot11Capabilities(soap, tt__Dot11Capabilities*) serialize to a stream
class tt__Dot11Capabilities
{ public:
/// Element "TKIP" of XSD type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of XSD type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of XSD type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of XSD type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element "WEP" of XSD type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// class tt__Dot11Status operations:
/// - soap_new_tt__Dot11Status(soap*) allocate
/// - soap_new_tt__Dot11Status(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Status(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Status(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Status(soap*, tt__Dot11Status*) deserialize from a stream
/// - int soap_write_tt__Dot11Status(soap, tt__Dot11Status*) serialize to a stream
class tt__Dot11Status
{ public:
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element "PairCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of XSD type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// class tt__Dot11AvailableNetworks operations:
/// - soap_new_tt__Dot11AvailableNetworks(soap*) allocate
/// - soap_new_tt__Dot11AvailableNetworks(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11AvailableNetworks(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11AvailableNetworks(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworks(soap, tt__Dot11AvailableNetworks*) serialize to a stream
class tt__Dot11AvailableNetworks
{ public:
/// Element "SSID" of XSD type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of XSD type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__Dot11AuthAndMangementSuite of length 0..unbounded.
    std::vector<enum tt__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > PairCipher                     0;
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > GroupCipher                    0;
/// Element "SignalStrength" of XSD type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// class tt__Dot11AvailableNetworksExtension operations:
/// - soap_new_tt__Dot11AvailableNetworksExtension(soap*) allocate
/// - soap_new_tt__Dot11AvailableNetworksExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworksExtension(soap, tt__Dot11AvailableNetworksExtension*) serialize to a stream
class tt__Dot11AvailableNetworksExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// class tt__Capabilities operations:
/// - soap_new_tt__Capabilities(soap*) allocate
/// - soap_new_tt__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tt__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Capabilities(soap*, tt__Capabilities*) deserialize from a stream
/// - int soap_write_tt__Capabilities(soap, tt__Capabilities*) serialize to a stream
class tt__Capabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Device" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
/// Element "Media" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// class tt__CapabilitiesExtension operations:
/// - soap_new_tt__CapabilitiesExtension(soap*) allocate
/// - soap_new_tt__CapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension(soap, tt__CapabilitiesExtension*) serialize to a stream
class tt__CapabilitiesExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "DeviceIO" of XSD type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element "Display" of XSD type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element "Recording" of XSD type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element "Search" of XSD type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element "Replay" of XSD type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element "Receiver" of XSD type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of XSD type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// class tt__CapabilitiesExtension2 operations:
/// - soap_new_tt__CapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__CapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__CapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension2(soap, tt__CapabilitiesExtension2*) serialize to a stream
class tt__CapabilitiesExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// class tt__AnalyticsCapabilities operations:
/// - soap_new_tt__AnalyticsCapabilities(soap*) allocate
/// - soap_new_tt__AnalyticsCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsCapabilities(soap, tt__AnalyticsCapabilities*) serialize to a stream
class tt__AnalyticsCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsModuleSupport" of XSD type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// class tt__DeviceCapabilities operations:
/// - soap_new_tt__DeviceCapabilities(soap*) allocate
/// - soap_new_tt__DeviceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilities(soap, tt__DeviceCapabilities*) serialize to a stream
class tt__DeviceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Network" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "System" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "IO" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "Security" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// class tt__DeviceCapabilitiesExtension operations:
/// - soap_new_tt__DeviceCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__DeviceCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilitiesExtension(soap, tt__DeviceCapabilitiesExtension*) serialize to a stream
class tt__DeviceCapabilitiesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// class tt__EventCapabilities operations:
/// - soap_new_tt__EventCapabilities(soap*) allocate
/// - soap_new_tt__EventCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__EventCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventCapabilities(soap*, tt__EventCapabilities*) deserialize from a stream
/// - int soap_write_tt__EventCapabilities(soap, tt__EventCapabilities*) serialize to a stream
class tt__EventCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSSubscriptionPolicySupport" of XSD type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPullPointSupport" of XSD type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// class tt__IOCapabilities operations:
/// - soap_new_tt__IOCapabilities(soap*) allocate
/// - soap_new_tt__IOCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilities(soap*, tt__IOCapabilities*) deserialize from a stream
/// - int soap_write_tt__IOCapabilities(soap, tt__IOCapabilities*) serialize to a stream
class tt__IOCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
/// Element "InputConnectors" of XSD type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
/// Element "RelayOutputs" of XSD type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// class tt__IOCapabilitiesExtension operations:
/// - soap_new_tt__IOCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__IOCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension(soap, tt__IOCapabilitiesExtension*) serialize to a stream
class tt__IOCapabilitiesExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Auxiliary" of XSD type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// class tt__IOCapabilitiesExtension2 operations:
/// - soap_new_tt__IOCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__IOCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension2(soap, tt__IOCapabilitiesExtension2*) serialize to a stream
class tt__IOCapabilitiesExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// class tt__MediaCapabilities operations:
/// - soap_new_tt__MediaCapabilities(soap*) allocate
/// - soap_new_tt__MediaCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__MediaCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilities(soap, tt__MediaCapabilities*) serialize to a stream
class tt__MediaCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// class tt__MediaCapabilitiesExtension operations:
/// - soap_new_tt__MediaCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__MediaCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilitiesExtension(soap, tt__MediaCapabilitiesExtension*) serialize to a stream
class tt__MediaCapabilitiesExtension
{ public:
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// class tt__RealTimeStreamingCapabilities operations:
/// - soap_new_tt__RealTimeStreamingCapabilities(soap*) allocate
/// - soap_new_tt__RealTimeStreamingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilities(soap, tt__RealTimeStreamingCapabilities*) serialize to a stream
class tt__RealTimeStreamingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTPMulticast" of XSD type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// class tt__RealTimeStreamingCapabilitiesExtension operations:
/// - soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a stream
class tt__RealTimeStreamingCapabilitiesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// class tt__ProfileCapabilities operations:
/// - soap_new_tt__ProfileCapabilities(soap*) allocate
/// - soap_new_tt__ProfileCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_tt__ProfileCapabilities(soap, tt__ProfileCapabilities*) serialize to a stream
class tt__ProfileCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfProfiles" of XSD type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// class tt__NetworkCapabilities operations:
/// - soap_new_tt__NetworkCapabilities(soap*) allocate
/// - soap_new_tt__NetworkCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilities(soap, tt__NetworkCapabilities*) serialize to a stream
class tt__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPFilter" of XSD type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
/// Element "ZeroConfiguration" of XSD type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "IPVersion6" of XSD type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DynDNS" of XSD type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// class tt__NetworkCapabilitiesExtension operations:
/// - soap_new_tt__NetworkCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__NetworkCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension(soap, tt__NetworkCapabilitiesExtension*) serialize to a stream
class tt__NetworkCapabilitiesExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Dot11Configuration" of XSD type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// class tt__NetworkCapabilitiesExtension2 operations:
/// - soap_new_tt__NetworkCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__NetworkCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension2(soap, tt__NetworkCapabilitiesExtension2*) serialize to a stream
class tt__NetworkCapabilitiesExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// class tt__SecurityCapabilities operations:
/// - soap_new_tt__SecurityCapabilities(soap*) allocate
/// - soap_new_tt__SecurityCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilities(soap, tt__SecurityCapabilities*) serialize to a stream
class tt__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.1" of XSD type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
/// Element "TLS1.2" of XSD type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
/// Element "OnboardKeyGeneration" of XSD type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AccessPolicyConfig" of XSD type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "X.509Token" of XSD type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SAMLToken" of XSD type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "KerberosToken" of XSD type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RELToken" of XSD type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// class tt__SecurityCapabilitiesExtension operations:
/// - soap_new_tt__SecurityCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__SecurityCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension(soap, tt__SecurityCapabilitiesExtension*) serialize to a stream
class tt__SecurityCapabilitiesExtension
{ public:
/// Element "TLS1.0" of XSD type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// class tt__SecurityCapabilitiesExtension2 operations:
/// - soap_new_tt__SecurityCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__SecurityCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension2(soap, tt__SecurityCapabilitiesExtension2*) serialize to a stream
class tt__SecurityCapabilitiesExtension2
{ public:
/// Element "Dot1X" of XSD type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Vector of int of length 0..unbounded.
    std::vector<int                    > SupportedEAPMethod             0;
/// Element "RemoteUserHandling" of XSD type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// class tt__SystemCapabilities operations:
/// - soap_new_tt__SystemCapabilities(soap*) allocate
/// - soap_new_tt__SystemCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilities(soap, tt__SystemCapabilities*) serialize to a stream
class tt__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryResolve" of XSD type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
/// Element "DiscoveryBye" of XSD type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery, see WS-Discovery, is supported.
/// </BLOCKQUOTE></PRE>
/// Element "RemoteDiscovery" of XSD type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemBackup" of XSD type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
/// Element "SystemLogging" of XSD type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
/// Element "FirmwareUpgrade" of XSD type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
/// Vector of tt__OnvifVersion* of length 1..unbounded.
    std::vector<tt__OnvifVersion*      > SupportedVersions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// class tt__SystemCapabilitiesExtension operations:
/// - soap_new_tt__SystemCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__SystemCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension(soap, tt__SystemCapabilitiesExtension*) serialize to a stream
class tt__SystemCapabilitiesExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "HttpFirmwareUpgrade" of XSD type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of XSD type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of XSD type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of XSD type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// class tt__SystemCapabilitiesExtension2 operations:
/// - soap_new_tt__SystemCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__SystemCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension2(soap, tt__SystemCapabilitiesExtension2*) serialize to a stream
class tt__SystemCapabilitiesExtension2
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// class tt__OnvifVersion operations:
/// - soap_new_tt__OnvifVersion(soap*) allocate
/// - soap_new_tt__OnvifVersion(soap*, int num) allocate array
/// - soap_new_req_tt__OnvifVersion(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OnvifVersion(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OnvifVersion(soap*, tt__OnvifVersion*) deserialize from a stream
/// - int soap_write_tt__OnvifVersion(soap, tt__OnvifVersion*) serialize to a stream
class tt__OnvifVersion
{ public:
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
/// Element "Major" of XSD type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).
/// </BLOCKQUOTE></PRE>
/// Element "Minor" of XSD type xs:int.
    int                                  Minor                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// class tt__ImagingCapabilities operations:
/// - soap_new_tt__ImagingCapabilities(soap*) allocate
/// - soap_new_tt__ImagingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) deserialize from a stream
/// - int soap_write_tt__ImagingCapabilities(soap, tt__ImagingCapabilities*) serialize to a stream
class tt__ImagingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// class tt__PTZCapabilities operations:
/// - soap_new_tt__PTZCapabilities(soap*) allocate
/// - soap_new_tt__PTZCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__PTZCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) deserialize from a stream
/// - int soap_write_tt__PTZCapabilities(soap, tt__PTZCapabilities*) serialize to a stream
class tt__PTZCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// class tt__DeviceIOCapabilities operations:
/// - soap_new_tt__DeviceIOCapabilities(soap*) allocate
/// - soap_new_tt__DeviceIOCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceIOCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceIOCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceIOCapabilities(soap, tt__DeviceIOCapabilities*) serialize to a stream
class tt__DeviceIOCapabilities
{ public:
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of XSD type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of XSD type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of XSD type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of XSD type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of XSD type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// class tt__DisplayCapabilities operations:
/// - soap_new_tt__DisplayCapabilities(soap*) allocate
/// - soap_new_tt__DisplayCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DisplayCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DisplayCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__DisplayCapabilities(soap, tt__DisplayCapabilities*) serialize to a stream
class tt__DisplayCapabilities
{ public:
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
/// Element "FixedLayout" of XSD type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// class tt__RecordingCapabilities operations:
/// - soap_new_tt__RecordingCapabilities(soap*) allocate
/// - soap_new_tt__RecordingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RecordingCapabilities(soap, tt__RecordingCapabilities*) serialize to a stream
class tt__RecordingCapabilities
{ public:
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of XSD type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of XSD type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of XSD type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of XSD type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of XSD type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// class tt__SearchCapabilities operations:
/// - soap_new_tt__SearchCapabilities(soap*) allocate
/// - soap_new_tt__SearchCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SearchCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) deserialize from a stream
/// - int soap_write_tt__SearchCapabilities(soap, tt__SearchCapabilities*) serialize to a stream
class tt__SearchCapabilities
{ public:
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of XSD type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// class tt__ReplayCapabilities operations:
/// - soap_new_tt__ReplayCapabilities(soap*) allocate
/// - soap_new_tt__ReplayCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ReplayCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReplayCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReplayCapabilities(soap, tt__ReplayCapabilities*) serialize to a stream
class tt__ReplayCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// class tt__ReceiverCapabilities operations:
/// - soap_new_tt__ReceiverCapabilities(soap*) allocate
/// - soap_new_tt__ReceiverCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReceiverCapabilities(soap, tt__ReceiverCapabilities*) serialize to a stream
class tt__ReceiverCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_Multicast" of XSD type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
/// Element "RTP_TCP" of XSD type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
/// Element "RTP_RTSP_TCP" of XSD type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedReceivers" of XSD type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRTSPURILength" of XSD type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// class tt__AnalyticsDeviceCapabilities operations:
/// - soap_new_tt__AnalyticsDeviceCapabilities(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceCapabilities(soap, tt__AnalyticsDeviceCapabilities*) serialize to a stream
class tt__AnalyticsDeviceCapabilities
{ public:
/// Element "XAddr" of XSD type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
/// Element "RuleSupport" of XSD type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// class tt__AnalyticsDeviceExtension operations:
/// - soap_new_tt__AnalyticsDeviceExtension(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceExtension(soap, tt__AnalyticsDeviceExtension*) serialize to a stream
class tt__AnalyticsDeviceExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// class tt__SystemLog operations:
/// - soap_new_tt__SystemLog(soap*) allocate
/// - soap_new_tt__SystemLog(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLog(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLog(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLog(soap*, tt__SystemLog*) deserialize from a stream
/// - int soap_write_tt__SystemLog(soap, tt__SystemLog*) serialize to a stream
class tt__SystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// class tt__SupportInformation operations:
/// - soap_new_tt__SupportInformation(soap*) allocate
/// - soap_new_tt__SupportInformation(soap*, int num) allocate array
/// - soap_new_req_tt__SupportInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportInformation(soap*, tt__SupportInformation*) deserialize from a stream
/// - int soap_write_tt__SupportInformation(soap, tt__SupportInformation*) serialize to a stream
class tt__SupportInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
/// Element "Binary" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
/// Element "String" of XSD type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// class tt__BinaryData operations:
/// - soap_new_tt__BinaryData(soap*) allocate
/// - soap_new_tt__BinaryData(soap*, int num) allocate array
/// - soap_new_req_tt__BinaryData(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BinaryData(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BinaryData(soap*, tt__BinaryData*) deserialize from a stream
/// - int soap_write_tt__BinaryData(soap, tt__BinaryData*) serialize to a stream
class tt__BinaryData
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @_xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// class tt__AttachmentData operations:
/// - soap_new_tt__AttachmentData(soap*) allocate
/// - soap_new_tt__AttachmentData(soap*, int num) allocate array
/// - soap_new_req_tt__AttachmentData(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AttachmentData(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AttachmentData(soap*, tt__AttachmentData*) deserialize from a stream
/// - int soap_write_tt__AttachmentData(soap, tt__AttachmentData*) serialize to a stream
class tt__AttachmentData
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @_xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// class tt__BackupFile operations:
/// - soap_new_tt__BackupFile(soap*) allocate
/// - soap_new_tt__BackupFile(soap*, int num) allocate array
/// - soap_new_req_tt__BackupFile(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BackupFile(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BackupFile(soap*, tt__BackupFile*) deserialize from a stream
/// - int soap_write_tt__BackupFile(soap, tt__BackupFile*) serialize to a stream
class tt__BackupFile
{ public:
/// Element "Name" of XSD type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// class tt__SystemLogUriList operations:
/// - soap_new_tt__SystemLogUriList(soap*) allocate
/// - soap_new_tt__SystemLogUriList(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLogUriList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLogUriList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) deserialize from a stream
/// - int soap_write_tt__SystemLogUriList(soap, tt__SystemLogUriList*) serialize to a stream
class tt__SystemLogUriList
{ public:
/// Vector of tt__SystemLogUri* of length 0..unbounded.
    std::vector<tt__SystemLogUri*      > SystemLog                      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// class tt__SystemLogUri operations:
/// - soap_new_tt__SystemLogUri(soap*) allocate
/// - soap_new_tt__SystemLogUri(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLogUri(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLogUri(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLogUri(soap*, tt__SystemLogUri*) deserialize from a stream
/// - int soap_write_tt__SystemLogUri(soap, tt__SystemLogUri*) serialize to a stream
class tt__SystemLogUri
{ public:
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of XSD type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
/// class tt__SystemDateTime operations:
/// - soap_new_tt__SystemDateTime(soap*) allocate
/// - soap_new_tt__SystemDateTime(soap*, int num) allocate array
/// - soap_new_req_tt__SystemDateTime(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemDateTime(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemDateTime(soap*, tt__SystemDateTime*) deserialize from a stream
/// - int soap_write_tt__SystemDateTime(soap, tt__SystemDateTime*) serialize to a stream
class tt__SystemDateTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
/// Element "DateTimeType" of XSD type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
/// Element "DaylightSavings" of XSD type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
/// Element "TimeZone" of XSD type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
/// Element "UTCDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
/// Element "LocalDateTime" of XSD type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// class tt__SystemDateTimeExtension operations:
/// - soap_new_tt__SystemDateTimeExtension(soap*) allocate
/// - soap_new_tt__SystemDateTimeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SystemDateTimeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemDateTimeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) deserialize from a stream
/// - int soap_write_tt__SystemDateTimeExtension(soap, tt__SystemDateTimeExtension*) serialize to a stream
class tt__SystemDateTimeExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// class tt__DateTime operations:
/// - soap_new_tt__DateTime(soap*) allocate
/// - soap_new_tt__DateTime(soap*, int num) allocate array
/// - soap_new_req_tt__DateTime(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DateTime(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DateTime(soap*, tt__DateTime*) deserialize from a stream
/// - int soap_write_tt__DateTime(soap, tt__DateTime*) serialize to a stream
class tt__DateTime
{ public:
/// Element "Time" of XSD type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element "Date" of XSD type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// class tt__Date operations:
/// - soap_new_tt__Date(soap*) allocate
/// - soap_new_tt__Date(soap*, int num) allocate array
/// - soap_new_req_tt__Date(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Date(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Date(soap*, tt__Date*) deserialize from a stream
/// - int soap_write_tt__Date(soap, tt__Date*) serialize to a stream
class tt__Date
{ public:
/// Element "Year" of XSD type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
/// Element "Month" of XSD type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
/// Element "Day" of XSD type xs:int.
    int                                  Day                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// class tt__Time operations:
/// - soap_new_tt__Time(soap*) allocate
/// - soap_new_tt__Time(soap*, int num) allocate array
/// - soap_new_req_tt__Time(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Time(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Time(soap*, tt__Time*) deserialize from a stream
/// - int soap_write_tt__Time(soap, tt__Time*) serialize to a stream
class tt__Time
{ public:
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
/// Element "Hour" of XSD type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
/// Element "Minute" of XSD type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
/// Element "Second" of XSD type xs:int.
    int                                  Second                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
/// class tt__TimeZone operations:
/// - soap_new_tt__TimeZone(soap*) allocate
/// - soap_new_tt__TimeZone(soap*, int num) allocate array
/// - soap_new_req_tt__TimeZone(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TimeZone(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TimeZone(soap*, tt__TimeZone*) deserialize from a stream
/// - int soap_write_tt__TimeZone(soap, tt__TimeZone*) serialize to a stream
class tt__TimeZone
{ public:
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
/// Element "TZ" of XSD type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// class tt__RemoteUser operations:
/// - soap_new_tt__RemoteUser(soap*) allocate
/// - soap_new_tt__RemoteUser(soap*, int num) allocate array
/// - soap_new_req_tt__RemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RemoteUser(soap*, tt__RemoteUser*) deserialize from a stream
/// - int soap_write_tt__RemoteUser(soap, tt__RemoteUser*) serialize to a stream
class tt__RemoteUser
{ public:
/// Element "Username" of XSD type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element "Password" of XSD type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of XSD type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// class tt__User operations:
/// - soap_new_tt__User(soap*) allocate
/// - soap_new_tt__User(soap*, int num) allocate array
/// - soap_new_req_tt__User(soap*, ...) allocate, set required members
/// - soap_new_set_tt__User(soap*, ...) allocate, set all public members
/// - int soap_read_tt__User(soap*, tt__User*) deserialize from a stream
/// - int soap_write_tt__User(soap, tt__User*) serialize to a stream
class tt__User
{ public:
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
/// Element "Username" of XSD type xs:string.
    std::string                          Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
/// Element "UserLevel" of XSD type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// class tt__UserExtension operations:
/// - soap_new_tt__UserExtension(soap*) allocate
/// - soap_new_tt__UserExtension(soap*, int num) allocate array
/// - soap_new_req_tt__UserExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__UserExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__UserExtension(soap*, tt__UserExtension*) deserialize from a stream
/// - int soap_write_tt__UserExtension(soap, tt__UserExtension*) serialize to a stream
class tt__UserExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
/// class tt__CertificateGenerationParameters operations:
/// - soap_new_tt__CertificateGenerationParameters(soap*) allocate
/// - soap_new_tt__CertificateGenerationParameters(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateGenerationParameters(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateGenerationParameters(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters*) deserialize from a stream
/// - int soap_write_tt__CertificateGenerationParameters(soap, tt__CertificateGenerationParameters*) serialize to a stream
class tt__CertificateGenerationParameters
{ public:
/// Element "CertificateID" of XSD type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element "Subject" of XSD type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of XSD type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of XSD type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
/// class tt__CertificateGenerationParametersExtension operations:
/// - soap_new_tt__CertificateGenerationParametersExtension(soap*) allocate
/// - soap_new_tt__CertificateGenerationParametersExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateGenerationParametersExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateGenerationParametersExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateGenerationParametersExtension(soap, tt__CertificateGenerationParametersExtension*) serialize to a stream
class tt__CertificateGenerationParametersExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// class tt__Certificate operations:
/// - soap_new_tt__Certificate(soap*) allocate
/// - soap_new_tt__Certificate(soap*, int num) allocate array
/// - soap_new_req_tt__Certificate(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Certificate(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Certificate(soap*, tt__Certificate*) deserialize from a stream
/// - int soap_write_tt__Certificate(soap, tt__Certificate*) serialize to a stream
class tt__Certificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// class tt__CertificateStatus operations:
/// - soap_new_tt__CertificateStatus(soap*) allocate
/// - soap_new_tt__CertificateStatus(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateStatus(soap*, tt__CertificateStatus*) deserialize from a stream
/// - int soap_write_tt__CertificateStatus(soap, tt__CertificateStatus*) serialize to a stream
class tt__CertificateStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// class tt__CertificateWithPrivateKey operations:
/// - soap_new_tt__CertificateWithPrivateKey(soap*) allocate
/// - soap_new_tt__CertificateWithPrivateKey(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write_tt__CertificateWithPrivateKey(soap, tt__CertificateWithPrivateKey*) serialize to a stream
class tt__CertificateWithPrivateKey
{ public:
/// Element "CertificateID" of XSD type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element "Certificate" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element "PrivateKey" of XSD type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// class tt__CertificateInformation operations:
/// - soap_new_tt__CertificateInformation(soap*) allocate
/// - soap_new_tt__CertificateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateInformation(soap*, tt__CertificateInformation*) deserialize from a stream
/// - int soap_write_tt__CertificateInformation(soap, tt__CertificateInformation*) serialize to a stream
class tt__CertificateInformation
{ public:
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of XSD type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of XSD type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of XSD type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of XSD type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of XSD type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element "SerialNum" of XSD type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
/// Element "SignatureAlgorithm" of XSD type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of XSD type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// class tt__CertificateInformationExtension operations:
/// - soap_new_tt__CertificateInformationExtension(soap*) allocate
/// - soap_new_tt__CertificateInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateInformationExtension(soap, tt__CertificateInformationExtension*) serialize to a stream
class tt__CertificateInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// class tt__Dot1XConfiguration operations:
/// - soap_new_tt__Dot1XConfiguration(soap*) allocate
/// - soap_new_tt__Dot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfiguration(soap, tt__Dot1XConfiguration*) serialize to a stream
class tt__Dot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of XSD type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element "AnonymousID" of XSD type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
/// Element "EAPMethod" of XSD type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > CACertificateID                0;
/// Element "EAPMethodConfiguration" of XSD type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// class tt__Dot1XConfigurationExtension operations:
/// - soap_new_tt__Dot1XConfigurationExtension(soap*) allocate
/// - soap_new_tt__Dot1XConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfigurationExtension(soap, tt__Dot1XConfigurationExtension*) serialize to a stream
class tt__Dot1XConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// class tt__EAPMethodConfiguration operations:
/// - soap_new_tt__EAPMethodConfiguration(soap*) allocate
/// - soap_new_tt__EAPMethodConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__EAPMethodConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EAPMethodConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) deserialize from a stream
/// - int soap_write_tt__EAPMethodConfiguration(soap, tt__EAPMethodConfiguration*) serialize to a stream
class tt__EAPMethodConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
/// Element "TLSConfiguration" of XSD type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
/// Element "Password" of XSD type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// class tt__EapMethodExtension operations:
/// - soap_new_tt__EapMethodExtension(soap*) allocate
/// - soap_new_tt__EapMethodExtension(soap*, int num) allocate array
/// - soap_new_req_tt__EapMethodExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EapMethodExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) deserialize from a stream
/// - int soap_write_tt__EapMethodExtension(soap, tt__EapMethodExtension*) serialize to a stream
class tt__EapMethodExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// class tt__TLSConfiguration operations:
/// - soap_new_tt__TLSConfiguration(soap*) allocate
/// - soap_new_tt__TLSConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__TLSConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TLSConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) deserialize from a stream
/// - int soap_write_tt__TLSConfiguration(soap, tt__TLSConfiguration*) serialize to a stream
class tt__TLSConfiguration
{ public:
/// Element "CertificateID" of XSD type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
/// class tt__GenericEapPwdConfigurationExtension operations:
/// - soap_new_tt__GenericEapPwdConfigurationExtension(soap*) allocate
/// - soap_new_tt__GenericEapPwdConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__GenericEapPwdConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GenericEapPwdConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__GenericEapPwdConfigurationExtension(soap, tt__GenericEapPwdConfigurationExtension*) serialize to a stream
class tt__GenericEapPwdConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// class tt__RelayOutputSettings operations:
/// - soap_new_tt__RelayOutputSettings(soap*) allocate
/// - soap_new_tt__RelayOutputSettings(soap*, int num) allocate array
/// - soap_new_req_tt__RelayOutputSettings(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelayOutputSettings(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) deserialize from a stream
/// - int soap_write_tt__RelayOutputSettings(soap, tt__RelayOutputSettings*) serialize to a stream
class tt__RelayOutputSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
/// Element "DelayTime" of XSD type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "IdleState" of XSD type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
/// class tt__PTZNodeExtension operations:
/// - soap_new_tt__PTZNodeExtension(soap*) allocate
/// - soap_new_tt__PTZNodeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNodeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNodeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension(soap, tt__PTZNodeExtension*) serialize to a stream
class tt__PTZNodeExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPresetTour" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
/// class tt__PTZNodeExtension2 operations:
/// - soap_new_tt__PTZNodeExtension2(soap*) allocate
/// - soap_new_tt__PTZNodeExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNodeExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNodeExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension2(soap, tt__PTZNodeExtension2*) serialize to a stream
class tt__PTZNodeExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
/// class tt__PTZPresetTourSupported operations:
/// - soap_new_tt__PTZPresetTourSupported(soap*) allocate
/// - soap_new_tt__PTZPresetTourSupported(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSupported(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSupported(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupported(soap, tt__PTZPresetTourSupported*) serialize to a stream
class tt__PTZPresetTourSupported
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresetTours" of XSD type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__PTZPresetTourOperation of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourOperation> PTZPresetTourOperation         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
/// class tt__PTZPresetTourSupportedExtension operations:
/// - soap_new_tt__PTZPresetTourSupportedExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourSupportedExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupportedExtension(soap, tt__PTZPresetTourSupportedExtension*) serialize to a stream
class tt__PTZPresetTourSupportedExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
/// class tt__PTZConfigurationExtension operations:
/// - soap_new_tt__PTZConfigurationExtension(soap*) allocate
/// - soap_new_tt__PTZConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension(soap, tt__PTZConfigurationExtension*) serialize to a stream
class tt__PTZConfigurationExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
/// class tt__PTZConfigurationExtension2 operations:
/// - soap_new_tt__PTZConfigurationExtension2(soap*) allocate
/// - soap_new_tt__PTZConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension2(soap, tt__PTZConfigurationExtension2*) serialize to a stream
class tt__PTZConfigurationExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
/// class tt__PTControlDirection operations:
/// - soap_new_tt__PTControlDirection(soap*) allocate
/// - soap_new_tt__PTControlDirection(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirection(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirection(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirection(soap*, tt__PTControlDirection*) deserialize from a stream
/// - int soap_write_tt__PTControlDirection(soap, tt__PTControlDirection*) serialize to a stream
class tt__PTControlDirection
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
/// class tt__PTControlDirectionExtension operations:
/// - soap_new_tt__PTControlDirectionExtension(soap*) allocate
/// - soap_new_tt__PTControlDirectionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionExtension(soap, tt__PTControlDirectionExtension*) serialize to a stream
class tt__PTControlDirectionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
/// class tt__EFlip operations:
/// - soap_new_tt__EFlip(soap*) allocate
/// - soap_new_tt__EFlip(soap*, int num) allocate array
/// - soap_new_req_tt__EFlip(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlip(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlip(soap*, tt__EFlip*) deserialize from a stream
/// - int soap_write_tt__EFlip(soap, tt__EFlip*) serialize to a stream
class tt__EFlip
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
/// class tt__Reverse operations:
/// - soap_new_tt__Reverse(soap*) allocate
/// - soap_new_tt__Reverse(soap*, int num) allocate array
/// - soap_new_req_tt__Reverse(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Reverse(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Reverse(soap*, tt__Reverse*) deserialize from a stream
/// - int soap_write_tt__Reverse(soap, tt__Reverse*) serialize to a stream
class tt__Reverse
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
/// class tt__PTZConfigurationOptions operations:
/// - soap_new_tt__PTZConfigurationOptions(soap*) allocate
/// - soap_new_tt__PTZConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions(soap, tt__PTZConfigurationOptions*) serialize to a stream
class tt__PTZConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
/// Element "Spaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "PTZTimeout" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
/// Element "PTControlDirection" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
/// class tt__PTZConfigurationOptions2 operations:
/// - soap_new_tt__PTZConfigurationOptions2(soap*) allocate
/// - soap_new_tt__PTZConfigurationOptions2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationOptions2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationOptions2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions2(soap, tt__PTZConfigurationOptions2*) serialize to a stream
class tt__PTZConfigurationOptions2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
/// class tt__PTControlDirectionOptions operations:
/// - soap_new_tt__PTControlDirectionOptions(soap*) allocate
/// - soap_new_tt__PTControlDirectionOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptions(soap, tt__PTControlDirectionOptions*) serialize to a stream
class tt__PTControlDirectionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
/// Element "EFlip" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
/// class tt__PTControlDirectionOptionsExtension operations:
/// - soap_new_tt__PTControlDirectionOptionsExtension(soap*) allocate
/// - soap_new_tt__PTControlDirectionOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptionsExtension(soap, tt__PTControlDirectionOptionsExtension*) serialize to a stream
class tt__PTControlDirectionOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
/// class tt__EFlipOptions operations:
/// - soap_new_tt__EFlipOptions(soap*) allocate
/// - soap_new_tt__EFlipOptions(soap*, int num) allocate array
/// - soap_new_req_tt__EFlipOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlipOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlipOptions(soap*, tt__EFlipOptions*) deserialize from a stream
/// - int soap_write_tt__EFlipOptions(soap, tt__EFlipOptions*) serialize to a stream
class tt__EFlipOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__EFlipMode of length 0..unbounded.
    std::vector<enum tt__EFlipMode     > Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
/// class tt__EFlipOptionsExtension operations:
/// - soap_new_tt__EFlipOptionsExtension(soap*) allocate
/// - soap_new_tt__EFlipOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__EFlipOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlipOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__EFlipOptionsExtension(soap, tt__EFlipOptionsExtension*) serialize to a stream
class tt__EFlipOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
/// class tt__ReverseOptions operations:
/// - soap_new_tt__ReverseOptions(soap*) allocate
/// - soap_new_tt__ReverseOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ReverseOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReverseOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReverseOptions(soap*, tt__ReverseOptions*) deserialize from a stream
/// - int soap_write_tt__ReverseOptions(soap, tt__ReverseOptions*) serialize to a stream
class tt__ReverseOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__ReverseMode of length 0..unbounded.
    std::vector<enum tt__ReverseMode   > Mode                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
/// class tt__ReverseOptionsExtension operations:
/// - soap_new_tt__ReverseOptionsExtension(soap*) allocate
/// - soap_new_tt__ReverseOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ReverseOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReverseOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ReverseOptionsExtension(soap, tt__ReverseOptionsExtension*) serialize to a stream
class tt__ReverseOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// class tt__PanTiltLimits operations:
/// - soap_new_tt__PanTiltLimits(soap*) allocate
/// - soap_new_tt__PanTiltLimits(soap*, int num) allocate array
/// - soap_new_req_tt__PanTiltLimits(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PanTiltLimits(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) deserialize from a stream
/// - int soap_write_tt__PanTiltLimits(soap, tt__PanTiltLimits*) serialize to a stream
class tt__PanTiltLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// class tt__ZoomLimits operations:
/// - soap_new_tt__ZoomLimits(soap*) allocate
/// - soap_new_tt__ZoomLimits(soap*, int num) allocate array
/// - soap_new_req_tt__ZoomLimits(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ZoomLimits(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ZoomLimits(soap*, tt__ZoomLimits*) deserialize from a stream
/// - int soap_write_tt__ZoomLimits(soap, tt__ZoomLimits*) serialize to a stream
class tt__ZoomLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
/// Element "Range" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// class tt__PTZSpaces operations:
/// - soap_new_tt__PTZSpaces(soap*) allocate
/// - soap_new_tt__PTZSpaces(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpaces(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpaces(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpaces(soap*, tt__PTZSpaces*) deserialize from a stream
/// - int soap_write_tt__PTZSpaces(soap, tt__PTZSpaces*) serialize to a stream
class tt__PTZSpaces
{ public:
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range.
///   Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> AbsolutePanTiltPositionSpace   0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range.
///   Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele).
///   There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> AbsoluteZoomPositionSpace      0;
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range.
///   Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1,
///   where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> RelativePanTiltTranslationSpace 0;
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range.
///   Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1,
///   where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele).
///   There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> RelativeZoomTranslationSpace   0;
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range.
///   Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise
///   rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1,
///   where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ContinuousZoomVelocitySpace    0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation.
///   In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt
///   movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> PanTiltSpeedSpace              0;
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation.
///   In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ZoomSpeedSpace                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
/// class tt__PTZSpacesExtension operations:
/// - soap_new_tt__PTZSpacesExtension(soap*) allocate
/// - soap_new_tt__PTZSpacesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpacesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpacesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) deserialize from a stream
/// - int soap_write_tt__PTZSpacesExtension(soap, tt__PTZSpacesExtension*) serialize to a stream
class tt__PTZSpacesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// class tt__Space2DDescription operations:
/// - soap_new_tt__Space2DDescription(soap*) allocate
/// - soap_new_tt__Space2DDescription(soap*, int num) allocate array
/// - soap_new_req_tt__Space2DDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Space2DDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Space2DDescription(soap*, tt__Space2DDescription*) deserialize from a stream
/// - int soap_write_tt__Space2DDescription(soap, tt__Space2DDescription*) serialize to a stream
class tt__Space2DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
/// Element "YRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// class tt__Space1DDescription operations:
/// - soap_new_tt__Space1DDescription(soap*) allocate
/// - soap_new_tt__Space1DDescription(soap*, int num) allocate array
/// - soap_new_req_tt__Space1DDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Space1DDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Space1DDescription(soap*, tt__Space1DDescription*) deserialize from a stream
/// - int soap_write_tt__Space1DDescription(soap, tt__Space1DDescription*) serialize to a stream
class tt__Space1DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
/// Element "URI" of XSD type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
/// Element "XRange" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// class tt__Vector2D operations:
/// - soap_new_tt__Vector2D(soap*) allocate
/// - soap_new_tt__Vector2D(soap*, int num) allocate array
/// - soap_new_req_tt__Vector2D(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector2D(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector2D(soap*, tt__Vector2D*) deserialize from a stream
/// - int soap_write_tt__Vector2D(soap, tt__Vector2D*) serialize to a stream
class tt__Vector2D
{ public:
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute "y" of XSD type xs:float.
   @float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// class tt__Vector1D operations:
/// - soap_new_tt__Vector1D(soap*) allocate
/// - soap_new_tt__Vector1D(soap*, int num) allocate array
/// - soap_new_req_tt__Vector1D(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector1D(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector1D(soap*, tt__Vector1D*) deserialize from a stream
/// - int soap_write_tt__Vector1D(soap, tt__Vector1D*) serialize to a stream
class tt__Vector1D
{ public:
/// Attribute "x" of XSD type xs:float.
   @float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Attribute "space" of XSD type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// class tt__PTZVector operations:
/// - soap_new_tt__PTZVector(soap*) allocate
/// - soap_new_tt__PTZVector(soap*, int num) allocate array
/// - soap_new_req_tt__PTZVector(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZVector(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZVector(soap*, tt__PTZVector*) deserialize from a stream
/// - int soap_write_tt__PTZVector(soap, tt__PTZVector*) serialize to a stream
class tt__PTZVector
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// class tt__PTZSpeed operations:
/// - soap_new_tt__PTZSpeed(soap*) allocate
/// - soap_new_tt__PTZSpeed(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpeed(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpeed(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpeed(soap*, tt__PTZSpeed*) deserialize from a stream
/// - int soap_write_tt__PTZSpeed(soap, tt__PTZSpeed*) serialize to a stream
class tt__PTZSpeed
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
/// class tt__PTZStatus operations:
/// - soap_new_tt__PTZStatus(soap*) allocate
/// - soap_new_tt__PTZStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatus(soap*, tt__PTZStatus*) deserialize from a stream
/// - int soap_write_tt__PTZStatus(soap, tt__PTZStatus*) serialize to a stream
class tt__PTZStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// class tt__PTZPreset operations:
/// - soap_new_tt__PTZPreset(soap*) allocate
/// - soap_new_tt__PTZPreset(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPreset(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPreset(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPreset(soap*, tt__PTZPreset*) deserialize from a stream
/// - int soap_write_tt__PTZPreset(soap, tt__PTZPreset*) serialize to a stream
class tt__PTZPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// class tt__PTZMoveStatus operations:
/// - soap_new_tt__PTZMoveStatus(soap*) allocate
/// - soap_new_tt__PTZMoveStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZMoveStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZMoveStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) deserialize from a stream
/// - int soap_write_tt__PTZMoveStatus(soap, tt__PTZMoveStatus*) serialize to a stream
class tt__PTZMoveStatus
{ public:

/// </BLOCKQUOTE></PRE>
/// Element "PanTilt" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Zoom" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
/// class tt__PresetTour operations:
/// - soap_new_tt__PresetTour(soap*) allocate
/// - soap_new_tt__PresetTour(soap*, int num) allocate array
/// - soap_new_req_tt__PresetTour(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PresetTour(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PresetTour(soap*, tt__PresetTour*) deserialize from a stream
/// - int soap_write_tt__PresetTour(soap, tt__PresetTour*) serialize to a stream
class tt__PresetTour
{ public:
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "Status" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PTZPresetTourSpot* of length 0..unbounded.
    std::vector<tt__PTZPresetTourSpot* > TourSpot                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
/// class tt__PTZPresetTourExtension operations:
/// - soap_new_tt__PTZPresetTourExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourExtension(soap, tt__PTZPresetTourExtension*) serialize to a stream
class tt__PTZPresetTourExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
/// class tt__PTZPresetTourSpot operations:
/// - soap_new_tt__PTZPresetTourSpot(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpot(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpot(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpot(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpot(soap, tt__PTZPresetTourSpot*) serialize to a stream
class tt__PTZPresetTourSpot
{ public:
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
/// class tt__PTZPresetTourSpotExtension operations:
/// - soap_new_tt__PTZPresetTourSpotExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpotExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotExtension(soap, tt__PTZPresetTourSpotExtension*) serialize to a stream
class tt__PTZPresetTourSpotExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
/// class tt__PTZPresetTourPresetDetail operations:
/// - soap_new_tt__PTZPresetTourPresetDetail(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetail(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetail(soap, tt__PTZPresetTourPresetDetail*) serialize to a stream
class tt__PTZPresetTourPresetDetail
{ public:
//  BEGIN CHOICE <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
/// Element "PresetToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    bool                                 Home                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
/// Element "PTZPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    1;	///< Required element.
/// Element "TypeExtension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
/// class tt__PTZPresetTourTypeExtension operations:
/// - soap_new_tt__PTZPresetTourTypeExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourTypeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourTypeExtension(soap, tt__PTZPresetTourTypeExtension*) serialize to a stream
class tt__PTZPresetTourTypeExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
/// class tt__PTZPresetTourStatus operations:
/// - soap_new_tt__PTZPresetTourStatus(soap*) allocate
/// - soap_new_tt__PTZPresetTourStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatus(soap, tt__PTZPresetTourStatus*) serialize to a stream
class tt__PTZPresetTourStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
/// class tt__PTZPresetTourStatusExtension operations:
/// - soap_new_tt__PTZPresetTourStatusExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStatusExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatusExtension(soap, tt__PTZPresetTourStatusExtension*) serialize to a stream
class tt__PTZPresetTourStatusExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
/// class tt__PTZPresetTourStartingCondition operations:
/// - soap_new_tt__PTZPresetTourStartingCondition(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingCondition(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingCondition(soap, tt__PTZPresetTourStartingCondition*) serialize to a stream
class tt__PTZPresetTourStartingCondition
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
/// Element "Direction" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
/// class tt__PTZPresetTourStartingConditionExtension operations:
/// - soap_new_tt__PTZPresetTourStartingConditionExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(soap, tt__PTZPresetTourStartingConditionExtension*) serialize to a stream
class tt__PTZPresetTourStartingConditionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
/// class tt__PTZPresetTourOptions operations:
/// - soap_new_tt__PTZPresetTourOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourOptions(soap, tt__PTZPresetTourOptions*) serialize to a stream
class tt__PTZPresetTourOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
/// Element "AutoStart" of XSD type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
/// Element "StartingCondition" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
/// Element "TourSpot" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
/// class tt__PTZPresetTourSpotOptions operations:
/// - soap_new_tt__PTZPresetTourSpotOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpotOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotOptions(soap, tt__PTZPresetTourSpotOptions*) serialize to a stream
class tt__PTZPresetTourSpotOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "PresetDetail" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "StayTime" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
/// class tt__PTZPresetTourPresetDetailOptions operations:
/// - soap_new_tt__PTZPresetTourPresetDetailOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetailOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(soap, tt__PTZPresetTourPresetDetailOptions*) serialize to a stream
class tt__PTZPresetTourPresetDetailOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > PresetToken                    0;
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "Home" of XSD type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomPositionSpace" of XSD type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
/// class tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a stream
class tt__PTZPresetTourPresetDetailOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
/// class tt__PTZPresetTourStartingConditionOptions operations:
/// - soap_new_tt__PTZPresetTourStartingConditionOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(soap, tt__PTZPresetTourStartingConditionOptions*) serialize to a stream
class tt__PTZPresetTourStartingConditionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringTime" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
/// Element "RecurringDuration" of XSD type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__PTZPresetTourDirection of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourDirection> Direction                      0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
/// class tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a stream
class tt__PTZPresetTourStartingConditionOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
/// class tt__ImagingStatus operations:
/// - soap_new_tt__ImagingStatus(soap*) allocate
/// - soap_new_tt__ImagingStatus(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus(soap*, tt__ImagingStatus*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus(soap, tt__ImagingStatus*) serialize to a stream
class tt__ImagingStatus
{ public:
/// Element "FocusStatus" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus.
    tt__FocusStatus*                     FocusStatus                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
/// class tt__FocusStatus operations:
/// - soap_new_tt__FocusStatus(soap*) allocate
/// - soap_new_tt__FocusStatus(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus(soap*, tt__FocusStatus*) deserialize from a stream
/// - int soap_write_tt__FocusStatus(soap, tt__FocusStatus*) serialize to a stream
class tt__FocusStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    std::string                          Error                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
/// class tt__FocusConfiguration operations:
/// - soap_new_tt__FocusConfiguration(soap*) allocate
/// - soap_new_tt__FocusConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration(soap, tt__FocusConfiguration*) serialize to a stream
class tt__FocusConfiguration
{ public:
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
/// class tt__ImagingSettings operations:
/// - soap_new_tt__ImagingSettings(soap*) allocate
/// - soap_new_tt__ImagingSettings(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettings(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettings(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettings(soap*, tt__ImagingSettings*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings(soap, tt__ImagingSettings*) serialize to a stream
class tt__ImagingSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    tt__BacklightCompensation*           BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure.
    tt__Exposure*                        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    tt__FocusConfiguration*              Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    tt__WideDynamicRange*                WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance.
    tt__WhiteBalance*                    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    tt__ImagingSettingsExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
/// class tt__ImagingSettingsExtension operations:
/// - soap_new_tt__ImagingSettingsExtension(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension(soap, tt__ImagingSettingsExtension*) serialize to a stream
class tt__ImagingSettingsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
/// class tt__Exposure operations:
/// - soap_new_tt__Exposure(soap*) allocate
/// - soap_new_tt__Exposure(soap*, int num) allocate array
/// - soap_new_req_tt__Exposure(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Exposure(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Exposure(soap*, tt__Exposure*) deserialize from a stream
/// - int soap_write_tt__Exposure(soap, tt__Exposure*) serialize to a stream
class tt__Exposure
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float                                Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
/// class tt__WideDynamicRange operations:
/// - soap_new_tt__WideDynamicRange(soap*) allocate
/// - soap_new_tt__WideDynamicRange(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange(soap, tt__WideDynamicRange*) serialize to a stream
class tt__WideDynamicRange
{ public:
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
/// class tt__BacklightCompensation operations:
/// - soap_new_tt__BacklightCompensation(soap*) allocate
/// - soap_new_tt__BacklightCompensation(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation(soap, tt__BacklightCompensation*) serialize to a stream
class tt__BacklightCompensation
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
/// class tt__ImagingOptions operations:
/// - soap_new_tt__ImagingOptions(soap*) allocate
/// - soap_new_tt__ImagingOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions(soap*, tt__ImagingOptions*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions(soap, tt__ImagingOptions*) serialize to a stream
class tt__ImagingOptions
{ public:
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    tt__BacklightCompensationOptions*    BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                1;	///< Required element.
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       1;	///< Required element.
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions.
    tt__ExposureOptions*                 Exposure                       1;	///< Required element.
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions.
    tt__FocusOptions*                    Focus                          1;	///< Required element.
/// Vector of enum tt__IrCutFilterMode of length 1..unbounded.
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               1;
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    tt__WideDynamicRangeOptions*         WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    tt__WhiteBalanceOptions*             WhiteBalance                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
/// class tt__WideDynamicRangeOptions operations:
/// - soap_new_tt__WideDynamicRangeOptions(soap*) allocate
/// - soap_new_tt__WideDynamicRangeOptions(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRangeOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRangeOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRangeOptions(soap, tt__WideDynamicRangeOptions*) serialize to a stream
class tt__WideDynamicRangeOptions
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
/// class tt__BacklightCompensationOptions operations:
/// - soap_new_tt__BacklightCompensationOptions(soap*) allocate
/// - soap_new_tt__BacklightCompensationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensationOptions(soap, tt__BacklightCompensationOptions*) serialize to a stream
class tt__BacklightCompensationOptions
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
/// class tt__FocusOptions operations:
/// - soap_new_tt__FocusOptions(soap*) allocate
/// - soap_new_tt__FocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions(soap*, tt__FocusOptions*) deserialize from a stream
/// - int soap_write_tt__FocusOptions(soap, tt__FocusOptions*) serialize to a stream
class tt__FocusOptions
{ public:
/// Vector of enum tt__AutoFocusMode of length 0..unbounded.
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      1;	///< Required element.
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
/// class tt__ExposureOptions operations:
/// - soap_new_tt__ExposureOptions(soap*) allocate
/// - soap_new_tt__ExposureOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ExposureOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ExposureOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ExposureOptions(soap*, tt__ExposureOptions*) deserialize from a stream
/// - int soap_write_tt__ExposureOptions(soap, tt__ExposureOptions*) serialize to a stream
class tt__ExposureOptions
{ public:
/// Vector of enum tt__ExposureMode of length 1..unbounded.
    std::vector<enum tt__ExposureMode  > Mode                           1;
/// Vector of enum tt__ExposurePriority of length 1..unbounded.
    std::vector<enum tt__ExposurePriority> Priority                       1;
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        1;	///< Required element.
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        1;	///< Required element.
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        1;	///< Required element.
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   1;	///< Required element.
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           1;	///< Required element.
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
/// class tt__WhiteBalanceOptions operations:
/// - soap_new_tt__WhiteBalanceOptions(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions(soap, tt__WhiteBalanceOptions*) serialize to a stream
class tt__WhiteBalanceOptions
{ public:
/// Vector of enum tt__WhiteBalanceMode of length 1..unbounded.
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         1;	///< Required element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
/// class tt__FocusMove operations:
/// - soap_new_tt__FocusMove(soap*) allocate
/// - soap_new_tt__FocusMove(soap*, int num) allocate array
/// - soap_new_req_tt__FocusMove(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusMove(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusMove(soap*, tt__FocusMove*) deserialize from a stream
/// - int soap_write_tt__FocusMove(soap, tt__FocusMove*) serialize to a stream
class tt__FocusMove
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    tt__AbsoluteFocus*                   Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocus.
    tt__RelativeFocus*                   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    tt__ContinuousFocus*                 Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
/// class tt__AbsoluteFocus operations:
/// - soap_new_tt__AbsoluteFocus(soap*) allocate
/// - soap_new_tt__AbsoluteFocus(soap*, int num) allocate array
/// - soap_new_req_tt__AbsoluteFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AbsoluteFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus*) deserialize from a stream
/// - int soap_write_tt__AbsoluteFocus(soap, tt__AbsoluteFocus*) serialize to a stream
class tt__AbsoluteFocus
{ public:
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
/// class tt__RelativeFocus operations:
/// - soap_new_tt__RelativeFocus(soap*) allocate
/// - soap_new_tt__RelativeFocus(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocus(soap*, tt__RelativeFocus*) deserialize from a stream
/// - int soap_write_tt__RelativeFocus(soap, tt__RelativeFocus*) serialize to a stream
class tt__RelativeFocus
{ public:
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
/// class tt__ContinuousFocus operations:
/// - soap_new_tt__ContinuousFocus(soap*) allocate
/// - soap_new_tt__ContinuousFocus(soap*, int num) allocate array
/// - soap_new_req_tt__ContinuousFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ContinuousFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ContinuousFocus(soap*, tt__ContinuousFocus*) deserialize from a stream
/// - int soap_write_tt__ContinuousFocus(soap, tt__ContinuousFocus*) serialize to a stream
class tt__ContinuousFocus
{ public:
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type xs:float.
    float                                Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
/// class tt__MoveOptions operations:
/// - soap_new_tt__MoveOptions(soap*) allocate
/// - soap_new_tt__MoveOptions(soap*, int num) allocate array
/// - soap_new_req_tt__MoveOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MoveOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MoveOptions(soap*, tt__MoveOptions*) deserialize from a stream
/// - int soap_write_tt__MoveOptions(soap, tt__MoveOptions*) serialize to a stream
class tt__MoveOptions
{ public:
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    tt__RelativeFocusOptions*            Relative                       0;	///< Optional element.
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
/// class tt__AbsoluteFocusOptions operations:
/// - soap_new_tt__AbsoluteFocusOptions(soap*) allocate
/// - soap_new_tt__AbsoluteFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AbsoluteFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AbsoluteFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions*) deserialize from a stream
/// - int soap_write_tt__AbsoluteFocusOptions(soap, tt__AbsoluteFocusOptions*) serialize to a stream
class tt__AbsoluteFocusOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
/// class tt__RelativeFocusOptions operations:
/// - soap_new_tt__RelativeFocusOptions(soap*) allocate
/// - soap_new_tt__RelativeFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions*) deserialize from a stream
/// - int soap_write_tt__RelativeFocusOptions(soap, tt__RelativeFocusOptions*) serialize to a stream
class tt__RelativeFocusOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
/// class tt__ContinuousFocusOptions operations:
/// - soap_new_tt__ContinuousFocusOptions(soap*) allocate
/// - soap_new_tt__ContinuousFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ContinuousFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ContinuousFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions*) deserialize from a stream
/// - int soap_write_tt__ContinuousFocusOptions(soap, tt__ContinuousFocusOptions*) serialize to a stream
class tt__ContinuousFocusOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
/// class tt__WhiteBalance operations:
/// - soap_new_tt__WhiteBalance(soap*) allocate
/// - soap_new_tt__WhiteBalance(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance(soap*, tt__WhiteBalance*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance(soap, tt__WhiteBalance*) serialize to a stream
class tt__WhiteBalance
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float                                CbGain                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
/// class tt__ImagingStatus20 operations:
/// - soap_new_tt__ImagingStatus20(soap*) allocate
/// - soap_new_tt__ImagingStatus20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus20(soap*, tt__ImagingStatus20*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus20(soap, tt__ImagingStatus20*) serialize to a stream
class tt__ImagingStatus20
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "FocusStatus20" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20.
    tt__FocusStatus20*                   FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    tt__ImagingStatus20Extension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
/// class tt__ImagingStatus20Extension operations:
/// - soap_new_tt__ImagingStatus20Extension(soap*) allocate
/// - soap_new_tt__ImagingStatus20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus20Extension(soap, tt__ImagingStatus20Extension*) serialize to a stream
class tt__ImagingStatus20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
/// class tt__FocusStatus20 operations:
/// - soap_new_tt__FocusStatus20(soap*) allocate
/// - soap_new_tt__FocusStatus20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus20(soap*, tt__FocusStatus20*) deserialize from a stream
/// - int soap_write_tt__FocusStatus20(soap, tt__FocusStatus20*) serialize to a stream
class tt__FocusStatus20
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
/// Element "MoveStatus" of XSD type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    tt__FocusStatus20Extension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
/// class tt__FocusStatus20Extension operations:
/// - soap_new_tt__FocusStatus20Extension(soap*) allocate
/// - soap_new_tt__FocusStatus20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusStatus20Extension(soap, tt__FocusStatus20Extension*) serialize to a stream
class tt__FocusStatus20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
/// class tt__ImagingSettings20 operations:
/// - soap_new_tt__ImagingSettings20(soap*) allocate
/// - soap_new_tt__ImagingSettings20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettings20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettings20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings20(soap, tt__ImagingSettings20*) serialize to a stream
class tt__ImagingSettings20
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    tt__BacklightCompensation20*         BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":Exposure20.
    tt__Exposure20*                      Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    tt__FocusConfiguration20*            Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
/// Element "IrCutFilter" of XSD type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    tt__WideDynamicRange20*              WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    tt__WhiteBalance20*                  WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    tt__ImagingSettingsExtension20*      Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
/// class tt__ImagingSettingsExtension20 operations:
/// - soap_new_tt__ImagingSettingsExtension20(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension20(soap, tt__ImagingSettingsExtension20*) serialize to a stream
class tt__ImagingSettingsExtension20
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilization.
    tt__ImageStabilization*              ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    tt__ImagingSettingsExtension202*     Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
/// class tt__ImagingSettingsExtension202 operations:
/// - soap_new_tt__ImagingSettingsExtension202(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension202(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension202(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension202(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension202(soap, tt__ImagingSettingsExtension202*) serialize to a stream
class tt__ImagingSettingsExtension202
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
/// class tt__ImageStabilization operations:
/// - soap_new_tt__ImageStabilization(soap*) allocate
/// - soap_new_tt__ImageStabilization(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilization(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilization(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilization(soap*, tt__ImageStabilization*) deserialize from a stream
/// - int soap_write_tt__ImageStabilization(soap, tt__ImageStabilization*) serialize to a stream
class tt__ImageStabilization
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    tt__ImageStabilizationExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
/// class tt__ImageStabilizationExtension operations:
/// - soap_new_tt__ImageStabilizationExtension(soap*) allocate
/// - soap_new_tt__ImageStabilizationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationExtension(soap, tt__ImageStabilizationExtension*) serialize to a stream
class tt__ImageStabilizationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
/// class tt__WideDynamicRange20 operations:
/// - soap_new_tt__WideDynamicRange20(soap*) allocate
/// - soap_new_tt__WideDynamicRange20(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRange20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRange20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange20(soap, tt__WideDynamicRange20*) serialize to a stream
class tt__WideDynamicRange20
{ public:
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
/// class tt__BacklightCompensation20 operations:
/// - soap_new_tt__BacklightCompensation20(soap*) allocate
/// - soap_new_tt__BacklightCompensation20(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensation20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensation20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation20(soap, tt__BacklightCompensation20*) serialize to a stream
class tt__BacklightCompensation20
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
/// class tt__Exposure20 operations:
/// - soap_new_tt__Exposure20(soap*) allocate
/// - soap_new_tt__Exposure20(soap*, int num) allocate array
/// - soap_new_req_tt__Exposure20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Exposure20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Exposure20(soap*, tt__Exposure20*) deserialize from a stream
/// - int soap_write_tt__Exposure20(soap, tt__Exposure20*) serialize to a stream
class tt__Exposure20
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
/// Element "Window" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type xs:float.
    float*                               Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
/// class tt__ImagingOptions20 operations:
/// - soap_new_tt__ImagingOptions20(soap*) allocate
/// - soap_new_tt__ImagingOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20(soap*, tt__ImagingOptions20*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20(soap, tt__ImagingOptions20*) serialize to a stream
class tt__ImagingOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
/// Element "BacklightCompensation" of XSD type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
/// Element "Brightness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
/// Element "ColorSaturation" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
/// Element "Contrast" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
/// Element "Exposure" of XSD type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    tt__ExposureOptions20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
/// Element "Focus" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20.
    tt__FocusOptions20*                  Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__IrCutFilterMode of length 0..unbounded.
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               0;
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
/// Element "Sharpness" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
/// Element "WideDynamicRange" of XSD type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    tt__WideDynamicRangeOptions20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
/// Element "WhiteBalance" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    tt__WhiteBalanceOptions20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    tt__ImagingOptions20Extension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
/// class tt__ImagingOptions20Extension operations:
/// - soap_new_tt__ImagingOptions20Extension(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension(soap, tt__ImagingOptions20Extension*) serialize to a stream
class tt__ImagingOptions20Extension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
/// Element "ImageStabilization" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    tt__ImageStabilizationOptions*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    tt__ImagingOptions20Extension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
/// class tt__ImagingOptions20Extension2 operations:
/// - soap_new_tt__ImagingOptions20Extension2(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension2(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension2(soap, tt__ImagingOptions20Extension2*) serialize to a stream
class tt__ImagingOptions20Extension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
/// class tt__ImageStabilizationOptions operations:
/// - soap_new_tt__ImageStabilizationOptions(soap*) allocate
/// - soap_new_tt__ImageStabilizationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationOptions(soap, tt__ImageStabilizationOptions*) serialize to a stream
class tt__ImageStabilizationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__ImageStabilizationMode of length 1..unbounded.
    std::vector<enum tt__ImageStabilizationMode> Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
/// class tt__ImageStabilizationOptionsExtension operations:
/// - soap_new_tt__ImageStabilizationOptionsExtension(soap*) allocate
/// - soap_new_tt__ImageStabilizationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationOptionsExtension(soap, tt__ImageStabilizationOptionsExtension*) serialize to a stream
class tt__ImageStabilizationOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
/// class tt__WideDynamicRangeOptions20 operations:
/// - soap_new_tt__WideDynamicRangeOptions20(soap*) allocate
/// - soap_new_tt__WideDynamicRangeOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRangeOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRangeOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRangeOptions20(soap, tt__WideDynamicRangeOptions20*) serialize to a stream
class tt__WideDynamicRangeOptions20
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
/// class tt__BacklightCompensationOptions20 operations:
/// - soap_new_tt__BacklightCompensationOptions20(soap*) allocate
/// - soap_new_tt__BacklightCompensationOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensationOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensationOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensationOptions20(soap, tt__BacklightCompensationOptions20*) serialize to a stream
class tt__BacklightCompensationOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__BacklightCompensationMode of length 1..unbounded.
    std::vector<enum tt__BacklightCompensationMode> Mode                           1;
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
/// Element "Level" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
/// class tt__ExposureOptions20 operations:
/// - soap_new_tt__ExposureOptions20(soap*) allocate
/// - soap_new_tt__ExposureOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__ExposureOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ExposureOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ExposureOptions20(soap*, tt__ExposureOptions20*) deserialize from a stream
/// - int soap_write_tt__ExposureOptions20(soap, tt__ExposureOptions20*) serialize to a stream
class tt__ExposureOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__ExposureMode of length 1..unbounded.
    std::vector<enum tt__ExposureMode  > Mode                           1;
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__ExposurePriority of length 0..unbounded.
    std::vector<enum tt__ExposurePriority> Priority                       0;
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MinExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "MaxExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MinGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
/// Element "MaxGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MinIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
/// Element "MaxIris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
/// Element "ExposureTime" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
/// Element "Gain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
/// Element "Iris" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
/// class tt__MoveOptions20 operations:
/// - soap_new_tt__MoveOptions20(soap*) allocate
/// - soap_new_tt__MoveOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__MoveOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MoveOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MoveOptions20(soap*, tt__MoveOptions20*) deserialize from a stream
/// - int soap_write_tt__MoveOptions20(soap, tt__MoveOptions20*) serialize to a stream
class tt__MoveOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
/// Element "Absolute" of XSD type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
/// Element "Relative" of XSD type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    tt__RelativeFocusOptions20*          Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
/// Element "Continuous" of XSD type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
/// class tt__RelativeFocusOptions20 operations:
/// - soap_new_tt__RelativeFocusOptions20(soap*) allocate
/// - soap_new_tt__RelativeFocusOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocusOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocusOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20*) deserialize from a stream
/// - int soap_write_tt__RelativeFocusOptions20(soap, tt__RelativeFocusOptions20*) serialize to a stream
class tt__RelativeFocusOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
/// Element "Distance" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
/// Element "Speed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
/// class tt__WhiteBalance20 operations:
/// - soap_new_tt__WhiteBalance20(soap*) allocate
/// - soap_new_tt__WhiteBalance20(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20(soap, tt__WhiteBalance20*) serialize to a stream
class tt__WhiteBalance20
{ public:
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CrGain" of XSD type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
/// Element "CbGain" of XSD type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    tt__WhiteBalance20Extension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
/// class tt__WhiteBalance20Extension operations:
/// - soap_new_tt__WhiteBalance20Extension(soap*) allocate
/// - soap_new_tt__WhiteBalance20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20Extension(soap, tt__WhiteBalance20Extension*) serialize to a stream
class tt__WhiteBalance20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
/// class tt__FocusConfiguration20 operations:
/// - soap_new_tt__FocusConfiguration20(soap*) allocate
/// - soap_new_tt__FocusConfiguration20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20(soap, tt__FocusConfiguration20*) serialize to a stream
class tt__FocusConfiguration20
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of auto fucus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "AutoFocusMode" of XSD type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of XSD type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    tt__FocusConfiguration20Extension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
/// class tt__FocusConfiguration20Extension operations:
/// - soap_new_tt__FocusConfiguration20Extension(soap*) allocate
/// - soap_new_tt__FocusConfiguration20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20Extension(soap, tt__FocusConfiguration20Extension*) serialize to a stream
class tt__FocusConfiguration20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
/// class tt__WhiteBalanceOptions20 operations:
/// - soap_new_tt__WhiteBalanceOptions20(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions20(soap, tt__WhiteBalanceOptions20*) serialize to a stream
class tt__WhiteBalanceOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__WhiteBalanceMode of length 1..unbounded.
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;
/// Element "YrGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         0;	///< Optional element.
/// Element "YbGain" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
/// class tt__WhiteBalanceOptions20Extension operations:
/// - soap_new_tt__WhiteBalanceOptions20Extension(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions20Extension(soap, tt__WhiteBalanceOptions20Extension*) serialize to a stream
class tt__WhiteBalanceOptions20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
/// class tt__FocusOptions20 operations:
/// - soap_new_tt__FocusOptions20(soap*) allocate
/// - soap_new_tt__FocusOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions20(soap*, tt__FocusOptions20*) deserialize from a stream
/// - int soap_write_tt__FocusOptions20(soap, tt__FocusOptions20*) serialize to a stream
class tt__FocusOptions20
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of Auto Focus.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__AutoFocusMode of length 0..unbounded.
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultSpeed" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
/// Element "NearLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
/// Element "FarLimit" of XSD type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    tt__FocusOptions20Extension*         Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
/// class tt__FocusOptions20Extension operations:
/// - soap_new_tt__FocusOptions20Extension(soap*) allocate
/// - soap_new_tt__FocusOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusOptions20Extension(soap, tt__FocusOptions20Extension*) serialize to a stream
class tt__FocusOptions20Extension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
/// class tt__MessageExtension operations:
/// - soap_new_tt__MessageExtension(soap*) allocate
/// - soap_new_tt__MessageExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MessageExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageExtension(soap*, tt__MessageExtension*) deserialize from a stream
/// - int soap_write_tt__MessageExtension(soap, tt__MessageExtension*) serialize to a stream
class tt__MessageExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
/// class tt__ItemList operations:
/// - soap_new_tt__ItemList(soap*) allocate
/// - soap_new_tt__ItemList(soap*, int num) allocate array
/// - soap_new_req_tt__ItemList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemList(soap*, tt__ItemList*) deserialize from a stream
/// - int soap_write_tt__ItemList(soap, tt__ItemList*) serialize to a stream
class tt__ItemList
{ public:
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Vector of SimpleItem of length 0..unbounded.
    std::vector<
/// class _tt__ItemList_SimpleItem operations:
/// - soap_new__tt__ItemList_SimpleItem(soap*) allocate
/// - soap_new__tt__ItemList_SimpleItem(soap*, int num) allocate array
/// - soap_new_req__tt__ItemList_SimpleItem(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemList_SimpleItem(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_SimpleItem(soap, _tt__ItemList_SimpleItem*) serialize to a stream
    class _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
/// Attribute "Value" of XSD type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }>                                  *SimpleItem                     0;
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
/// Vector of ElementItem of length 0..unbounded.
    std::vector<
/// class _tt__ItemList_ElementItem operations:
/// - soap_new__tt__ItemList_ElementItem(soap*) allocate
/// - soap_new__tt__ItemList_ElementItem(soap*, int num) allocate array
/// - soap_new_req__tt__ItemList_ElementItem(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemList_ElementItem(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_ElementItem(soap, _tt__ItemList_ElementItem*) serialize to a stream
    class _tt__ItemList_ElementItem
    {
/// @todo <any namespace="##any">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Member declared in /home/zcurylo/Documents/WORK_PROJECTS/OpenONVIF/OnvifSDK/typemapWeb.dat
    tt__CellLayout* Layout 0;
    }>                                  *ElementItem                    0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListExtension.
    tt__ItemListExtension*               Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
/// class tt__ItemListExtension operations:
/// - soap_new_tt__ItemListExtension(soap*) allocate
/// - soap_new_tt__ItemListExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListExtension(soap*, tt__ItemListExtension*) deserialize from a stream
/// - int soap_write_tt__ItemListExtension(soap, tt__ItemListExtension*) serialize to a stream
class tt__ItemListExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
/// class tt__MessageDescription operations:
/// - soap_new_tt__MessageDescription(soap*) allocate
/// - soap_new_tt__MessageDescription(soap*, int num) allocate array
/// - soap_new_req_tt__MessageDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageDescription(soap*, tt__MessageDescription*) deserialize from a stream
/// - int soap_write_tt__MessageDescription(soap, tt__MessageDescription*) serialize to a stream
class tt__MessageDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
/// class tt__MessageDescriptionExtension operations:
/// - soap_new_tt__MessageDescriptionExtension(soap*) allocate
/// - soap_new_tt__MessageDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MessageDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__MessageDescriptionExtension(soap, tt__MessageDescriptionExtension*) serialize to a stream
class tt__MessageDescriptionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
/// class tt__ItemListDescription operations:
/// - soap_new_tt__ItemListDescription(soap*) allocate
/// - soap_new_tt__ItemListDescription(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListDescription(soap*, tt__ItemListDescription*) deserialize from a stream
/// - int soap_write_tt__ItemListDescription(soap, tt__ItemListDescription*) serialize to a stream
class tt__ItemListDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
/// Vector of SimpleItemDescription of length 0..unbounded.
    std::vector<
/// class _tt__ItemListDescription_SimpleItemDescription operations:
/// - soap_new__tt__ItemListDescription_SimpleItemDescription(soap*) allocate
/// - soap_new__tt__ItemListDescription_SimpleItemDescription(soap*, int num) allocate array
/// - soap_new_req__tt__ItemListDescription_SimpleItemDescription(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemListDescription_SimpleItemDescription(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription*) deserialize from a stream
/// - int soap_write__tt__ItemListDescription_SimpleItemDescription(soap, _tt__ItemListDescription_SimpleItemDescription*) serialize to a stream
    class _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute "Type" of XSD type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *SimpleItemDescription          0;
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Vector of ElementItemDescription of length 0..unbounded.
    std::vector<
/// class _tt__ItemListDescription_ElementItemDescription operations:
/// - soap_new__tt__ItemListDescription_ElementItemDescription(soap*) allocate
/// - soap_new__tt__ItemListDescription_ElementItemDescription(soap*, int num) allocate array
/// - soap_new_req__tt__ItemListDescription_ElementItemDescription(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemListDescription_ElementItemDescription(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription*) deserialize from a stream
/// - int soap_write__tt__ItemListDescription_ElementItemDescription(soap, _tt__ItemListDescription_ElementItemDescription*) serialize to a stream
    class _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *ElementItemDescription         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    tt__ItemListDescriptionExtension*    Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
/// class tt__ItemListDescriptionExtension operations:
/// - soap_new_tt__ItemListDescriptionExtension(soap*) allocate
/// - soap_new_tt__ItemListDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__ItemListDescriptionExtension(soap, tt__ItemListDescriptionExtension*) serialize to a stream
class tt__ItemListDescriptionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
/// class tt__Vector operations:
/// - soap_new_tt__Vector(soap*) allocate
/// - soap_new_tt__Vector(soap*, int num) allocate array
/// - soap_new_req_tt__Vector(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector(soap*, tt__Vector*) deserialize from a stream
/// - int soap_write_tt__Vector(soap, tt__Vector*) serialize to a stream
class tt__Vector
{ public:
/// Attribute "x" of XSD type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of XSD type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
/// class tt__Rectangle operations:
/// - soap_new_tt__Rectangle(soap*) allocate
/// - soap_new_tt__Rectangle(soap*, int num) allocate array
/// - soap_new_req_tt__Rectangle(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Rectangle(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Rectangle(soap*, tt__Rectangle*) deserialize from a stream
/// - int soap_write_tt__Rectangle(soap, tt__Rectangle*) serialize to a stream
class tt__Rectangle
{ public:
/// Attribute "bottom" of XSD type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of XSD type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of XSD type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of XSD type xs:float.
   @float*                               left                           0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
/// class tt__Polygon operations:
/// - soap_new_tt__Polygon(soap*) allocate
/// - soap_new_tt__Polygon(soap*, int num) allocate array
/// - soap_new_req_tt__Polygon(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Polygon(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Polygon(soap*, tt__Polygon*) deserialize from a stream
/// - int soap_write_tt__Polygon(soap, tt__Polygon*) serialize to a stream
class tt__Polygon
{ public:
/// Vector of tt__Vector* of length 3..unbounded.
    std::vector<tt__Vector*            > Point                          3;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
/// class tt__Polyline operations:
/// - soap_new_tt__Polyline(soap*) allocate
/// - soap_new_tt__Polyline(soap*, int num) allocate array
/// - soap_new_req_tt__Polyline(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Polyline(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Polyline(soap*, tt__Polyline*) deserialize from a stream
/// - int soap_write_tt__Polyline(soap, tt__Polyline*) serialize to a stream
class tt__Polyline
{ public:
/// Vector of tt__Vector* of length 2..unbounded.
    std::vector<tt__Vector*            > Point                          2;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
/// class tt__Color operations:
/// - soap_new_tt__Color(soap*) allocate
/// - soap_new_tt__Color(soap*, int num) allocate array
/// - soap_new_req_tt__Color(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Color(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Color(soap*, tt__Color*) deserialize from a stream
/// - int soap_write_tt__Color(soap, tt__Color*) serialize to a stream
class tt__Color
{ public:
/// Attribute "X" of XSD type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute "Y" of XSD type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of XSD type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
/// class tt__ColorCovariance operations:
/// - soap_new_tt__ColorCovariance(soap*) allocate
/// - soap_new_tt__ColorCovariance(soap*, int num) allocate array
/// - soap_new_req_tt__ColorCovariance(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorCovariance(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorCovariance(soap*, tt__ColorCovariance*) deserialize from a stream
/// - int soap_write_tt__ColorCovariance(soap, tt__ColorCovariance*) serialize to a stream
class tt__ColorCovariance
{ public:
/// Attribute "XX" of XSD type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of XSD type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of XSD type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of XSD type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of XSD type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of XSD type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute "Colorspace" of XSD type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Appearance is a complexType.
///
/// class tt__Appearance operations:
/// - soap_new_tt__Appearance(soap*) allocate
/// - soap_new_tt__Appearance(soap*, int num) allocate array
/// - soap_new_req_tt__Appearance(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Appearance(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Appearance(soap*, tt__Appearance*) deserialize from a stream
/// - int soap_write_tt__Appearance(soap, tt__Appearance*) serialize to a stream
class tt__Appearance
{ public:
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 0;	///< Optional element.
/// Element "Shape" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    tt__ShapeDescriptor*                 Shape                          0;	///< Optional element.
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    tt__ColorDescriptor*                 Color                          0;	///< Optional element.
/// Element "Class" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    tt__ClassDescriptor*                 Class                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    tt__AppearanceExtension*             Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
///
/// class tt__AppearanceExtension operations:
/// - soap_new_tt__AppearanceExtension(soap*) allocate
/// - soap_new_tt__AppearanceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AppearanceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AppearanceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AppearanceExtension(soap*, tt__AppearanceExtension*) deserialize from a stream
/// - int soap_write_tt__AppearanceExtension(soap, tt__AppearanceExtension*) serialize to a stream
class tt__AppearanceExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
///
/// class tt__ShapeDescriptor operations:
/// - soap_new_tt__ShapeDescriptor(soap*) allocate
/// - soap_new_tt__ShapeDescriptor(soap*, int num) allocate array
/// - soap_new_req_tt__ShapeDescriptor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ShapeDescriptor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ShapeDescriptor(soap*, tt__ShapeDescriptor*) deserialize from a stream
/// - int soap_write_tt__ShapeDescriptor(soap, tt__ShapeDescriptor*) serialize to a stream
class tt__ShapeDescriptor
{ public:
/// Element "BoundingBox" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       BoundingBox                    1;	///< Required element.
/// Element "CenterOfGravity" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          CenterOfGravity                1;	///< Required element.
/// Vector of tt__Polygon* of length 0..unbounded.
    std::vector<tt__Polygon*           > Polygon                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    tt__ShapeDescriptorExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
///
/// class tt__ShapeDescriptorExtension operations:
/// - soap_new_tt__ShapeDescriptorExtension(soap*) allocate
/// - soap_new_tt__ShapeDescriptorExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ShapeDescriptorExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ShapeDescriptorExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ShapeDescriptorExtension(soap*, tt__ShapeDescriptorExtension*) deserialize from a stream
/// - int soap_write_tt__ShapeDescriptorExtension(soap, tt__ShapeDescriptorExtension*) serialize to a stream
class tt__ShapeDescriptorExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
/// class tt__ColorDescriptor operations:
/// - soap_new_tt__ColorDescriptor(soap*) allocate
/// - soap_new_tt__ColorDescriptor(soap*, int num) allocate array
/// - soap_new_req_tt__ColorDescriptor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorDescriptor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorDescriptor(soap*, tt__ColorDescriptor*) deserialize from a stream
/// - int soap_write_tt__ColorDescriptor(soap, tt__ColorDescriptor*) serialize to a stream
class tt__ColorDescriptor
{ public:
/// Vector of ColorCluster of length 0..unbounded.
    std::vector<
/// class _tt__ColorDescriptor_ColorCluster operations:
/// - soap_new__tt__ColorDescriptor_ColorCluster(soap*) allocate
/// - soap_new__tt__ColorDescriptor_ColorCluster(soap*, int num) allocate array
/// - soap_new_req__tt__ColorDescriptor_ColorCluster(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ColorDescriptor_ColorCluster(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster*) deserialize from a stream
/// - int soap_write__tt__ColorDescriptor_ColorCluster(soap, _tt__ColorDescriptor_ColorCluster*) serialize to a stream
    class _tt__ColorDescriptor_ColorCluster
    {
/// Element "Color" of XSD type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Element "Weight" of XSD type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of XSD type "http://www.onvif.org/ver10/schema":ColorCovariance.
    tt__ColorCovariance*                 Covariance                     0;	///< Optional element.
    }>                                  *ColorCluster                   0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    tt__ColorDescriptorExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
///
/// class tt__ColorDescriptorExtension operations:
/// - soap_new_tt__ColorDescriptorExtension(soap*) allocate
/// - soap_new_tt__ColorDescriptorExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ColorDescriptorExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorDescriptorExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorDescriptorExtension(soap*, tt__ColorDescriptorExtension*) deserialize from a stream
/// - int soap_write_tt__ColorDescriptorExtension(soap, tt__ColorDescriptorExtension*) serialize to a stream
class tt__ColorDescriptorExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
///
/// class tt__ClassDescriptor operations:
/// - soap_new_tt__ClassDescriptor(soap*) allocate
/// - soap_new_tt__ClassDescriptor(soap*, int num) allocate array
/// - soap_new_req_tt__ClassDescriptor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ClassDescriptor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ClassDescriptor(soap*, tt__ClassDescriptor*) deserialize from a stream
/// - int soap_write_tt__ClassDescriptor(soap, tt__ClassDescriptor*) serialize to a stream
class tt__ClassDescriptor
{ public:
/// Vector of ClassCandidate of length 0..unbounded.
    std::vector<
/// class _tt__ClassDescriptor_ClassCandidate operations:
/// - soap_new__tt__ClassDescriptor_ClassCandidate(soap*) allocate
/// - soap_new__tt__ClassDescriptor_ClassCandidate(soap*, int num) allocate array
/// - soap_new_req__tt__ClassDescriptor_ClassCandidate(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ClassDescriptor_ClassCandidate(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ClassDescriptor_ClassCandidate(soap*, _tt__ClassDescriptor_ClassCandidate*) deserialize from a stream
/// - int soap_write__tt__ClassDescriptor_ClassCandidate(soap, _tt__ClassDescriptor_ClassCandidate*) serialize to a stream
    class _tt__ClassDescriptor_ClassCandidate
    {
/// Element "Type" of XSD type "http://www.onvif.org/ver10/schema":ClassType.
    enum tt__ClassType                   Type                           1;	///< Required element.
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }>                                  *ClassCandidate                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    tt__ClassDescriptorExtension*        Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
///
/// class tt__ClassDescriptorExtension operations:
/// - soap_new_tt__ClassDescriptorExtension(soap*) allocate
/// - soap_new_tt__ClassDescriptorExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ClassDescriptorExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ClassDescriptorExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ClassDescriptorExtension(soap*, tt__ClassDescriptorExtension*) deserialize from a stream
/// - int soap_write_tt__ClassDescriptorExtension(soap, tt__ClassDescriptorExtension*) serialize to a stream
class tt__ClassDescriptorExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Vector of tt__OtherType* of length 1..unbounded.
    std::vector<tt__OtherType*         > OtherTypes                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    tt__ClassDescriptorExtension2*       Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
///
/// class tt__ClassDescriptorExtension2 operations:
/// - soap_new_tt__ClassDescriptorExtension2(soap*) allocate
/// - soap_new_tt__ClassDescriptorExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__ClassDescriptorExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ClassDescriptorExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ClassDescriptorExtension2(soap*, tt__ClassDescriptorExtension2*) deserialize from a stream
/// - int soap_write_tt__ClassDescriptorExtension2(soap, tt__ClassDescriptorExtension2*) serialize to a stream
class tt__ClassDescriptorExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OtherType is a complexType.
///
/// class tt__OtherType operations:
/// - soap_new_tt__OtherType(soap*) allocate
/// - soap_new_tt__OtherType(soap*, int num) allocate array
/// - soap_new_req_tt__OtherType(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OtherType(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OtherType(soap*, tt__OtherType*) deserialize from a stream
/// - int soap_write_tt__OtherType(soap, tt__OtherType*) serialize to a stream
class tt__OtherType
{ public:
/// <PRE><BLOCKQUOTE>
///   Object Class Type
/// </BLOCKQUOTE></PRE>
/// Element "Type" of XSD type xs:string.
    std::string                          Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
/// Element "Likelihood" of XSD type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
///
/// class tt__ObjectExtension operations:
/// - soap_new_tt__ObjectExtension(soap*) allocate
/// - soap_new_tt__ObjectExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ObjectExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ObjectExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ObjectExtension(soap*, tt__ObjectExtension*) deserialize from a stream
/// - int soap_write_tt__ObjectExtension(soap, tt__ObjectExtension*) serialize to a stream
class tt__ObjectExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
/// class tt__Transformation operations:
/// - soap_new_tt__Transformation(soap*) allocate
/// - soap_new_tt__Transformation(soap*, int num) allocate array
/// - soap_new_req_tt__Transformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Transformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Transformation(soap*, tt__Transformation*) deserialize from a stream
/// - int soap_write_tt__Transformation(soap, tt__Transformation*) serialize to a stream
class tt__Transformation
{ public:
/// Element "Translate" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Translate                      0;	///< Optional element.
/// Element "Scale" of XSD type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Scale                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TransformationExtension.
    tt__TransformationExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
/// class tt__TransformationExtension operations:
/// - soap_new_tt__TransformationExtension(soap*) allocate
/// - soap_new_tt__TransformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__TransformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TransformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TransformationExtension(soap*, tt__TransformationExtension*) deserialize from a stream
/// - int soap_write_tt__TransformationExtension(soap, tt__TransformationExtension*) serialize to a stream
class tt__TransformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Frame is a complexType.
///
/// class tt__Frame operations:
/// - soap_new_tt__Frame(soap*) allocate
/// - soap_new_tt__Frame(soap*, int num) allocate array
/// - soap_new_req_tt__Frame(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Frame(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Frame(soap*, tt__Frame*) deserialize from a stream
/// - int soap_write_tt__Frame(soap, tt__Frame*) serialize to a stream
class tt__Frame
{ public:
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      0;	///< Optional element.
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 0;	///< Optional element.
/// Vector of tt__Object* of length 0..unbounded.
    std::vector<tt__Object*            > Object                         0;
/// Element "ObjectTree" of XSD type "http://www.onvif.org/ver10/schema":ObjectTree.
    tt__ObjectTree*                      ObjectTree                     0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension.
    tt__FrameExtension*                  Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
///
/// class tt__FrameExtension operations:
/// - soap_new_tt__FrameExtension(soap*) allocate
/// - soap_new_tt__FrameExtension(soap*, int num) allocate array
/// - soap_new_req_tt__FrameExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FrameExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FrameExtension(soap*, tt__FrameExtension*) deserialize from a stream
/// - int soap_write_tt__FrameExtension(soap, tt__FrameExtension*) serialize to a stream
class tt__FrameExtension
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "MotionInCells" of XSD type "http://www.onvif.org/ver10/schema":MotionInCells.
    tt__MotionInCells*                   MotionInCells                  0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":FrameExtension2.
    tt__FrameExtension2*                 Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
///
/// class tt__FrameExtension2 operations:
/// - soap_new_tt__FrameExtension2(soap*) allocate
/// - soap_new_tt__FrameExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__FrameExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FrameExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FrameExtension2(soap*, tt__FrameExtension2*) deserialize from a stream
/// - int soap_write_tt__FrameExtension2(soap, tt__FrameExtension2*) serialize to a stream
class tt__FrameExtension2
{ public:
/// @todo <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Merge is a complexType.
///
/// class tt__Merge operations:
/// - soap_new_tt__Merge(soap*) allocate
/// - soap_new_tt__Merge(soap*, int num) allocate array
/// - soap_new_req_tt__Merge(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Merge(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Merge(soap*, tt__Merge*) deserialize from a stream
/// - int soap_write_tt__Merge(soap, tt__Merge*) serialize to a stream
class tt__Merge
{ public:
/// Vector of tt__ObjectId* of length 2..unbounded.
    std::vector<tt__ObjectId*          > from                           2;
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        to                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Split is a complexType.
///
/// class tt__Split operations:
/// - soap_new_tt__Split(soap*) allocate
/// - soap_new_tt__Split(soap*, int num) allocate array
/// - soap_new_req_tt__Split(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Split(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Split(soap*, tt__Split*) deserialize from a stream
/// - int soap_write_tt__Split(soap, tt__Split*) serialize to a stream
class tt__Split
{ public:
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        from                           1;	///< Required element.
/// Vector of tt__ObjectId* of length 2..unbounded.
    std::vector<tt__ObjectId*          > to                             2;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rename is a complexType.
///
/// class tt__Rename operations:
/// - soap_new_tt__Rename(soap*) allocate
/// - soap_new_tt__Rename(soap*, int num) allocate array
/// - soap_new_req_tt__Rename(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Rename(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Rename(soap*, tt__Rename*) deserialize from a stream
/// - int soap_write_tt__Rename(soap, tt__Rename*) serialize to a stream
class tt__Rename
{ public:
/// Element "from" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        from                           1;	///< Required element.
/// Element "to" of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
    tt__ObjectId*                        to                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
///
/// class tt__ObjectId operations:
/// - soap_new_tt__ObjectId(soap*) allocate
/// - soap_new_tt__ObjectId(soap*, int num) allocate array
/// - soap_new_req_tt__ObjectId(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ObjectId(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ObjectId(soap*, tt__ObjectId*) deserialize from a stream
/// - int soap_write_tt__ObjectId(soap, tt__ObjectId*) serialize to a stream
class tt__ObjectId
{ public:
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
///
/// class tt__Behaviour operations:
/// - soap_new_tt__Behaviour(soap*) allocate
/// - soap_new_tt__Behaviour(soap*, int num) allocate array
/// - soap_new_req_tt__Behaviour(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Behaviour(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Behaviour(soap*, tt__Behaviour*) deserialize from a stream
/// - int soap_write_tt__Behaviour(soap, tt__Behaviour*) serialize to a stream
class tt__Behaviour
{ public:
/// class _tt__Behaviour_Removed operations:
/// - soap_new__tt__Behaviour_Removed(soap*) allocate
/// - soap_new__tt__Behaviour_Removed(soap*, int num) allocate array
/// - soap_new_req__tt__Behaviour_Removed(soap*, ...) allocate, set required members
/// - soap_new_set__tt__Behaviour_Removed(soap*, ...) allocate, set all public members
/// - int soap_read__tt__Behaviour_Removed(soap*, _tt__Behaviour_Removed*) deserialize from a stream
/// - int soap_write__tt__Behaviour_Removed(soap, _tt__Behaviour_Removed*) serialize to a stream
    class _tt__Behaviour_Removed
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *Removed                        0;	///< Optional element.
/// class _tt__Behaviour_Idle operations:
/// - soap_new__tt__Behaviour_Idle(soap*) allocate
/// - soap_new__tt__Behaviour_Idle(soap*, int num) allocate array
/// - soap_new_req__tt__Behaviour_Idle(soap*, ...) allocate, set required members
/// - soap_new_set__tt__Behaviour_Idle(soap*, ...) allocate, set all public members
/// - int soap_read__tt__Behaviour_Idle(soap*, _tt__Behaviour_Idle*) deserialize from a stream
/// - int soap_write__tt__Behaviour_Idle(soap, _tt__Behaviour_Idle*) serialize to a stream
    class _tt__Behaviour_Idle
    {
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *Idle                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    tt__BehaviourExtension*              Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
///
/// class tt__BehaviourExtension operations:
/// - soap_new_tt__BehaviourExtension(soap*) allocate
/// - soap_new_tt__BehaviourExtension(soap*, int num) allocate array
/// - soap_new_req_tt__BehaviourExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BehaviourExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BehaviourExtension(soap*, tt__BehaviourExtension*) deserialize from a stream
/// - int soap_write_tt__BehaviourExtension(soap, tt__BehaviourExtension*) serialize to a stream
class tt__BehaviourExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
///
/// class tt__ObjectTree operations:
/// - soap_new_tt__ObjectTree(soap*) allocate
/// - soap_new_tt__ObjectTree(soap*, int num) allocate array
/// - soap_new_req_tt__ObjectTree(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ObjectTree(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ObjectTree(soap*, tt__ObjectTree*) deserialize from a stream
/// - int soap_write_tt__ObjectTree(soap, tt__ObjectTree*) serialize to a stream
class tt__ObjectTree
{ public:
/// Vector of tt__Rename* of length 0..unbounded.
    std::vector<tt__Rename*            > Rename                         0;
/// Vector of tt__Split* of length 0..unbounded.
    std::vector<tt__Split*             > Split                          0;
/// Vector of tt__Merge* of length 0..unbounded.
    std::vector<tt__Merge*             > Merge                          0;
/// Vector of tt__ObjectId* of length 0..unbounded.
    std::vector<tt__ObjectId*          > Delete                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    tt__ObjectTreeExtension*             Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
///
/// class tt__ObjectTreeExtension operations:
/// - soap_new_tt__ObjectTreeExtension(soap*) allocate
/// - soap_new_tt__ObjectTreeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ObjectTreeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ObjectTreeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ObjectTreeExtension(soap*, tt__ObjectTreeExtension*) deserialize from a stream
/// - int soap_write_tt__ObjectTreeExtension(soap, tt__ObjectTreeExtension*) serialize to a stream
class tt__ObjectTreeExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
///
/// class tt__MotionInCells operations:
/// - soap_new_tt__MotionInCells(soap*) allocate
/// - soap_new_tt__MotionInCells(soap*, int num) allocate array
/// - soap_new_req_tt__MotionInCells(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MotionInCells(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MotionInCells(soap*, tt__MotionInCells*) deserialize from a stream
/// - int soap_write_tt__MotionInCells(soap, tt__MotionInCells*) serialize to a stream
class tt__MotionInCells
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// </BLOCKQUOTE></PRE>
/// Attribute "Cells" of XSD type xs:base64Binary.
   @xsd__base64Binary                    Cells                          1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
/// class tt__AnalyticsEngineConfiguration operations:
/// - soap_new_tt__AnalyticsEngineConfiguration(soap*) allocate
/// - soap_new_tt__AnalyticsEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfiguration(soap, tt__AnalyticsEngineConfiguration*) serialize to a stream
class tt__AnalyticsEngineConfiguration
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > AnalyticsModule                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
/// class tt__AnalyticsEngineConfigurationExtension operations:
/// - soap_new_tt__AnalyticsEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__AnalyticsEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfigurationExtension(soap, tt__AnalyticsEngineConfigurationExtension*) serialize to a stream
class tt__AnalyticsEngineConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
/// class tt__RuleEngineConfiguration operations:
/// - soap_new_tt__RuleEngineConfiguration(soap*) allocate
/// - soap_new_tt__RuleEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RuleEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RuleEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfiguration(soap, tt__RuleEngineConfiguration*) serialize to a stream
class tt__RuleEngineConfiguration
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > Rule                           0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
/// class tt__RuleEngineConfigurationExtension operations:
/// - soap_new_tt__RuleEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__RuleEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfigurationExtension(soap, tt__RuleEngineConfigurationExtension*) serialize to a stream
class tt__RuleEngineConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
/// class tt__Config operations:
/// - soap_new_tt__Config(soap*) allocate
/// - soap_new_tt__Config(soap*, int num) allocate array
/// - soap_new_req_tt__Config(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Config(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Config(soap*, tt__Config*) deserialize from a stream
/// - int soap_write_tt__Config(soap, tt__Config*) serialize to a stream
class tt__Config
{ public:
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// </BLOCKQUOTE></PRE>
/// Attribute "Type" of XSD type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
/// class tt__ConfigDescription operations:
/// - soap_new_tt__ConfigDescription(soap*) allocate
/// - soap_new_tt__ConfigDescription(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigDescription(soap*, tt__ConfigDescription*) deserialize from a stream
/// - int soap_write_tt__ConfigDescription(soap, tt__ConfigDescription*) serialize to a stream
class tt__ConfigDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
/// Element "Parameters" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
/// Vector of Messages of length 0..unbounded.
    std::vector<
/// class _tt__ConfigDescription_Messages operations:
/// - soap_new__tt__ConfigDescription_Messages(soap*) allocate
/// - soap_new__tt__ConfigDescription_Messages(soap*, int num) allocate array
/// - soap_new_req__tt__ConfigDescription_Messages(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ConfigDescription_Messages(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages*) deserialize from a stream
/// - int soap_write__tt__ConfigDescription_Messages(soap, _tt__ConfigDescription_Messages*) serialize to a stream
    class _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
/// Attribute "IsProperty" of XSD type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic
///   by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine").
///   Even without knowing the complete topic name, the subscriber will be able to distiguish the
///   messages produced by different rule instances of the same type via the Source fields of the message.
///   There the name of the rule instance, which produced the message, must be listed.
/// </BLOCKQUOTE></PRE>
/// Element "ParentTopic" of XSD type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }>                                  *Messages                       0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    tt__ConfigDescriptionExtension*      Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   XML Type of the Configuration (e.g. "tt::LineDetector").
/// </BLOCKQUOTE></PRE>
/// Attribute "Name" of XSD type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
/// class tt__ConfigDescriptionExtension operations:
/// - soap_new_tt__ConfigDescriptionExtension(soap*) allocate
/// - soap_new_tt__ConfigDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__ConfigDescriptionExtension(soap, tt__ConfigDescriptionExtension*) serialize to a stream
class tt__ConfigDescriptionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
/// class tt__SupportedRules operations:
/// - soap_new_tt__SupportedRules(soap*) allocate
/// - soap_new_tt__SupportedRules(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedRules(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedRules(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedRules(soap*, tt__SupportedRules*) deserialize from a stream
/// - int soap_write_tt__SupportedRules(soap, tt__SupportedRules*) serialize to a stream
class tt__SupportedRules
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ConfigDescription* of length 0..unbounded.
    std::vector<tt__ConfigDescription* > RuleDescription                0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    tt__SupportedRulesExtension*         Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
/// class tt__SupportedRulesExtension operations:
/// - soap_new_tt__SupportedRulesExtension(soap*) allocate
/// - soap_new_tt__SupportedRulesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedRulesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedRulesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension*) deserialize from a stream
/// - int soap_write_tt__SupportedRulesExtension(soap, tt__SupportedRulesExtension*) serialize to a stream
class tt__SupportedRulesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
/// class tt__SupportedAnalyticsModules operations:
/// - soap_new_tt__SupportedAnalyticsModules(soap*) allocate
/// - soap_new_tt__SupportedAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules*) deserialize from a stream
/// - int soap_write_tt__SupportedAnalyticsModules(soap, tt__SupportedAnalyticsModules*) serialize to a stream
class tt__SupportedAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   If the analytics module descriptions reference types or elements of the ONVIF schema file,
///   the ONVIF schema file MUST be explicitly listed.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;
/// Vector of tt__ConfigDescription* of length 0..unbounded.
    std::vector<tt__ConfigDescription* > AnalyticsModuleDescription     0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
/// class tt__SupportedAnalyticsModulesExtension operations:
/// - soap_new_tt__SupportedAnalyticsModulesExtension(soap*) allocate
/// - soap_new_tt__SupportedAnalyticsModulesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedAnalyticsModulesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedAnalyticsModulesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension*) deserialize from a stream
/// - int soap_write_tt__SupportedAnalyticsModulesExtension(soap, tt__SupportedAnalyticsModulesExtension*) serialize to a stream
class tt__SupportedAnalyticsModulesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
///
/// class tt__PolygonConfiguration operations:
/// - soap_new_tt__PolygonConfiguration(soap*) allocate
/// - soap_new_tt__PolygonConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PolygonConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolygonConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration*) deserialize from a stream
/// - int soap_write_tt__PolygonConfiguration(soap, tt__PolygonConfiguration*) serialize to a stream
class tt__PolygonConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains Polygon configuration for rule parameters
/// </BLOCKQUOTE></PRE>
/// Element "Polygon" of XSD type "http://www.onvif.org/ver10/schema":Polygon.
    tt__Polygon*                         Polygon                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
/// class tt__PolylineArray operations:
/// - soap_new_tt__PolylineArray(soap*) allocate
/// - soap_new_tt__PolylineArray(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArray(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArray(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArray(soap*, tt__PolylineArray*) deserialize from a stream
/// - int soap_write_tt__PolylineArray(soap, tt__PolylineArray*) serialize to a stream
class tt__PolylineArray
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Polyline* of length 1..unbounded.
    std::vector<tt__Polyline*          > Segment                        1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    tt__PolylineArrayExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
/// class tt__PolylineArrayExtension operations:
/// - soap_new_tt__PolylineArrayExtension(soap*) allocate
/// - soap_new_tt__PolylineArrayExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArrayExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArrayExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension*) deserialize from a stream
/// - int soap_write_tt__PolylineArrayExtension(soap, tt__PolylineArrayExtension*) serialize to a stream
class tt__PolylineArrayExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
/// class tt__PolylineArrayConfiguration operations:
/// - soap_new_tt__PolylineArrayConfiguration(soap*) allocate
/// - soap_new_tt__PolylineArrayConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArrayConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArrayConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration*) deserialize from a stream
/// - int soap_write_tt__PolylineArrayConfiguration(soap, tt__PolylineArrayConfiguration*) serialize to a stream
class tt__PolylineArrayConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
/// Element "PolylineArray" of XSD type "http://www.onvif.org/ver10/schema":PolylineArray.
    tt__PolylineArray*                   PolylineArray                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
/// class tt__MotionExpression operations:
/// - soap_new_tt__MotionExpression(soap*) allocate
/// - soap_new_tt__MotionExpression(soap*, int num) allocate array
/// - soap_new_req_tt__MotionExpression(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MotionExpression(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MotionExpression(soap*, tt__MotionExpression*) deserialize from a stream
/// - int soap_write_tt__MotionExpression(soap, tt__MotionExpression*) serialize to a stream
class tt__MotionExpression
{ public:
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
/// Element "Expression" of XSD type xs:string.
    std::string                          Expression                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Type" of XSD type xs:string.
   @std::string*                         Type                           0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
/// class tt__MotionExpressionConfiguration operations:
/// - soap_new_tt__MotionExpressionConfiguration(soap*) allocate
/// - soap_new_tt__MotionExpressionConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MotionExpressionConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MotionExpressionConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration*) deserialize from a stream
/// - int soap_write_tt__MotionExpressionConfiguration(soap, tt__MotionExpressionConfiguration*) serialize to a stream
class tt__MotionExpressionConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
/// Element "MotionExpression" of XSD type "http://www.onvif.org/ver10/schema":MotionExpression.
    tt__MotionExpression*                MotionExpression               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
/// class tt__CellLayout operations:
/// - soap_new_tt__CellLayout(soap*) allocate
/// - soap_new_tt__CellLayout(soap*, int num) allocate array
/// - soap_new_req_tt__CellLayout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CellLayout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CellLayout(soap*, tt__CellLayout*) deserialize from a stream
/// - int soap_write_tt__CellLayout(soap, tt__CellLayout*) serialize to a stream
class tt__CellLayout
{ public:
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
/// Element "Transformation" of XSD type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Columns" of XSD type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
/// Attribute "Rows" of XSD type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
///
/// class tt__MetadataStream operations:
/// - soap_new_tt__MetadataStream(soap*) allocate
/// - soap_new_tt__MetadataStream(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataStream(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataStream(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataStream(soap*, tt__MetadataStream*) deserialize from a stream
/// - int soap_write_tt__MetadataStream(soap, tt__MetadataStream*) serialize to a stream
class tt__MetadataStream
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    class __tt__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _tt__union_MetadataStream selector: set to SOAP_UNION__tt__union_MetadataStream_<fieldname> or 0
    union _tt__union_MetadataStream
    {
/// Element "VideoAnalytics" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    tt__VideoAnalyticsStream*            VideoAnalytics                 1;	///< Required element.
/// Element "PTZ" of XSD type "http://www.onvif.org/ver10/schema":PTZStream.
    tt__PTZStream*                       PTZ                            1;	///< Required element.
/// Element "Event" of XSD type "http://www.onvif.org/ver10/schema":EventStream.
    tt__EventStream*                     Event                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    tt__MetadataStreamExtension*         Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
///
/// class tt__MetadataStreamExtension operations:
/// - soap_new_tt__MetadataStreamExtension(soap*) allocate
/// - soap_new_tt__MetadataStreamExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataStreamExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataStreamExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataStreamExtension(soap*, tt__MetadataStreamExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataStreamExtension(soap, tt__MetadataStreamExtension*) serialize to a stream
class tt__MetadataStreamExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
///
/// class tt__VideoAnalyticsStream operations:
/// - soap_new_tt__VideoAnalyticsStream(soap*) allocate
/// - soap_new_tt__VideoAnalyticsStream(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAnalyticsStream(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAnalyticsStream(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAnalyticsStream(soap*, tt__VideoAnalyticsStream*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsStream(soap, tt__VideoAnalyticsStream*) serialize to a stream
class tt__VideoAnalyticsStream
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    class __tt__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _tt__union_VideoAnalyticsStream selector: set to SOAP_UNION__tt__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in tt__VideoAnalyticsStream.
    union _tt__union_VideoAnalyticsStream
    {
/// Element "Frame" of XSD type "http://www.onvif.org/ver10/schema":Frame.
    tt__Frame*                           Frame                          1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    tt__VideoAnalyticsStreamExtension*   Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
///
/// class tt__VideoAnalyticsStreamExtension operations:
/// - soap_new_tt__VideoAnalyticsStreamExtension(soap*) allocate
/// - soap_new_tt__VideoAnalyticsStreamExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAnalyticsStreamExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAnalyticsStreamExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAnalyticsStreamExtension(soap*, tt__VideoAnalyticsStreamExtension*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsStreamExtension(soap, tt__VideoAnalyticsStreamExtension*) serialize to a stream
class tt__VideoAnalyticsStreamExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
///
/// class tt__PTZStream operations:
/// - soap_new_tt__PTZStream(soap*) allocate
/// - soap_new_tt__PTZStream(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStream(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStream(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStream(soap*, tt__PTZStream*) deserialize from a stream
/// - int soap_write_tt__PTZStream(soap, tt__PTZStream*) serialize to a stream
class tt__PTZStream
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    class __tt__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _tt__union_PTZStream selector: set to SOAP_UNION__tt__union_PTZStream_<fieldname> or 0
/// Union for choice in tt__PTZStream.
    union _tt__union_PTZStream
    {
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    tt__PTZStreamExtension*              Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
///
/// class tt__PTZStreamExtension operations:
/// - soap_new_tt__PTZStreamExtension(soap*) allocate
/// - soap_new_tt__PTZStreamExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStreamExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStreamExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStreamExtension(soap*, tt__PTZStreamExtension*) deserialize from a stream
/// - int soap_write_tt__PTZStreamExtension(soap, tt__PTZStreamExtension*) serialize to a stream
class tt__PTZStreamExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventStream is a complexType.
///
/// class tt__EventStream operations:
/// - soap_new_tt__EventStream(soap*) allocate
/// - soap_new_tt__EventStream(soap*, int num) allocate array
/// - soap_new_req_tt__EventStream(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventStream(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventStream(soap*, tt__EventStream*) deserialize from a stream
/// - int soap_write_tt__EventStream(soap, tt__EventStream*) serialize to a stream
class tt__EventStream
{ public:
//  BEGIN CHOICE <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    class __tt__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _tt__union_EventStream selector: set to SOAP_UNION__tt__union_EventStream_<fieldname> or 0
/// Union for choice in tt__EventStream.
    union _tt__union_EventStream
    {
/// Element reference "http://www.onvif.org/ver10/schema:""http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      1;	///< Required element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    tt__EventStreamExtension*            Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
///
/// class tt__EventStreamExtension operations:
/// - soap_new_tt__EventStreamExtension(soap*) allocate
/// - soap_new_tt__EventStreamExtension(soap*, int num) allocate array
/// - soap_new_req_tt__EventStreamExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventStreamExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventStreamExtension(soap*, tt__EventStreamExtension*) deserialize from a stream
/// - int soap_write_tt__EventStreamExtension(soap, tt__EventStreamExtension*) serialize to a stream
class tt__EventStreamExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
/// class tt__PaneConfiguration operations:
/// - soap_new_tt__PaneConfiguration(soap*) allocate
/// - soap_new_tt__PaneConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PaneConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneConfiguration(soap*, tt__PaneConfiguration*) deserialize from a stream
/// - int soap_write_tt__PaneConfiguration(soap, tt__PaneConfiguration*) serialize to a stream
class tt__PaneConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
/// Element "PaneName" of XSD type xs:string.
    std::string*                         PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioOutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
/// Element "AudioSourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncoderConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
/// Element "ReceiverToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
/// class tt__PaneLayout operations:
/// - soap_new_tt__PaneLayout(soap*) allocate
/// - soap_new_tt__PaneLayout(soap*, int num) allocate array
/// - soap_new_req_tt__PaneLayout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneLayout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneLayout(soap*, tt__PaneLayout*) deserialize from a stream
/// - int soap_write_tt__PaneLayout(soap, tt__PaneLayout*) serialize to a stream
class tt__PaneLayout
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
/// Element "Pane" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Element "Area" of XSD type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Area                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
/// class tt__Layout operations:
/// - soap_new_tt__Layout(soap*) allocate
/// - soap_new_tt__Layout(soap*, int num) allocate array
/// - soap_new_req_tt__Layout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Layout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Layout(soap*, tt__Layout*) deserialize from a stream
/// - int soap_write_tt__Layout(soap, tt__Layout*) serialize to a stream
class tt__Layout
{ public:
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PaneLayout* of length 1..unbounded.
    std::vector<tt__PaneLayout*        > PaneLayout                     1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutExtension.
    tt__LayoutExtension*                 Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
/// class tt__LayoutExtension operations:
/// - soap_new_tt__LayoutExtension(soap*) allocate
/// - soap_new_tt__LayoutExtension(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutExtension(soap*, tt__LayoutExtension*) deserialize from a stream
/// - int soap_write_tt__LayoutExtension(soap, tt__LayoutExtension*) serialize to a stream
class tt__LayoutExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
/// class tt__CodingCapabilities operations:
/// - soap_new_tt__CodingCapabilities(soap*) allocate
/// - soap_new_tt__CodingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__CodingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CodingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CodingCapabilities(soap*, tt__CodingCapabilities*) deserialize from a stream
/// - int soap_write_tt__CodingCapabilities(soap, tt__CodingCapabilities*) serialize to a stream
class tt__CodingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "AudioEncodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
/// Element "AudioDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
/// Element "VideoDecodingCapabilities" of XSD type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
/// class tt__LayoutOptions operations:
/// - soap_new_tt__LayoutOptions(soap*) allocate
/// - soap_new_tt__LayoutOptions(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutOptions(soap*, tt__LayoutOptions*) deserialize from a stream
/// - int soap_write_tt__LayoutOptions(soap, tt__LayoutOptions*) serialize to a stream
class tt__LayoutOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
/// Vector of tt__PaneLayoutOptions* of length 1..unbounded.
    std::vector<tt__PaneLayoutOptions* > PaneLayoutOptions              1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    tt__LayoutOptionsExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
/// class tt__LayoutOptionsExtension operations:
/// - soap_new_tt__LayoutOptionsExtension(soap*) allocate
/// - soap_new_tt__LayoutOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__LayoutOptionsExtension(soap, tt__LayoutOptionsExtension*) serialize to a stream
class tt__LayoutOptionsExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
/// class tt__PaneLayoutOptions operations:
/// - soap_new_tt__PaneLayoutOptions(soap*) allocate
/// - soap_new_tt__PaneLayoutOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PaneLayoutOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneLayoutOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions*) deserialize from a stream
/// - int soap_write_tt__PaneLayoutOptions(soap, tt__PaneLayoutOptions*) serialize to a stream
class tt__PaneLayoutOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Rectangle* of length 1..unbounded.
    std::vector<tt__Rectangle*         > Area                           1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    tt__PaneOptionExtension*             Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
/// class tt__PaneOptionExtension operations:
/// - soap_new_tt__PaneOptionExtension(soap*) allocate
/// - soap_new_tt__PaneOptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PaneOptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneOptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension*) deserialize from a stream
/// - int soap_write_tt__PaneOptionExtension(soap, tt__PaneOptionExtension*) serialize to a stream
class tt__PaneOptionExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
/// class tt__Receiver operations:
/// - soap_new_tt__Receiver(soap*) allocate
/// - soap_new_tt__Receiver(soap*, int num) allocate array
/// - soap_new_req_tt__Receiver(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Receiver(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Receiver(soap*, tt__Receiver*) deserialize from a stream
/// - int soap_write_tt__Receiver(soap, tt__Receiver*) serialize to a stream
class tt__Receiver
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
/// class tt__ReceiverConfiguration operations:
/// - soap_new_tt__ReceiverConfiguration(soap*) allocate
/// - soap_new_tt__ReceiverConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration*) deserialize from a stream
/// - int soap_write_tt__ReceiverConfiguration(soap, tt__ReceiverConfiguration*) serialize to a stream
class tt__ReceiverConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
/// class tt__ReceiverStateInformation operations:
/// - soap_new_tt__ReceiverStateInformation(soap*) allocate
/// - soap_new_tt__ReceiverStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation*) deserialize from a stream
/// - int soap_write_tt__ReceiverStateInformation(soap, tt__ReceiverStateInformation*) serialize to a stream
class tt__ReceiverStateInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreated" of XSD type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
/// class tt__SourceReference operations:
/// - soap_new_tt__SourceReference(soap*) allocate
/// - soap_new_tt__SourceReference(soap*, int num) allocate array
/// - soap_new_req_tt__SourceReference(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceReference(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceReference(soap*, tt__SourceReference*) deserialize from a stream
/// - int soap_write_tt__SourceReference(soap, tt__SourceReference*) serialize to a stream
class tt__SourceReference
{ public:
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Type" of XSD type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default attribute value="http://www.onvif.org/ver10/schema/Receiver".
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// class tt__DateTimeRange operations:
/// - soap_new_tt__DateTimeRange(soap*) allocate
/// - soap_new_tt__DateTimeRange(soap*, int num) allocate array
/// - soap_new_req_tt__DateTimeRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DateTimeRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DateTimeRange(soap*, tt__DateTimeRange*) deserialize from a stream
/// - int soap_write_tt__DateTimeRange(soap, tt__DateTimeRange*) serialize to a stream
class tt__DateTimeRange
{ public:
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
/// class tt__RecordingSummary operations:
/// - soap_new_tt__RecordingSummary(soap*) allocate
/// - soap_new_tt__RecordingSummary(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingSummary(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingSummary(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingSummary(soap*, tt__RecordingSummary*) deserialize from a stream
/// - int soap_write_tt__RecordingSummary(soap, tt__RecordingSummary*) serialize to a stream
class tt__RecordingSummary
{ public:
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
/// Element "DataUntil" of XSD type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
/// Element "NumberRecordings" of XSD type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
/// class tt__SearchScope operations:
/// - soap_new_tt__SearchScope(soap*) allocate
/// - soap_new_tt__SearchScope(soap*, int num) allocate array
/// - soap_new_req_tt__SearchScope(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchScope(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchScope(soap*, tt__SearchScope*) deserialize from a stream
/// - int soap_write_tt__SearchScope(soap, tt__SearchScope*) serialize to a stream
class tt__SearchScope
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__SourceReference* of length 0..unbounded.
    std::vector<tt__SourceReference*   > IncludedSources                0;
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__RecordingReference of length 0..unbounded.
    std::vector<tt__RecordingReference > IncludedRecordings             0;
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingInformationFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression*                 RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    tt__SearchScopeExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
/// class tt__SearchScopeExtension operations:
/// - soap_new_tt__SearchScopeExtension(soap*) allocate
/// - soap_new_tt__SearchScopeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SearchScopeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchScopeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension*) deserialize from a stream
/// - int soap_write_tt__SearchScopeExtension(soap, tt__SearchScopeExtension*) serialize to a stream
class tt__SearchScopeExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
/// class tt__PTZPositionFilter operations:
/// - soap_new_tt__PTZPositionFilter(soap*) allocate
/// - soap_new_tt__PTZPositionFilter(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPositionFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPositionFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter*) deserialize from a stream
/// - int soap_write_tt__PTZPositionFilter(soap, tt__PTZPositionFilter*) serialize to a stream
class tt__PTZPositionFilter
{ public:
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MinPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
/// Element "MaxPosition" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
/// Element "EnterOrExit" of XSD type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
/// class tt__MetadataFilter operations:
/// - soap_new_tt__MetadataFilter(soap*) allocate
/// - soap_new_tt__MetadataFilter(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataFilter(soap*, tt__MetadataFilter*) deserialize from a stream
/// - int soap_write_tt__MetadataFilter(soap, tt__MetadataFilter*) serialize to a stream
class tt__MetadataFilter
{ public:
/// Element "MetadataStreamFilter" of XSD type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
/// class tt__FindRecordingResultList operations:
/// - soap_new_tt__FindRecordingResultList(soap*) allocate
/// - soap_new_tt__FindRecordingResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindRecordingResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindRecordingResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList*) deserialize from a stream
/// - int soap_write_tt__FindRecordingResultList(soap, tt__FindRecordingResultList*) serialize to a stream
class tt__FindRecordingResultList
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__RecordingInformation* of length 0..unbounded.
    std::vector<tt__RecordingInformation*> RecordingInformation           0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
/// class tt__FindEventResultList operations:
/// - soap_new_tt__FindEventResultList(soap*) allocate
/// - soap_new_tt__FindEventResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindEventResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindEventResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindEventResultList(soap*, tt__FindEventResultList*) deserialize from a stream
/// - int soap_write_tt__FindEventResultList(soap, tt__FindEventResultList*) serialize to a stream
class tt__FindEventResultList
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__FindEventResult* of length 0..unbounded.
    std::vector<tt__FindEventResult*   > Result                         0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
/// class tt__FindEventResult operations:
/// - soap_new_tt__FindEventResult(soap*) allocate
/// - soap_new_tt__FindEventResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindEventResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindEventResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindEventResult(soap*, tt__FindEventResult*) deserialize from a stream
/// - int soap_write_tt__FindEventResult(soap, tt__FindEventResult*) serialize to a stream
class tt__FindEventResult
{ public:
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
/// Element "Event" of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
/// Element "StartStateEvent" of XSD type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
/// class tt__FindPTZPositionResultList operations:
/// - soap_new_tt__FindPTZPositionResultList(soap*) allocate
/// - soap_new_tt__FindPTZPositionResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindPTZPositionResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindPTZPositionResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList*) deserialize from a stream
/// - int soap_write_tt__FindPTZPositionResultList(soap, tt__FindPTZPositionResultList*) serialize to a stream
class tt__FindPTZPositionResultList
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__FindPTZPositionResult* of length 0..unbounded.
    std::vector<tt__FindPTZPositionResult*> Result                         0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
/// class tt__FindPTZPositionResult operations:
/// - soap_new_tt__FindPTZPositionResult(soap*) allocate
/// - soap_new_tt__FindPTZPositionResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindPTZPositionResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindPTZPositionResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult*) deserialize from a stream
/// - int soap_write_tt__FindPTZPositionResult(soap, tt__FindPTZPositionResult*) serialize to a stream
class tt__FindPTZPositionResult
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
/// Element "Position" of XSD type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
/// class tt__FindMetadataResultList operations:
/// - soap_new_tt__FindMetadataResultList(soap*) allocate
/// - soap_new_tt__FindMetadataResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindMetadataResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindMetadataResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList*) deserialize from a stream
/// - int soap_write_tt__FindMetadataResultList(soap, tt__FindMetadataResultList*) serialize to a stream
class tt__FindMetadataResultList
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
/// Element "SearchState" of XSD type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__FindMetadataResult* of length 0..unbounded.
    std::vector<tt__FindMetadataResult*> Result                         0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
/// class tt__FindMetadataResult operations:
/// - soap_new_tt__FindMetadataResult(soap*) allocate
/// - soap_new_tt__FindMetadataResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindMetadataResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindMetadataResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindMetadataResult(soap*, tt__FindMetadataResult*) deserialize from a stream
/// - int soap_write_tt__FindMetadataResult(soap, tt__FindMetadataResult*) serialize to a stream
class tt__FindMetadataResult
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
/// Element "Time" of XSD type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
/// class tt__RecordingInformation operations:
/// - soap_new_tt__RecordingInformation(soap*) allocate
/// - soap_new_tt__RecordingInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingInformation(soap*, tt__RecordingInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingInformation(soap, tt__RecordingInformation*) serialize to a stream
class tt__RecordingInformation
{ public:
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// Element "EarliestRecording" of XSD type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of XSD type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__TrackInformation* of length 0..unbounded.
    std::vector<tt__TrackInformation*  > Track                          0;
/// Element "RecordingStatus" of XSD type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
/// class tt__RecordingSourceInformation operations:
/// - soap_new_tt__RecordingSourceInformation(soap*) allocate
/// - soap_new_tt__RecordingSourceInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingSourceInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingSourceInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingSourceInformation(soap, tt__RecordingSourceInformation*) serialize to a stream
class tt__RecordingSourceInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "SourceId" of XSD type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
/// Element "Location" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Address" of XSD type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
/// class tt__TrackInformation operations:
/// - soap_new_tt__TrackInformation(soap*) allocate
/// - soap_new_tt__TrackInformation(soap*, int num) allocate array
/// - soap_new_req_tt__TrackInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackInformation(soap*, tt__TrackInformation*) deserialize from a stream
/// - int soap_write_tt__TrackInformation(soap, tt__TrackInformation*) serialize to a stream
class tt__TrackInformation
{ public:
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataFrom" of XSD type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
/// Element "DataTo" of XSD type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
/// class tt__MediaAttributes operations:
/// - soap_new_tt__MediaAttributes(soap*) allocate
/// - soap_new_tt__MediaAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__MediaAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaAttributes(soap*, tt__MediaAttributes*) deserialize from a stream
/// - int soap_write_tt__MediaAttributes(soap, tt__MediaAttributes*) serialize to a stream
class tt__MediaAttributes
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__TrackAttributes* of length 0..unbounded.
    std::vector<tt__TrackAttributes*   > TrackAttributes                0;
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
/// Element "From" of XSD type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
/// Element "Until" of XSD type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
/// class tt__TrackAttributes operations:
/// - soap_new_tt__TrackAttributes(soap*) allocate
/// - soap_new_tt__TrackAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__TrackAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackAttributes(soap*, tt__TrackAttributes*) deserialize from a stream
/// - int soap_write_tt__TrackAttributes(soap, tt__TrackAttributes*) serialize to a stream
class tt__TrackAttributes
{ public:
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
/// Element "TrackInformation" of XSD type "http://www.onvif.org/ver10/schema":TrackInformation.
    tt__TrackInformation*                TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
/// Element "VideoAttributes" of XSD type "http://www.onvif.org/ver10/schema":VideoAttributes.
    tt__VideoAttributes*                 VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
/// Element "AudioAttributes" of XSD type "http://www.onvif.org/ver10/schema":AudioAttributes.
    tt__AudioAttributes*                 AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
/// Element "MetadataAttributes" of XSD type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    tt__MetadataAttributes*              MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    tt__TrackAttributesExtension*        Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
/// class tt__TrackAttributesExtension operations:
/// - soap_new_tt__TrackAttributesExtension(soap*) allocate
/// - soap_new_tt__TrackAttributesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__TrackAttributesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackAttributesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension*) deserialize from a stream
/// - int soap_write_tt__TrackAttributesExtension(soap, tt__TrackAttributesExtension*) serialize to a stream
class tt__TrackAttributesExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
/// class tt__VideoAttributes operations:
/// - soap_new_tt__VideoAttributes(soap*) allocate
/// - soap_new_tt__VideoAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAttributes(soap*, tt__VideoAttributes*) deserialize from a stream
/// - int soap_write_tt__VideoAttributes(soap, tt__VideoAttributes*) serialize to a stream
class tt__VideoAttributes
{ public:
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Width" of XSD type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
/// Element "Height" of XSD type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
/// class tt__AudioAttributes operations:
/// - soap_new_tt__AudioAttributes(soap*) allocate
/// - soap_new_tt__AudioAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__AudioAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioAttributes(soap*, tt__AudioAttributes*) deserialize from a stream
/// - int soap_write_tt__AudioAttributes(soap, tt__AudioAttributes*) serialize to a stream
class tt__AudioAttributes
{ public:
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "Samplerate" of XSD type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
/// class tt__MetadataAttributes operations:
/// - soap_new_tt__MetadataAttributes(soap*) allocate
/// - soap_new_tt__MetadataAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataAttributes(soap*, tt__MetadataAttributes*) deserialize from a stream
/// - int soap_write_tt__MetadataAttributes(soap, tt__MetadataAttributes*) serialize to a stream
class tt__MetadataAttributes
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainPTZ" of XSD type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainAnalytics" of XSD type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
/// Element "CanContainNotifications" of XSD type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
/// class tt__RecordingConfiguration operations:
/// - soap_new_tt__RecordingConfiguration(soap*) allocate
/// - soap_new_tt__RecordingConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration*) deserialize from a stream
/// - int soap_write_tt__RecordingConfiguration(soap, tt__RecordingConfiguration*) serialize to a stream
class tt__RecordingConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
/// Element "Content" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumRetentionTime" of XSD type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
/// class tt__TrackConfiguration operations:
/// - soap_new_tt__TrackConfiguration(soap*) allocate
/// - soap_new_tt__TrackConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__TrackConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackConfiguration(soap*, tt__TrackConfiguration*) deserialize from a stream
/// - int soap_write_tt__TrackConfiguration(soap, tt__TrackConfiguration*) serialize to a stream
class tt__TrackConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
/// Element "TrackType" of XSD type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Description" of XSD type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
/// class tt__GetRecordingsResponseItem operations:
/// - soap_new_tt__GetRecordingsResponseItem(soap*) allocate
/// - soap_new_tt__GetRecordingsResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetRecordingsResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetRecordingsResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetRecordingsResponseItem(soap, tt__GetRecordingsResponseItem*) serialize to a stream
class tt__GetRecordingsResponseItem
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    tt__GetTracksResponseList*           Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
/// class tt__GetTracksResponseList operations:
/// - soap_new_tt__GetTracksResponseList(soap*) allocate
/// - soap_new_tt__GetTracksResponseList(soap*, int num) allocate array
/// - soap_new_req_tt__GetTracksResponseList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetTracksResponseList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList*) deserialize from a stream
/// - int soap_write_tt__GetTracksResponseList(soap, tt__GetTracksResponseList*) serialize to a stream
class tt__GetTracksResponseList
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__GetTracksResponseItem* of length 0..unbounded.
    std::vector<tt__GetTracksResponseItem*> Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
/// class tt__GetTracksResponseItem operations:
/// - soap_new_tt__GetTracksResponseItem(soap*) allocate
/// - soap_new_tt__GetTracksResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetTracksResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetTracksResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetTracksResponseItem(soap, tt__GetTracksResponseItem*) serialize to a stream
class tt__GetTracksResponseItem
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
/// Element "TrackToken" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              Configuration                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
/// class tt__RecordingJobConfiguration operations:
/// - soap_new_tt__RecordingJobConfiguration(soap*) allocate
/// - soap_new_tt__RecordingJobConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration*) deserialize from a stream
/// - int soap_write_tt__RecordingJobConfiguration(soap, tt__RecordingJobConfiguration*) serialize to a stream
class tt__RecordingJobConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a positive number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
/// Element "Priority" of XSD type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__RecordingJobSource* of length 0..unbounded.
    std::vector<tt__RecordingJobSource*> Source                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
/// class tt__RecordingJobConfigurationExtension operations:
/// - soap_new_tt__RecordingJobConfigurationExtension(soap*) allocate
/// - soap_new_tt__RecordingJobConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobConfigurationExtension(soap, tt__RecordingJobConfigurationExtension*) serialize to a stream
class tt__RecordingJobConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
/// class tt__RecordingJobSource operations:
/// - soap_new_tt__RecordingJobSource(soap*) allocate
/// - soap_new_tt__RecordingJobSource(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobSource(soap*, tt__RecordingJobSource*) deserialize from a stream
/// - int soap_write_tt__RecordingJobSource(soap, tt__RecordingJobSource*) serialize to a stream
class tt__RecordingJobSource
{ public:
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
/// Element "AutoCreateReceiver" of XSD type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__RecordingJobTrack* of length 0..unbounded.
    std::vector<tt__RecordingJobTrack* > Tracks                         0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    tt__RecordingJobSourceExtension*     Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
/// class tt__RecordingJobSourceExtension operations:
/// - soap_new_tt__RecordingJobSourceExtension(soap*) allocate
/// - soap_new_tt__RecordingJobSourceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobSourceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobSourceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobSourceExtension(soap, tt__RecordingJobSourceExtension*) serialize to a stream
class tt__RecordingJobSourceExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
/// class tt__RecordingJobTrack operations:
/// - soap_new_tt__RecordingJobTrack(soap*) allocate
/// - soap_new_tt__RecordingJobTrack(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobTrack(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobTrack(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack*) deserialize from a stream
/// - int soap_write_tt__RecordingJobTrack(soap, tt__RecordingJobTrack*) serialize to a stream
class tt__RecordingJobTrack
{ public:
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
/// class tt__RecordingJobStateInformation operations:
/// - soap_new_tt__RecordingJobStateInformation(soap*) allocate
/// - soap_new_tt__RecordingJobStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateInformation(soap, tt__RecordingJobStateInformation*) serialize to a stream
class tt__RecordingJobStateInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
/// Element "RecordingToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__RecordingJobStateSource* of length 0..unbounded.
    std::vector<tt__RecordingJobStateSource*> Sources                        0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
/// class tt__RecordingJobStateInformationExtension operations:
/// - soap_new_tt__RecordingJobStateInformationExtension(soap*) allocate
/// - soap_new_tt__RecordingJobStateInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateInformationExtension(soap, tt__RecordingJobStateInformationExtension*) serialize to a stream
class tt__RecordingJobStateInformationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
/// class tt__RecordingJobStateSource operations:
/// - soap_new_tt__RecordingJobStateSource(soap*) allocate
/// - soap_new_tt__RecordingJobStateSource(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateSource(soap, tt__RecordingJobStateSource*) serialize to a stream
class tt__RecordingJobStateSource
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
/// Element "Tracks" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    tt__RecordingJobStateTracks*         Tracks                         1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
/// class tt__RecordingJobStateTracks operations:
/// - soap_new_tt__RecordingJobStateTracks(soap*) allocate
/// - soap_new_tt__RecordingJobStateTracks(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateTracks(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateTracks(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateTracks(soap, tt__RecordingJobStateTracks*) serialize to a stream
class tt__RecordingJobStateTracks
{ public:
/// Vector of tt__RecordingJobStateTrack* of length 0..unbounded.
    std::vector<tt__RecordingJobStateTrack*> Track                          0;
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
/// class tt__RecordingJobStateTrack operations:
/// - soap_new_tt__RecordingJobStateTrack(soap*) allocate
/// - soap_new_tt__RecordingJobStateTrack(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateTrack(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateTrack(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateTrack(soap, tt__RecordingJobStateTrack*) serialize to a stream
class tt__RecordingJobStateTrack
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
/// Element "SourceTag" of XSD type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
/// Element "Destination" of XSD type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
/// Element "Error" of XSD type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
/// class tt__GetRecordingJobsResponseItem operations:
/// - soap_new_tt__GetRecordingJobsResponseItem(soap*) allocate
/// - soap_new_tt__GetRecordingJobsResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetRecordingJobsResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetRecordingJobsResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetRecordingJobsResponseItem(soap, tt__GetRecordingJobsResponseItem*) serialize to a stream
class tt__GetRecordingJobsResponseItem
{ public:
/// Element "JobToken" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
/// class tt__ReplayConfiguration operations:
/// - soap_new_tt__ReplayConfiguration(soap*) allocate
/// - soap_new_tt__ReplayConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__ReplayConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReplayConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration*) deserialize from a stream
/// - int soap_write_tt__ReplayConfiguration(soap, tt__ReplayConfiguration*) serialize to a stream
class tt__ReplayConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
/// class tt__AnalyticsDeviceEngineConfiguration operations:
/// - soap_new_tt__AnalyticsDeviceEngineConfiguration(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceEngineConfiguration(soap, tt__AnalyticsDeviceEngineConfiguration*) serialize to a stream
class tt__AnalyticsDeviceEngineConfiguration
{ public:
/// Vector of tt__EngineConfiguration* of length 1..unbounded.
    std::vector<tt__EngineConfiguration*> EngineConfiguration            1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
/// class tt__AnalyticsDeviceEngineConfigurationExtension operations:
/// - soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(soap, tt__AnalyticsDeviceEngineConfigurationExtension*) serialize to a stream
class tt__AnalyticsDeviceEngineConfigurationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
/// class tt__EngineConfiguration operations:
/// - soap_new_tt__EngineConfiguration(soap*) allocate
/// - soap_new_tt__EngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__EngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EngineConfiguration(soap*, tt__EngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__EngineConfiguration(soap, tt__EngineConfiguration*) serialize to a stream
class tt__EngineConfiguration
{ public:
/// Element "VideoAnalyticsConfiguration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    tt__AnalyticsEngineInputInfo*        AnalyticsEngineInputInfo       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
/// class tt__AnalyticsEngineInputInfo operations:
/// - soap_new_tt__AnalyticsEngineInputInfo(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInputInfo(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInputInfo(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInputInfo(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInputInfo(soap, tt__AnalyticsEngineInputInfo*) serialize to a stream
class tt__AnalyticsEngineInputInfo
{ public:
/// Element "InputInfo" of XSD type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          InputInfo                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
/// class tt__AnalyticsEngineInputInfoExtension operations:
/// - soap_new_tt__AnalyticsEngineInputInfoExtension(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInputInfoExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInputInfoExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInputInfoExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInputInfoExtension(soap, tt__AnalyticsEngineInputInfoExtension*) serialize to a stream
class tt__AnalyticsEngineInputInfoExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
/// class tt__SourceIdentification operations:
/// - soap_new_tt__SourceIdentification(soap*) allocate
/// - soap_new_tt__SourceIdentification(soap*, int num) allocate array
/// - soap_new_req_tt__SourceIdentification(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceIdentification(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceIdentification(soap*, tt__SourceIdentification*) deserialize from a stream
/// - int soap_write_tt__SourceIdentification(soap, tt__SourceIdentification*) serialize to a stream
class tt__SourceIdentification
{ public:
/// Element "Name" of XSD type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > Token                          1;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    tt__SourceIdentificationExtension*   Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
/// class tt__SourceIdentificationExtension operations:
/// - soap_new_tt__SourceIdentificationExtension(soap*) allocate
/// - soap_new_tt__SourceIdentificationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SourceIdentificationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceIdentificationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension*) deserialize from a stream
/// - int soap_write_tt__SourceIdentificationExtension(soap, tt__SourceIdentificationExtension*) serialize to a stream
class tt__SourceIdentificationExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
/// class tt__MetadataInput operations:
/// - soap_new_tt__MetadataInput(soap*) allocate
/// - soap_new_tt__MetadataInput(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataInput(soap*, tt__MetadataInput*) deserialize from a stream
/// - int soap_write_tt__MetadataInput(soap, tt__MetadataInput*) serialize to a stream
class tt__MetadataInput
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > MetadataConfig                 0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    tt__MetadataInputExtension*          Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
/// class tt__MetadataInputExtension operations:
/// - soap_new_tt__MetadataInputExtension(soap*) allocate
/// - soap_new_tt__MetadataInputExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataInputExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataInputExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataInputExtension(soap, tt__MetadataInputExtension*) serialize to a stream
class tt__MetadataInputExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
/// class tt__AnalyticsStateInformation operations:
/// - soap_new_tt__AnalyticsStateInformation(soap*) allocate
/// - soap_new_tt__AnalyticsStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation*) deserialize from a stream
/// - int soap_write_tt__AnalyticsStateInformation(soap, tt__AnalyticsStateInformation*) serialize to a stream
class tt__AnalyticsStateInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
/// Element "AnalyticsEngineControlToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsState.
    tt__AnalyticsState*                  State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
/// class tt__AnalyticsState operations:
/// - soap_new_tt__AnalyticsState(soap*) allocate
/// - soap_new_tt__AnalyticsState(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsState(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsState(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsState(soap*, tt__AnalyticsState*) deserialize from a stream
/// - int soap_write_tt__AnalyticsState(soap, tt__AnalyticsState*) serialize to a stream
class tt__AnalyticsState
{ public:
/// Element "Error" of XSD type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element "State" of XSD type xs:string.
    std::string                          State                          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
/// class tt__ActionEngineEventPayload operations:
/// - soap_new_tt__ActionEngineEventPayload(soap*) allocate
/// - soap_new_tt__ActionEngineEventPayload(soap*, int num) allocate array
/// - soap_new_req_tt__ActionEngineEventPayload(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ActionEngineEventPayload(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload*) deserialize from a stream
/// - int soap_write_tt__ActionEngineEventPayload(soap, tt__ActionEngineEventPayload*) serialize to a stream
class tt__ActionEngineEventPayload
{ public:
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
/// Element "RequestInfo" of XSD type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
/// Element "ResponseInfo" of XSD type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
/// class tt__ActionEngineEventPayloadExtension operations:
/// - soap_new_tt__ActionEngineEventPayloadExtension(soap*) allocate
/// - soap_new_tt__ActionEngineEventPayloadExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ActionEngineEventPayloadExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ActionEngineEventPayloadExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension*) deserialize from a stream
/// - int soap_write_tt__ActionEngineEventPayloadExtension(soap, tt__ActionEngineEventPayloadExtension*) serialize to a stream
class tt__ActionEngineEventPayloadExtension
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
/// class _tt__Message operations:
/// - soap_new__tt__Message(soap*) allocate
/// - soap_new__tt__Message(soap*, int num) allocate array
/// - soap_new_req__tt__Message(soap*, ...) allocate, set required members
/// - soap_new_set__tt__Message(soap*, ...) allocate, set all public members
/// - int soap_read__tt__Message(soap*, _tt__Message*) deserialize from a stream
/// - int soap_write__tt__Message(soap, _tt__Message*) serialize to a stream
class _tt__Message
{ public:
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
/// Element "Source" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Source                         0;	///< Optional element.
/// Element "Key" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Key                            0;	///< Optional element.
/// Element "Data" of XSD type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Data                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MessageExtension.
    tt__MessageExtension*                Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of XSD type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of XSD type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// class wsnt__QueryExpressionType operations:
/// - soap_new_wsnt__QueryExpressionType(soap*) allocate
/// - soap_new_wsnt__QueryExpressionType(soap*, int num) allocate array
/// - soap_new_req_wsnt__QueryExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__QueryExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__QueryExpressionType(soap, wsnt__QueryExpressionType*) serialize to a stream
class wsnt__QueryExpressionType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// class wsnt__TopicExpressionType operations:
/// - soap_new_wsnt__TopicExpressionType(soap*) allocate
/// - soap_new_wsnt__TopicExpressionType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionType(soap, wsnt__TopicExpressionType*) serialize to a stream
class wsnt__TopicExpressionType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// class wsnt__FilterType operations:
/// - soap_new_wsnt__FilterType(soap*) allocate
/// - soap_new_wsnt__FilterType(soap*, int num) allocate array
/// - soap_new_req_wsnt__FilterType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__FilterType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__FilterType(soap*, wsnt__FilterType*) deserialize from a stream
/// - int soap_write_wsnt__FilterType(soap, wsnt__FilterType*) serialize to a stream
class wsnt__FilterType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// class wsnt__SubscriptionPolicyType operations:
/// - soap_new_wsnt__SubscriptionPolicyType(soap*) allocate
/// - soap_new_wsnt__SubscriptionPolicyType(soap*, int num) allocate array
/// - soap_new_req_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) deserialize from a stream
/// - int soap_write_wsnt__SubscriptionPolicyType(soap, wsnt__SubscriptionPolicyType*) serialize to a stream
class wsnt__SubscriptionPolicyType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// class wsnt__NotificationMessageHolderType operations:
/// - soap_new_wsnt__NotificationMessageHolderType(soap*) allocate
/// - soap_new_wsnt__NotificationMessageHolderType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) deserialize from a stream
/// - int soap_write_wsnt__NotificationMessageHolderType(soap, wsnt__NotificationMessageHolderType*) serialize to a stream
class wsnt__NotificationMessageHolderType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnt__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// class _wsnt__NotificationMessageHolderType_Message operations:
/// - soap_new__wsnt__NotificationMessageHolderType_Message(soap*) allocate
/// - soap_new__wsnt__NotificationMessageHolderType_Message(soap*, int num) allocate array
/// - soap_new_req__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a stream
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(soap, _wsnt__NotificationMessageHolderType_Message*) serialize to a stream
    class _wsnt__NotificationMessageHolderType_Message
    {
/// @todo <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                    Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// class _wsnt__NotificationProducerRP operations:
/// - soap_new__wsnt__NotificationProducerRP(soap*) allocate
/// - soap_new__wsnt__NotificationProducerRP(soap*, int num) allocate array
/// - soap_new_req__wsnt__NotificationProducerRP(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__NotificationProducerRP(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) deserialize from a stream
/// - int soap_write__wsnt__NotificationProducerRP(soap, _wsnt__NotificationProducerRP*) serialize to a stream
class _wsnt__NotificationProducerRP
{ public:
/// Vector of wsnt__TopicExpressionType* element refs of length 0..unbounded.
    std::vector<wsnt__TopicExpressionType*> TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0;	///< Optional element.
/// Vector of xsd__anyURI element refs of length 0..unbounded.
    std::vector<xsd__anyURI            > TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// class _wsnt__SubscriptionManagerRP operations:
/// - soap_new__wsnt__SubscriptionManagerRP(soap*) allocate
/// - soap_new__wsnt__SubscriptionManagerRP(soap*, int num) allocate array
/// - soap_new_req__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) deserialize from a stream
/// - int soap_write__wsnt__SubscriptionManagerRP(soap, _wsnt__SubscriptionManagerRP*) serialize to a stream
class _wsnt__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnt__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// class _wsnt__Notify operations:
/// - soap_new__wsnt__Notify(soap*) allocate
/// - soap_new__wsnt__Notify(soap*, int num) allocate array
/// - soap_new_req__wsnt__Notify(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Notify(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Notify(soap*, _wsnt__Notify*) deserialize from a stream
/// - int soap_write__wsnt__Notify(soap, _wsnt__Notify*) serialize to a stream
class _wsnt__Notify
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 1..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// class _wsnt__UseRaw operations:
/// - soap_new__wsnt__UseRaw(soap*) allocate
/// - soap_new__wsnt__UseRaw(soap*, int num) allocate array
/// - soap_new_req__wsnt__UseRaw(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__UseRaw(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__UseRaw(soap*, _wsnt__UseRaw*) deserialize from a stream
/// - int soap_write__wsnt__UseRaw(soap, _wsnt__UseRaw*) serialize to a stream
class _wsnt__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// class _wsnt__Subscribe operations:
/// - soap_new__wsnt__Subscribe(soap*) allocate
/// - soap_new__wsnt__Subscribe(soap*, int num) allocate array
/// - soap_new_req__wsnt__Subscribe(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Subscribe(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Subscribe(soap*, _wsnt__Subscribe*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe(soap, _wsnt__Subscribe*) serialize to a stream
class _wsnt__Subscribe
{ public:
/// Element "ConsumerReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nillable pointer.
/// class _wsnt__Subscribe_SubscriptionPolicy operations:
/// - soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*) allocate
/// - soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a stream
    class _wsnt__Subscribe_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// class _wsnt__SubscribeResponse operations:
/// - soap_new__wsnt__SubscribeResponse(soap*) allocate
/// - soap_new__wsnt__SubscribeResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__SubscribeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__SubscribeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__SubscribeResponse(soap, _wsnt__SubscribeResponse*) serialize to a stream
class _wsnt__SubscribeResponse
{ public:
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// class _wsnt__GetCurrentMessage operations:
/// - soap_new__wsnt__GetCurrentMessage(soap*) allocate
/// - soap_new__wsnt__GetCurrentMessage(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetCurrentMessage(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetCurrentMessage(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessage(soap, _wsnt__GetCurrentMessage*) serialize to a stream
class _wsnt__GetCurrentMessage
{ public:
/// Element "Topic" of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnt__TopicExpressionType*           Topic                          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// class _wsnt__GetCurrentMessageResponse operations:
/// - soap_new__wsnt__GetCurrentMessageResponse(soap*) allocate
/// - soap_new__wsnt__GetCurrentMessageResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessageResponse(soap, _wsnt__GetCurrentMessageResponse*) serialize to a stream
class _wsnt__GetCurrentMessageResponse
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// class _wsnt__GetMessages operations:
/// - soap_new__wsnt__GetMessages(soap*) allocate
/// - soap_new__wsnt__GetMessages(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetMessages(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetMessages(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetMessages(soap*, _wsnt__GetMessages*) deserialize from a stream
/// - int soap_write__wsnt__GetMessages(soap, _wsnt__GetMessages*) serialize to a stream
class _wsnt__GetMessages
{ public:
/// Element "MaximumNumber" of XSD type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// class _wsnt__GetMessagesResponse operations:
/// - soap_new__wsnt__GetMessagesResponse(soap*) allocate
/// - soap_new__wsnt__GetMessagesResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetMessagesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetMessagesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetMessagesResponse(soap, _wsnt__GetMessagesResponse*) serialize to a stream
class _wsnt__GetMessagesResponse
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// class _wsnt__DestroyPullPoint operations:
/// - soap_new__wsnt__DestroyPullPoint(soap*) allocate
/// - soap_new__wsnt__DestroyPullPoint(soap*, int num) allocate array
/// - soap_new_req__wsnt__DestroyPullPoint(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__DestroyPullPoint(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPoint(soap, _wsnt__DestroyPullPoint*) serialize to a stream
class _wsnt__DestroyPullPoint
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// class _wsnt__DestroyPullPointResponse operations:
/// - soap_new__wsnt__DestroyPullPointResponse(soap*) allocate
/// - soap_new__wsnt__DestroyPullPointResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPointResponse(soap, _wsnt__DestroyPullPointResponse*) serialize to a stream
class _wsnt__DestroyPullPointResponse
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// class _wsnt__CreatePullPoint operations:
/// - soap_new__wsnt__CreatePullPoint(soap*) allocate
/// - soap_new__wsnt__CreatePullPoint(soap*, int num) allocate array
/// - soap_new_req__wsnt__CreatePullPoint(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__CreatePullPoint(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPoint(soap, _wsnt__CreatePullPoint*) serialize to a stream
class _wsnt__CreatePullPoint
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// class _wsnt__CreatePullPointResponse operations:
/// - soap_new__wsnt__CreatePullPointResponse(soap*) allocate
/// - soap_new__wsnt__CreatePullPointResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__CreatePullPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__CreatePullPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPointResponse(soap, _wsnt__CreatePullPointResponse*) serialize to a stream
class _wsnt__CreatePullPointResponse
{ public:
/// Element "PullPoint" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// class _wsnt__Renew operations:
/// - soap_new__wsnt__Renew(soap*) allocate
/// - soap_new__wsnt__Renew(soap*, int num) allocate array
/// - soap_new_req__wsnt__Renew(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Renew(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Renew(soap*, _wsnt__Renew*) deserialize from a stream
/// - int soap_write__wsnt__Renew(soap, _wsnt__Renew*) serialize to a stream
class _wsnt__Renew
{ public:
/// Element "TerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    TerminationTime                1;	///< Nillable pointer.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// class _wsnt__RenewResponse operations:
/// - soap_new__wsnt__RenewResponse(soap*) allocate
/// - soap_new__wsnt__RenewResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__RenewResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__RenewResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) deserialize from a stream
/// - int soap_write__wsnt__RenewResponse(soap, _wsnt__RenewResponse*) serialize to a stream
class _wsnt__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// class _wsnt__Unsubscribe operations:
/// - soap_new__wsnt__Unsubscribe(soap*) allocate
/// - soap_new__wsnt__Unsubscribe(soap*, int num) allocate array
/// - soap_new_req__wsnt__Unsubscribe(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Unsubscribe(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) deserialize from a stream
/// - int soap_write__wsnt__Unsubscribe(soap, _wsnt__Unsubscribe*) serialize to a stream
class _wsnt__Unsubscribe
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// class _wsnt__UnsubscribeResponse operations:
/// - soap_new__wsnt__UnsubscribeResponse(soap*) allocate
/// - soap_new__wsnt__UnsubscribeResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__UnsubscribeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__UnsubscribeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__UnsubscribeResponse(soap, _wsnt__UnsubscribeResponse*) serialize to a stream
class _wsnt__UnsubscribeResponse
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// class _wsnt__PauseSubscription operations:
/// - soap_new__wsnt__PauseSubscription(soap*) allocate
/// - soap_new__wsnt__PauseSubscription(soap*, int num) allocate array
/// - soap_new_req__wsnt__PauseSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__PauseSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscription(soap, _wsnt__PauseSubscription*) serialize to a stream
class _wsnt__PauseSubscription
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// class _wsnt__PauseSubscriptionResponse operations:
/// - soap_new__wsnt__PauseSubscriptionResponse(soap*) allocate
/// - soap_new__wsnt__PauseSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscriptionResponse(soap, _wsnt__PauseSubscriptionResponse*) serialize to a stream
class _wsnt__PauseSubscriptionResponse
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// class _wsnt__ResumeSubscription operations:
/// - soap_new__wsnt__ResumeSubscription(soap*) allocate
/// - soap_new__wsnt__ResumeSubscription(soap*, int num) allocate array
/// - soap_new_req__wsnt__ResumeSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__ResumeSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscription(soap, _wsnt__ResumeSubscription*) serialize to a stream
class _wsnt__ResumeSubscription
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// class _wsnt__ResumeSubscriptionResponse operations:
/// - soap_new__wsnt__ResumeSubscriptionResponse(soap*) allocate
/// - soap_new__wsnt__ResumeSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscriptionResponse(soap, _wsnt__ResumeSubscriptionResponse*) serialize to a stream
class _wsnt__ResumeSubscriptionResponse
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// class wsrfbf__BaseFaultType operations:
/// - soap_new_wsrfbf__BaseFaultType(soap*) allocate
/// - soap_new_wsrfbf__BaseFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfbf__BaseFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfbf__BaseFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) deserialize from a stream
/// - int soap_write_wsrfbf__BaseFaultType(soap, wsrfbf__BaseFaultType*) serialize to a stream
class wsrfbf__BaseFaultType
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__BaseFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__BaseFaultType_Description operations:
/// - soap_new__wsrfbf__BaseFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_Description(soap, _wsrfbf__BaseFaultType_Description*) serialize to a stream
    class _wsrfbf__BaseFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__BaseFaultType_FaultCause operations:
/// - soap_new__wsrfbf__BaseFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(soap, _wsrfbf__BaseFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__BaseFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// class wstop__Documentation operations:
/// - soap_new_wstop__Documentation(soap*) allocate
/// - soap_new_wstop__Documentation(soap*, int num) allocate array
/// - soap_new_req_wstop__Documentation(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__Documentation(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__Documentation(soap*, wstop__Documentation*) deserialize from a stream
/// - int soap_write_wstop__Documentation(soap, wstop__Documentation*) serialize to a stream
class wstop__Documentation
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// class wstop__ExtensibleDocumented operations:
/// - soap_new_wstop__ExtensibleDocumented(soap*) allocate
/// - soap_new_wstop__ExtensibleDocumented(soap*, int num) allocate array
/// - soap_new_req_wstop__ExtensibleDocumented(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__ExtensibleDocumented(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) deserialize from a stream
/// - int soap_write_wstop__ExtensibleDocumented(soap, wstop__ExtensibleDocumented*) serialize to a stream
class wstop__ExtensibleDocumented
{ public:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// class wstop__QueryExpressionType operations:
/// - soap_new_wstop__QueryExpressionType(soap*) allocate
/// - soap_new_wstop__QueryExpressionType(soap*, int num) allocate array
/// - soap_new_req_wstop__QueryExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__QueryExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wstop__QueryExpressionType(soap, wstop__QueryExpressionType*) serialize to a stream
class wstop__QueryExpressionType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// @todo This mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
/// class tev__Capabilities operations:
/// - soap_new_tev__Capabilities(soap*) allocate
/// - soap_new_tev__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tev__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tev__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tev__Capabilities(soap*, tev__Capabilities*) deserialize from a stream
/// - int soap_write_tev__Capabilities(soap, tev__Capabilities*) serialize to a stream
class tev__Capabilities
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSSubscriptionPolicySupport" of XSD type xs:boolean.
   @bool*                                WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSPullPointSupport" of XSD type xs:boolean.
   @bool*                                WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of XSD type xs:boolean.
   @bool*                                WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxNotificationProducers" of XSD type xs:int.
   @int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaxPullPoints" of XSD type xs:int.
   @int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
/// Attribute "PersistentNotificationStorage" of XSD type xs:boolean.
   @bool*                                PersistentNotificationStorage  0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
/// class _tev__GetServiceCapabilities operations:
/// - soap_new__tev__GetServiceCapabilities(soap*) allocate
/// - soap_new__tev__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tev__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetServiceCapabilities(soap*, _tev__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilities(soap, _tev__GetServiceCapabilities*) serialize to a stream
class _tev__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// class _tev__GetServiceCapabilitiesResponse operations:
/// - soap_new__tev__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tev__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetServiceCapabilitiesResponse(soap*, _tev__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilitiesResponse(soap, _tev__GetServiceCapabilitiesResponse*) serialize to a stream
class _tev__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    tev__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
/// class _tev__CreatePullPointSubscription operations:
/// - soap_new__tev__CreatePullPointSubscription(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscription(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscription(soap*, _tev__CreatePullPointSubscription*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription(soap, _tev__CreatePullPointSubscription*) serialize to a stream
class _tev__CreatePullPointSubscription
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
/// Element "Filter" of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
/// Element "InitialTerminationTime" of XSD type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nillable pointer.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
/// class _tev__CreatePullPointSubscription_SubscriptionPolicy operations:
/// - soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, _tev__CreatePullPointSubscription_SubscriptionPolicy*) serialize to a stream
    class _tev__CreatePullPointSubscription_SubscriptionPolicy
    {
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
/// class _tev__CreatePullPointSubscriptionResponse operations:
/// - soap_new__tev__CreatePullPointSubscriptionResponse(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscriptionResponse(soap*, _tev__CreatePullPointSubscriptionResponse*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscriptionResponse(soap, _tev__CreatePullPointSubscriptionResponse*) serialize to a stream
class _tev__CreatePullPointSubscriptionResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
/// Element "SubscriptionReference" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t                               wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               wsnt__TerminationTime          1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
/// class _tev__PullMessages operations:
/// - soap_new__tev__PullMessages(soap*) allocate
/// - soap_new__tev__PullMessages(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessages(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessages(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessages(soap*, _tev__PullMessages*) deserialize from a stream
/// - int soap_write__tev__PullMessages(soap, _tev__PullMessages*) serialize to a stream
class _tev__PullMessages
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
/// Element "Timeout" of XSD type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
/// Element "MessageLimit" of XSD type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
/// class _tev__PullMessagesResponse operations:
/// - soap_new__tev__PullMessagesResponse(soap*) allocate
/// - soap_new__tev__PullMessagesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessagesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessagesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessagesResponse(soap*, _tev__PullMessagesResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesResponse(soap, _tev__PullMessagesResponse*) serialize to a stream
class _tev__PullMessagesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
/// Element "CurrentTime" of XSD type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
/// Element "TerminationTime" of XSD type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> wsnt__NotificationMessage      0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
/// class _tev__PullMessagesFaultResponse operations:
/// - soap_new__tev__PullMessagesFaultResponse(soap*) allocate
/// - soap_new__tev__PullMessagesFaultResponse(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessagesFaultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessagesFaultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessagesFaultResponse(soap*, _tev__PullMessagesFaultResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesFaultResponse(soap, _tev__PullMessagesFaultResponse*) serialize to a stream
class _tev__PullMessagesFaultResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "MaxTimeout" of XSD type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
/// Element "MaxMessageLimit" of XSD type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
/// class _tev__Seek operations:
/// - soap_new__tev__Seek(soap*) allocate
/// - soap_new__tev__Seek(soap*, int num) allocate array
/// - soap_new_req__tev__Seek(soap*, ...) allocate, set required members
/// - soap_new_set__tev__Seek(soap*, ...) allocate, set all public members
/// - int soap_read__tev__Seek(soap*, _tev__Seek*) deserialize from a stream
/// - int soap_write__tev__Seek(soap, _tev__Seek*) serialize to a stream
class _tev__Seek
{ public:
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
/// Element "UtcTime" of XSD type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
/// Element "Reverse" of XSD type xs:boolean.
    bool*                                Reverse                        0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
/// class _tev__SeekResponse operations:
/// - soap_new__tev__SeekResponse(soap*) allocate
/// - soap_new__tev__SeekResponse(soap*, int num) allocate array
/// - soap_new_req__tev__SeekResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SeekResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SeekResponse(soap*, _tev__SeekResponse*) deserialize from a stream
/// - int soap_write__tev__SeekResponse(soap, _tev__SeekResponse*) serialize to a stream
class _tev__SeekResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
/// class _tev__SetSynchronizationPoint operations:
/// - soap_new__tev__SetSynchronizationPoint(soap*) allocate
/// - soap_new__tev__SetSynchronizationPoint(soap*, int num) allocate array
/// - soap_new_req__tev__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SetSynchronizationPoint(soap*, _tev__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPoint(soap, _tev__SetSynchronizationPoint*) serialize to a stream
class _tev__SetSynchronizationPoint
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// class _tev__SetSynchronizationPointResponse operations:
/// - soap_new__tev__SetSynchronizationPointResponse(soap*) allocate
/// - soap_new__tev__SetSynchronizationPointResponse(soap*, int num) allocate array
/// - soap_new_req__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SetSynchronizationPointResponse(soap*, _tev__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPointResponse(soap, _tev__SetSynchronizationPointResponse*) serialize to a stream
class _tev__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
/// class _tev__GetEventProperties operations:
/// - soap_new__tev__GetEventProperties(soap*) allocate
/// - soap_new__tev__GetEventProperties(soap*, int num) allocate array
/// - soap_new_req__tev__GetEventProperties(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetEventProperties(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetEventProperties(soap*, _tev__GetEventProperties*) deserialize from a stream
/// - int soap_write__tev__GetEventProperties(soap, _tev__GetEventProperties*) serialize to a stream
class _tev__GetEventProperties
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
/// class _tev__GetEventPropertiesResponse operations:
/// - soap_new__tev__GetEventPropertiesResponse(soap*) allocate
/// - soap_new__tev__GetEventPropertiesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__GetEventPropertiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetEventPropertiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetEventPropertiesResponse(soap*, _tev__GetEventPropertiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetEventPropertiesResponse(soap, _tev__GetEventPropertiesResponse*) serialize to a stream
class _tev__GetEventPropertiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > TopicNamespaceLocation         1;
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool                                 wsnt__FixedTopicSet            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI element refs of length 1..unbounded.
    std::vector<xsd__anyURI            > wsnt__TopicExpressionDialect   1;
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/>
///   The following MessageContentFilterDialects are mandatory for an ONVIF compliant device:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > MessageContentFilterDialect    1;
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ProducerPropertiesFilterDialect 0;
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/>
///   This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > MessageContentSchemaLocation   1;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/analytics/wsdl":Capabilities is a complexType.
///
/// class tan__Capabilities operations:
/// - soap_new_tan__Capabilities(soap*) allocate
/// - soap_new_tan__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tan__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tan__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tan__Capabilities(soap*, tan__Capabilities*) deserialize from a stream
/// - int soap_write_tan__Capabilities(soap, tan__Capabilities*) serialize to a stream
class tan__Capabilities
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports the rules interface and the rules syntax.
/// </BLOCKQUOTE></PRE>
/// Attribute "RuleSupport" of XSD type xs:boolean.
   @bool*                                RuleSupport                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports the scene analytics module interface.
/// </BLOCKQUOTE></PRE>
/// Attribute "AnalyticsModuleSupport" of XSD type xs:boolean.
   @bool*                                AnalyticsModuleSupport         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device produces the cell based scene description
/// </BLOCKQUOTE></PRE>
/// Attribute "CellBasedSceneDescriptionSupported" of XSD type xs:boolean.
   @bool*                                CellBasedSceneDescriptionSupported 0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilities is a complexType.
///
/// class _tan__GetServiceCapabilities operations:
/// - soap_new__tan__GetServiceCapabilities(soap*) allocate
/// - soap_new__tan__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tan__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetServiceCapabilities(soap*, _tan__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tan__GetServiceCapabilities(soap, _tan__GetServiceCapabilities*) serialize to a stream
class _tan__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// class _tan__GetServiceCapabilitiesResponse operations:
/// - soap_new__tan__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tan__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetServiceCapabilitiesResponse(soap*, _tan__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tan__GetServiceCapabilitiesResponse(soap, _tan__GetServiceCapabilitiesResponse*) serialize to a stream
class _tan__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the analytics service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver20/analytics/wsdl":Capabilities.
    tan__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules is a complexType.
///
/// class _tan__GetSupportedRules operations:
/// - soap_new__tan__GetSupportedRules(soap*) allocate
/// - soap_new__tan__GetSupportedRules(soap*, int num) allocate array
/// - soap_new_req__tan__GetSupportedRules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetSupportedRules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetSupportedRules(soap*, _tan__GetSupportedRules*) deserialize from a stream
/// - int soap_write__tan__GetSupportedRules(soap, _tan__GetSupportedRules*) serialize to a stream
class _tan__GetSupportedRules
{ public:
/// <PRE><BLOCKQUOTE>
///   References an existing Video Analytics configuration. The list of available tokens can be obtained
///   via the Media service GetVideoAnalyticsConfigurations method.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse is a complexType.
///
/// class _tan__GetSupportedRulesResponse operations:
/// - soap_new__tan__GetSupportedRulesResponse(soap*) allocate
/// - soap_new__tan__GetSupportedRulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__GetSupportedRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetSupportedRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetSupportedRulesResponse(soap*, _tan__GetSupportedRulesResponse*) deserialize from a stream
/// - int soap_write__tan__GetSupportedRulesResponse(soap, _tan__GetSupportedRulesResponse*) serialize to a stream
class _tan__GetSupportedRulesResponse
{ public:
/// Element "SupportedRules" of XSD type "http://www.onvif.org/ver10/schema":SupportedRules.
    tt__SupportedRules*                  SupportedRules                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateRules is a complexType.
///
/// class _tan__CreateRules operations:
/// - soap_new__tan__CreateRules(soap*) allocate
/// - soap_new__tan__CreateRules(soap*, int num) allocate array
/// - soap_new_req__tan__CreateRules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__CreateRules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__CreateRules(soap*, _tan__CreateRules*) deserialize from a stream
/// - int soap_write__tan__CreateRules(soap, _tan__CreateRules*) serialize to a stream
class _tan__CreateRules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Vector of tt__Config* of length 1..unbounded.
    std::vector<tt__Config*            > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse is a complexType.
///
/// class _tan__CreateRulesResponse operations:
/// - soap_new__tan__CreateRulesResponse(soap*) allocate
/// - soap_new__tan__CreateRulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__CreateRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__CreateRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__CreateRulesResponse(soap*, _tan__CreateRulesResponse*) deserialize from a stream
/// - int soap_write__tan__CreateRulesResponse(soap, _tan__CreateRulesResponse*) serialize to a stream
class _tan__CreateRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules is a complexType.
///
/// class _tan__DeleteRules operations:
/// - soap_new__tan__DeleteRules(soap*) allocate
/// - soap_new__tan__DeleteRules(soap*, int num) allocate array
/// - soap_new_req__tan__DeleteRules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__DeleteRules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__DeleteRules(soap*, _tan__DeleteRules*) deserialize from a stream
/// - int soap_write__tan__DeleteRules(soap, _tan__DeleteRules*) serialize to a stream
class _tan__DeleteRules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   References the specific rule to be deleted (e.g. "MyLineDetector").
/// </BLOCKQUOTE></PRE>
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > RuleName                       1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse is a complexType.
///
/// class _tan__DeleteRulesResponse operations:
/// - soap_new__tan__DeleteRulesResponse(soap*) allocate
/// - soap_new__tan__DeleteRulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__DeleteRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__DeleteRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__DeleteRulesResponse(soap*, _tan__DeleteRulesResponse*) deserialize from a stream
/// - int soap_write__tan__DeleteRulesResponse(soap, _tan__DeleteRulesResponse*) serialize to a stream
class _tan__DeleteRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules is a complexType.
///
/// class _tan__ModifyRules operations:
/// - soap_new__tan__ModifyRules(soap*) allocate
/// - soap_new__tan__ModifyRules(soap*, int num) allocate array
/// - soap_new_req__tan__ModifyRules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__ModifyRules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__ModifyRules(soap*, _tan__ModifyRules*) deserialize from a stream
/// - int soap_write__tan__ModifyRules(soap, _tan__ModifyRules*) serialize to a stream
class _tan__ModifyRules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Vector of tt__Config* of length 1..unbounded.
    std::vector<tt__Config*            > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse is a complexType.
///
/// class _tan__ModifyRulesResponse operations:
/// - soap_new__tan__ModifyRulesResponse(soap*) allocate
/// - soap_new__tan__ModifyRulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__ModifyRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__ModifyRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__ModifyRulesResponse(soap*, _tan__ModifyRulesResponse*) deserialize from a stream
/// - int soap_write__tan__ModifyRulesResponse(soap, _tan__ModifyRulesResponse*) serialize to a stream
class _tan__ModifyRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetRules is a complexType.
///
/// class _tan__GetRules operations:
/// - soap_new__tan__GetRules(soap*) allocate
/// - soap_new__tan__GetRules(soap*, int num) allocate array
/// - soap_new_req__tan__GetRules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetRules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetRules(soap*, _tan__GetRules*) deserialize from a stream
/// - int soap_write__tan__GetRules(soap, _tan__GetRules*) serialize to a stream
class _tan__GetRules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse is a complexType.
///
/// class _tan__GetRulesResponse operations:
/// - soap_new__tan__GetRulesResponse(soap*) allocate
/// - soap_new__tan__GetRulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__GetRulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetRulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetRulesResponse(soap*, _tan__GetRulesResponse*) deserialize from a stream
/// - int soap_write__tan__GetRulesResponse(soap, _tan__GetRulesResponse*) serialize to a stream
class _tan__GetRulesResponse
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > Rule                           0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules is a complexType.
///
/// class _tan__GetSupportedAnalyticsModules operations:
/// - soap_new__tan__GetSupportedAnalyticsModules(soap*) allocate
/// - soap_new__tan__GetSupportedAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req__tan__GetSupportedAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetSupportedAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetSupportedAnalyticsModules(soap*, _tan__GetSupportedAnalyticsModules*) deserialize from a stream
/// - int soap_write__tan__GetSupportedAnalyticsModules(soap, _tan__GetSupportedAnalyticsModules*) serialize to a stream
class _tan__GetSupportedAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse is a complexType.
///
/// class _tan__GetSupportedAnalyticsModulesResponse operations:
/// - soap_new__tan__GetSupportedAnalyticsModulesResponse(soap*) allocate
/// - soap_new__tan__GetSupportedAnalyticsModulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__GetSupportedAnalyticsModulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetSupportedAnalyticsModulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetSupportedAnalyticsModulesResponse(soap*, _tan__GetSupportedAnalyticsModulesResponse*) deserialize from a stream
/// - int soap_write__tan__GetSupportedAnalyticsModulesResponse(soap, _tan__GetSupportedAnalyticsModulesResponse*) serialize to a stream
class _tan__GetSupportedAnalyticsModulesResponse
{ public:
/// Element "SupportedAnalyticsModules" of XSD type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules.
    tt__SupportedAnalyticsModules*       SupportedAnalyticsModules      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules is a complexType.
///
/// class _tan__CreateAnalyticsModules operations:
/// - soap_new__tan__CreateAnalyticsModules(soap*) allocate
/// - soap_new__tan__CreateAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req__tan__CreateAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__CreateAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__CreateAnalyticsModules(soap*, _tan__CreateAnalyticsModules*) deserialize from a stream
/// - int soap_write__tan__CreateAnalyticsModules(soap, _tan__CreateAnalyticsModules*) serialize to a stream
class _tan__CreateAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Vector of tt__Config* of length 1..unbounded.
    std::vector<tt__Config*            > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse is a complexType.
///
/// class _tan__CreateAnalyticsModulesResponse operations:
/// - soap_new__tan__CreateAnalyticsModulesResponse(soap*) allocate
/// - soap_new__tan__CreateAnalyticsModulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__CreateAnalyticsModulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__CreateAnalyticsModulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__CreateAnalyticsModulesResponse(soap*, _tan__CreateAnalyticsModulesResponse*) deserialize from a stream
/// - int soap_write__tan__CreateAnalyticsModulesResponse(soap, _tan__CreateAnalyticsModulesResponse*) serialize to a stream
class _tan__CreateAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules is a complexType.
///
/// class _tan__DeleteAnalyticsModules operations:
/// - soap_new__tan__DeleteAnalyticsModules(soap*) allocate
/// - soap_new__tan__DeleteAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req__tan__DeleteAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__DeleteAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__DeleteAnalyticsModules(soap*, _tan__DeleteAnalyticsModules*) deserialize from a stream
/// - int soap_write__tan__DeleteAnalyticsModules(soap, _tan__DeleteAnalyticsModules*) serialize to a stream
class _tan__DeleteAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing Video Analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the AnalyticsModule to be deleted.
/// </BLOCKQUOTE></PRE>
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > AnalyticsModuleName            1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse is a complexType.
///
/// class _tan__DeleteAnalyticsModulesResponse operations:
/// - soap_new__tan__DeleteAnalyticsModulesResponse(soap*) allocate
/// - soap_new__tan__DeleteAnalyticsModulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__DeleteAnalyticsModulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__DeleteAnalyticsModulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__DeleteAnalyticsModulesResponse(soap*, _tan__DeleteAnalyticsModulesResponse*) deserialize from a stream
/// - int soap_write__tan__DeleteAnalyticsModulesResponse(soap, _tan__DeleteAnalyticsModulesResponse*) serialize to a stream
class _tan__DeleteAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules is a complexType.
///
/// class _tan__ModifyAnalyticsModules operations:
/// - soap_new__tan__ModifyAnalyticsModules(soap*) allocate
/// - soap_new__tan__ModifyAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req__tan__ModifyAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__ModifyAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__ModifyAnalyticsModules(soap*, _tan__ModifyAnalyticsModules*) deserialize from a stream
/// - int soap_write__tan__ModifyAnalyticsModules(soap, _tan__ModifyAnalyticsModules*) serialize to a stream
class _tan__ModifyAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Vector of tt__Config* of length 1..unbounded.
    std::vector<tt__Config*            > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse is a complexType.
///
/// class _tan__ModifyAnalyticsModulesResponse operations:
/// - soap_new__tan__ModifyAnalyticsModulesResponse(soap*) allocate
/// - soap_new__tan__ModifyAnalyticsModulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__ModifyAnalyticsModulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__ModifyAnalyticsModulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__ModifyAnalyticsModulesResponse(soap*, _tan__ModifyAnalyticsModulesResponse*) deserialize from a stream
/// - int soap_write__tan__ModifyAnalyticsModulesResponse(soap, _tan__ModifyAnalyticsModulesResponse*) serialize to a stream
class _tan__ModifyAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules is a complexType.
///
/// class _tan__GetAnalyticsModules operations:
/// - soap_new__tan__GetAnalyticsModules(soap*) allocate
/// - soap_new__tan__GetAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req__tan__GetAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetAnalyticsModules(soap*, _tan__GetAnalyticsModules*) deserialize from a stream
/// - int soap_write__tan__GetAnalyticsModules(soap, _tan__GetAnalyticsModules*) serialize to a stream
class _tan__GetAnalyticsModules
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to an existing VideoAnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse
/// @brief "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse is a complexType.
///
/// class _tan__GetAnalyticsModulesResponse operations:
/// - soap_new__tan__GetAnalyticsModulesResponse(soap*) allocate
/// - soap_new__tan__GetAnalyticsModulesResponse(soap*, int num) allocate array
/// - soap_new_req__tan__GetAnalyticsModulesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tan__GetAnalyticsModulesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tan__GetAnalyticsModulesResponse(soap*, _tan__GetAnalyticsModulesResponse*) deserialize from a stream
/// - int soap_write__tan__GetAnalyticsModulesResponse(soap, _tan__GetAnalyticsModulesResponse*) serialize to a stream
class _tan__GetAnalyticsModulesResponse
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > AnalyticsModule                0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType is a complexType.
///
/// class wsd__HelloType operations:
/// - soap_new_wsd__HelloType(soap*) allocate
/// - soap_new_wsd__HelloType(soap*, int num) allocate array
/// - soap_new_req_wsd__HelloType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__HelloType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__HelloType(soap*, wsd__HelloType*) deserialize from a stream
/// - int soap_write_wsd__HelloType(soap, wsd__HelloType*) serialize to a stream
class wsd__HelloType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    wsa__EndpointReferenceType*          wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType*                  Types                          0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    wsd__ScopesType*                     Scopes                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType*                    XAddrs                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         MetadataVersion                1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType is a complexType.
///
/// class wsd__ByeType operations:
/// - soap_new_wsd__ByeType(soap*) allocate
/// - soap_new_wsd__ByeType(soap*, int num) allocate array
/// - soap_new_req_wsd__ByeType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ByeType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ByeType(soap*, wsd__ByeType*) deserialize from a stream
/// - int soap_write_wsd__ByeType(soap, wsd__ByeType*) serialize to a stream
class wsd__ByeType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    wsa__EndpointReferenceType*          wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType*                  Types                          0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    wsd__ScopesType*                     Scopes                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType*                    XAddrs                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int*                        MetadataVersion                0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType is a complexType.
///
/// class wsd__ProbeType operations:
/// - soap_new_wsd__ProbeType(soap*) allocate
/// - soap_new_wsd__ProbeType(soap*, int num) allocate array
/// - soap_new_req_wsd__ProbeType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ProbeType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ProbeType(soap*, wsd__ProbeType*) deserialize from a stream
/// - int soap_write_wsd__ProbeType(soap, wsd__ProbeType*) serialize to a stream
class wsd__ProbeType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType*                  Types                          0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    wsd__ScopesType*                     Scopes                         0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType is a complexType.
///
/// class wsd__ProbeMatchesType operations:
/// - soap_new_wsd__ProbeMatchesType(soap*) allocate
/// - soap_new_wsd__ProbeMatchesType(soap*, int num) allocate array
/// - soap_new_req_wsd__ProbeMatchesType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ProbeMatchesType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ProbeMatchesType(soap*, wsd__ProbeMatchesType*) deserialize from a stream
/// - int soap_write_wsd__ProbeMatchesType(soap, wsd__ProbeMatchesType*) serialize to a stream
class wsd__ProbeMatchesType
{ public:
/// Vector of wsd__ProbeMatchType* of length 0..unbounded.
    std::vector<wsd__ProbeMatchType*   > ProbeMatch                     0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchType is a complexType.
///
/// class wsd__ProbeMatchType operations:
/// - soap_new_wsd__ProbeMatchType(soap*) allocate
/// - soap_new_wsd__ProbeMatchType(soap*, int num) allocate array
/// - soap_new_req_wsd__ProbeMatchType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ProbeMatchType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ProbeMatchType(soap*, wsd__ProbeMatchType*) deserialize from a stream
/// - int soap_write_wsd__ProbeMatchType(soap, wsd__ProbeMatchType*) serialize to a stream
class wsd__ProbeMatchType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    wsa__EndpointReferenceType*          wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType*                  Types                          0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    wsd__ScopesType*                     Scopes                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType*                    XAddrs                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         MetadataVersion                1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType is a complexType.
///
/// class wsd__ResolveType operations:
/// - soap_new_wsd__ResolveType(soap*) allocate
/// - soap_new_wsd__ResolveType(soap*, int num) allocate array
/// - soap_new_req_wsd__ResolveType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ResolveType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ResolveType(soap*, wsd__ResolveType*) deserialize from a stream
/// - int soap_write_wsd__ResolveType(soap, wsd__ResolveType*) serialize to a stream
class wsd__ResolveType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    wsa__EndpointReferenceType*          wsa__EndpointReference         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType is a complexType.
///
/// class wsd__ResolveMatchesType operations:
/// - soap_new_wsd__ResolveMatchesType(soap*) allocate
/// - soap_new_wsd__ResolveMatchesType(soap*, int num) allocate array
/// - soap_new_req_wsd__ResolveMatchesType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ResolveMatchesType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ResolveMatchesType(soap*, wsd__ResolveMatchesType*) deserialize from a stream
/// - int soap_write_wsd__ResolveMatchesType(soap, wsd__ResolveMatchesType*) serialize to a stream
class wsd__ResolveMatchesType
{ public:
/// Element "ResolveMatch" of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType.
    wsd__ResolveMatchType*               ResolveMatch                   0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchType is a complexType.
///
/// class wsd__ResolveMatchType operations:
/// - soap_new_wsd__ResolveMatchType(soap*) allocate
/// - soap_new_wsd__ResolveMatchType(soap*, int num) allocate array
/// - soap_new_req_wsd__ResolveMatchType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ResolveMatchType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ResolveMatchType(soap*, wsd__ResolveMatchType*) deserialize from a stream
/// - int soap_write_wsd__ResolveMatchType(soap, wsd__ResolveMatchType*) serialize to a stream
class wsd__ResolveMatchType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference.
    wsa__EndpointReferenceType*          wsa__EndpointReference         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Types.
    wsd__QNameListType*                  Types                          0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes.
    wsd__ScopesType*                     Scopes                         0;	///< Optional element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs.
    wsd__UriListType                     XAddrs                         1;	///< Required element.
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion.
    unsigned int                         MetadataVersion                1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType is a complexType.
///
/// class wsd__SecurityType operations:
/// - soap_new_wsd__SecurityType(soap*) allocate
/// - soap_new_wsd__SecurityType(soap*, int num) allocate array
/// - soap_new_req_wsd__SecurityType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__SecurityType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__SecurityType(soap*, wsd__SecurityType*) deserialize from a stream
/// - int soap_write_wsd__SecurityType(soap, wsd__SecurityType*) serialize to a stream
class wsd__SecurityType
{ public:
/// Element reference "http://schemas.xmlsoap.org/ws/2005/04/discovery:""http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig.
    wsd__SigType*                        Sig                            0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType is a complexType.
///
/// class wsd__SigType operations:
/// - soap_new_wsd__SigType(soap*) allocate
/// - soap_new_wsd__SigType(soap*, int num) allocate array
/// - soap_new_req_wsd__SigType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__SigType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__SigType(soap*, wsd__SigType*) deserialize from a stream
/// - int soap_write_wsd__SigType(soap, wsd__SigType*) serialize to a stream
class wsd__SigType
{ public:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "Scheme" of XSD type xs:anyURI.
   @xsd__anyURI                          Scheme                         1;	///< Required attribute.
/// Attribute "KeyId" of XSD type xs:base64Binary.
   @xsd__base64Binary*                   KeyId                          0;	///< Optional attribute.
/// Attribute "Refs" of XSD type xs:IDREFS.
   @xsd__IDREFS                          Refs                           1;	///< Required attribute.
/// Attribute "Sig" of XSD type xs:base64Binary.
   @xsd__base64Binary                    Sig                            1;	///< Required attribute.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType is a complexType.
///
/// class wsa__EndpointReferenceType operations:
/// - soap_new_wsa__EndpointReferenceType(soap*) allocate
/// - soap_new_wsa__EndpointReferenceType(soap*, int num) allocate array
/// - soap_new_req_wsa__EndpointReferenceType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__EndpointReferenceType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__EndpointReferenceType(soap*, wsa__EndpointReferenceType*) deserialize from a stream
/// - int soap_write_wsa__EndpointReferenceType(soap, wsa__EndpointReferenceType*) serialize to a stream
class wsa__EndpointReferenceType
{ public:
/// Element "Address" of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
    wsa__AttributedURI*                  Address                        1;	///< Required element.
/// Element "ReferenceProperties" of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferencePropertiesType.
    wsa__ReferencePropertiesType*        ReferenceProperties            0;	///< Optional element.
/// Element "ReferenceParameters" of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferenceParametersType.
    wsa__ReferenceParametersType*        ReferenceParameters            0;	///< Optional element.
/// Element "PortType" of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedQName.
    wsa__AttributedQName*                PortType                       0;	///< Optional element.
/// Element "ServiceName" of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ServiceNameType.
    wsa__ServiceNameType*                ServiceName                    0;	///< Optional element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferencePropertiesType is a complexType.
///
/// class wsa__ReferencePropertiesType operations:
/// - soap_new_wsa__ReferencePropertiesType(soap*) allocate
/// - soap_new_wsa__ReferencePropertiesType(soap*, int num) allocate array
/// - soap_new_req_wsa__ReferencePropertiesType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__ReferencePropertiesType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__ReferencePropertiesType(soap*, wsa__ReferencePropertiesType*) deserialize from a stream
/// - int soap_write_wsa__ReferencePropertiesType(soap, wsa__ReferencePropertiesType*) serialize to a stream
class wsa__ReferencePropertiesType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReferenceParametersType is a complexType.
///
/// class wsa__ReferenceParametersType operations:
/// - soap_new_wsa__ReferenceParametersType(soap*) allocate
/// - soap_new_wsa__ReferenceParametersType(soap*, int num) allocate array
/// - soap_new_req_wsa__ReferenceParametersType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__ReferenceParametersType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__ReferenceParametersType(soap*, wsa__ReferenceParametersType*) deserialize from a stream
/// - int soap_write_wsa__ReferenceParametersType(soap, wsa__ReferenceParametersType*) serialize to a stream
class wsa__ReferenceParametersType
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
/// class trt__Capabilities operations:
/// - soap_new_trt__Capabilities(soap*) allocate
/// - soap_new_trt__Capabilities(soap*, int num) allocate array
/// - soap_new_req_trt__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__Capabilities(soap*, trt__Capabilities*) deserialize from a stream
/// - int soap_write_trt__Capabilities(soap, trt__Capabilities*) serialize to a stream
class trt__Capabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    trt__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
/// Element "StreamingCapabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    trt__StreamingCapabilities*          StreamingCapabilities          1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "SnapshotUri" of XSD type xs:boolean.
   @bool*                                SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "Rotation" of XSD type xs:boolean.
   @bool*                                Rotation                       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
/// class trt__ProfileCapabilities operations:
/// - soap_new_trt__ProfileCapabilities(soap*) allocate
/// - soap_new_trt__ProfileCapabilities(soap*, int num) allocate array
/// - soap_new_req_trt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_trt__ProfileCapabilities(soap, trt__ProfileCapabilities*) serialize to a stream
class trt__ProfileCapabilities
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
/// Attribute "MaximumNumberOfProfiles" of XSD type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
/// class trt__StreamingCapabilities operations:
/// - soap_new_trt__StreamingCapabilities(soap*) allocate
/// - soap_new_trt__StreamingCapabilities(soap*, int num) allocate array
/// - soap_new_req_trt__StreamingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__StreamingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) deserialize from a stream
/// - int soap_write_trt__StreamingCapabilities(soap, trt__StreamingCapabilities*) serialize to a stream
class trt__StreamingCapabilities
{ public:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTPMulticast" of XSD type xs:boolean.
   @bool*                                RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_TCP" of XSD type xs:boolean.
   @bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
/// Attribute "RTP_RTSP_TCP" of XSD type xs:boolean.
   @bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
/// Attribute "NonAggregateControl" of XSD type xs:boolean.
   @bool*                                NonAggregateControl            0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
/// class _trt__GetServiceCapabilities operations:
/// - soap_new__trt__GetServiceCapabilities(soap*) allocate
/// - soap_new__trt__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__trt__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilities(soap, _trt__GetServiceCapabilities*) serialize to a stream
class _trt__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// class _trt__GetServiceCapabilitiesResponse operations:
/// - soap_new__trt__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__trt__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilitiesResponse(soap, _trt__GetServiceCapabilitiesResponse*) serialize to a stream
class _trt__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
/// Element "Capabilities" of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    trt__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
/// class _trt__GetVideoSources operations:
/// - soap_new__trt__GetVideoSources(soap*) allocate
/// - soap_new__trt__GetVideoSources(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSources(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSources(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSources(soap*, _trt__GetVideoSources*) deserialize from a stream
/// - int soap_write__trt__GetVideoSources(soap, _trt__GetVideoSources*) serialize to a stream
class _trt__GetVideoSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
/// class _trt__GetVideoSourcesResponse operations:
/// - soap_new__trt__GetVideoSourcesResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourcesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourcesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourcesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourcesResponse(soap, _trt__GetVideoSourcesResponse*) serialize to a stream
class _trt__GetVideoSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoSource* of length 0..unbounded.
    std::vector<tt__VideoSource*       > VideoSources                   0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
/// class _trt__GetAudioSources operations:
/// - soap_new__trt__GetAudioSources(soap*) allocate
/// - soap_new__trt__GetAudioSources(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSources(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSources(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSources(soap*, _trt__GetAudioSources*) deserialize from a stream
/// - int soap_write__trt__GetAudioSources(soap, _trt__GetAudioSources*) serialize to a stream
class _trt__GetAudioSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
/// class _trt__GetAudioSourcesResponse operations:
/// - soap_new__trt__GetAudioSourcesResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourcesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourcesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourcesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourcesResponse(soap, _trt__GetAudioSourcesResponse*) serialize to a stream
class _trt__GetAudioSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioSource* of length 0..unbounded.
    std::vector<tt__AudioSource*       > AudioSources                   0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
/// class _trt__GetAudioOutputs operations:
/// - soap_new__trt__GetAudioOutputs(soap*) allocate
/// - soap_new__trt__GetAudioOutputs(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputs(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputs(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputs(soap, _trt__GetAudioOutputs*) serialize to a stream
class _trt__GetAudioOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
/// class _trt__GetAudioOutputsResponse operations:
/// - soap_new__trt__GetAudioOutputsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputsResponse(soap, _trt__GetAudioOutputsResponse*) serialize to a stream
class _trt__GetAudioOutputsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioOutput* of length 0..unbounded.
    std::vector<tt__AudioOutput*       > AudioOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
/// class _trt__CreateProfile operations:
/// - soap_new__trt__CreateProfile(soap*) allocate
/// - soap_new__trt__CreateProfile(soap*, int num) allocate array
/// - soap_new_req__trt__CreateProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateProfile(soap*, _trt__CreateProfile*) deserialize from a stream
/// - int soap_write__trt__CreateProfile(soap, _trt__CreateProfile*) serialize to a stream
class _trt__CreateProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
/// Element "Token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
/// class _trt__CreateProfileResponse operations:
/// - soap_new__trt__CreateProfileResponse(soap*) allocate
/// - soap_new__trt__CreateProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__CreateProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) deserialize from a stream
/// - int soap_write__trt__CreateProfileResponse(soap, _trt__CreateProfileResponse*) serialize to a stream
class _trt__CreateProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
/// class _trt__GetProfile operations:
/// - soap_new__trt__GetProfile(soap*) allocate
/// - soap_new__trt__GetProfile(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfile(soap*, _trt__GetProfile*) deserialize from a stream
/// - int soap_write__trt__GetProfile(soap, _trt__GetProfile*) serialize to a stream
class _trt__GetProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
/// class _trt__GetProfileResponse operations:
/// - soap_new__trt__GetProfileResponse(soap*) allocate
/// - soap_new__trt__GetProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfileResponse(soap, _trt__GetProfileResponse*) serialize to a stream
class _trt__GetProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
/// Element "Profile" of XSD type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
/// class _trt__GetProfiles operations:
/// - soap_new__trt__GetProfiles(soap*) allocate
/// - soap_new__trt__GetProfiles(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfiles(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfiles(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfiles(soap*, _trt__GetProfiles*) deserialize from a stream
/// - int soap_write__trt__GetProfiles(soap, _trt__GetProfiles*) serialize to a stream
class _trt__GetProfiles
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
/// class _trt__GetProfilesResponse operations:
/// - soap_new__trt__GetProfilesResponse(soap*) allocate
/// - soap_new__trt__GetProfilesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfilesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfilesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfilesResponse(soap, _trt__GetProfilesResponse*) serialize to a stream
class _trt__GetProfilesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
/// Vector of tt__Profile* of length 0..unbounded.
    std::vector<tt__Profile*           > Profiles                       0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
/// class _trt__AddVideoEncoderConfiguration operations:
/// - soap_new__trt__AddVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfiguration(soap, _trt__AddVideoEncoderConfiguration*) serialize to a stream
class _trt__AddVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
/// class _trt__AddVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__AddVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfigurationResponse(soap, _trt__AddVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__AddVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
/// class _trt__RemoveVideoEncoderConfiguration operations:
/// - soap_new__trt__RemoveVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfiguration(soap, _trt__RemoveVideoEncoderConfiguration*) serialize to a stream
class _trt__RemoveVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
/// class _trt__RemoveVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfigurationResponse(soap, _trt__RemoveVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
/// class _trt__AddVideoSourceConfiguration operations:
/// - soap_new__trt__AddVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfiguration(soap, _trt__AddVideoSourceConfiguration*) serialize to a stream
class _trt__AddVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
/// class _trt__AddVideoSourceConfigurationResponse operations:
/// - soap_new__trt__AddVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfigurationResponse(soap, _trt__AddVideoSourceConfigurationResponse*) serialize to a stream
class _trt__AddVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
/// class _trt__RemoveVideoSourceConfiguration operations:
/// - soap_new__trt__RemoveVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfiguration(soap, _trt__RemoveVideoSourceConfiguration*) serialize to a stream
class _trt__RemoveVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
/// class _trt__RemoveVideoSourceConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfigurationResponse(soap, _trt__RemoveVideoSourceConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
/// class _trt__AddAudioEncoderConfiguration operations:
/// - soap_new__trt__AddAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfiguration(soap, _trt__AddAudioEncoderConfiguration*) serialize to a stream
class _trt__AddAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
/// class _trt__AddAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__AddAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfigurationResponse(soap, _trt__AddAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__AddAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
/// class _trt__RemoveAudioEncoderConfiguration operations:
/// - soap_new__trt__RemoveAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfiguration(soap, _trt__RemoveAudioEncoderConfiguration*) serialize to a stream
class _trt__RemoveAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
/// class _trt__RemoveAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfigurationResponse(soap, _trt__RemoveAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
/// class _trt__AddAudioSourceConfiguration operations:
/// - soap_new__trt__AddAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfiguration(soap, _trt__AddAudioSourceConfiguration*) serialize to a stream
class _trt__AddAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
/// class _trt__AddAudioSourceConfigurationResponse operations:
/// - soap_new__trt__AddAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfigurationResponse(soap, _trt__AddAudioSourceConfigurationResponse*) serialize to a stream
class _trt__AddAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
/// class _trt__RemoveAudioSourceConfiguration operations:
/// - soap_new__trt__RemoveAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfiguration(soap, _trt__RemoveAudioSourceConfiguration*) serialize to a stream
class _trt__RemoveAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
/// class _trt__RemoveAudioSourceConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfigurationResponse(soap, _trt__RemoveAudioSourceConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
/// class _trt__AddPTZConfiguration operations:
/// - soap_new__trt__AddPTZConfiguration(soap*) allocate
/// - soap_new__trt__AddPTZConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddPTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddPTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfiguration(soap, _trt__AddPTZConfiguration*) serialize to a stream
class _trt__AddPTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
/// class _trt__AddPTZConfigurationResponse operations:
/// - soap_new__trt__AddPTZConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddPTZConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfigurationResponse(soap, _trt__AddPTZConfigurationResponse*) serialize to a stream
class _trt__AddPTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
/// class _trt__RemovePTZConfiguration operations:
/// - soap_new__trt__RemovePTZConfiguration(soap*) allocate
/// - soap_new__trt__RemovePTZConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemovePTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemovePTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfiguration(soap, _trt__RemovePTZConfiguration*) serialize to a stream
class _trt__RemovePTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
/// class _trt__RemovePTZConfigurationResponse operations:
/// - soap_new__trt__RemovePTZConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemovePTZConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfigurationResponse(soap, _trt__RemovePTZConfigurationResponse*) serialize to a stream
class _trt__RemovePTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
/// class _trt__AddVideoAnalyticsConfiguration operations:
/// - soap_new__trt__AddVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfiguration(soap, _trt__AddVideoAnalyticsConfiguration*) serialize to a stream
class _trt__AddVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
/// class _trt__AddVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfigurationResponse(soap, _trt__AddVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__AddVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
/// class _trt__RemoveVideoAnalyticsConfiguration operations:
/// - soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfiguration(soap, _trt__RemoveVideoAnalyticsConfiguration*) serialize to a stream
class _trt__RemoveVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
/// class _trt__RemoveVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(soap, _trt__RemoveVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
/// class _trt__AddMetadataConfiguration operations:
/// - soap_new__trt__AddMetadataConfiguration(soap*) allocate
/// - soap_new__trt__AddMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfiguration(soap, _trt__AddMetadataConfiguration*) serialize to a stream
class _trt__AddMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
/// class _trt__AddMetadataConfigurationResponse operations:
/// - soap_new__trt__AddMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfigurationResponse(soap, _trt__AddMetadataConfigurationResponse*) serialize to a stream
class _trt__AddMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
/// class _trt__RemoveMetadataConfiguration operations:
/// - soap_new__trt__RemoveMetadataConfiguration(soap*) allocate
/// - soap_new__trt__RemoveMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfiguration(soap, _trt__RemoveMetadataConfiguration*) serialize to a stream
class _trt__RemoveMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
/// class _trt__RemoveMetadataConfigurationResponse operations:
/// - soap_new__trt__RemoveMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfigurationResponse(soap, _trt__RemoveMetadataConfigurationResponse*) serialize to a stream
class _trt__RemoveMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
/// class _trt__AddAudioOutputConfiguration operations:
/// - soap_new__trt__AddAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfiguration(soap, _trt__AddAudioOutputConfiguration*) serialize to a stream
class _trt__AddAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
/// class _trt__AddAudioOutputConfigurationResponse operations:
/// - soap_new__trt__AddAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfigurationResponse(soap, _trt__AddAudioOutputConfigurationResponse*) serialize to a stream
class _trt__AddAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
/// class _trt__RemoveAudioOutputConfiguration operations:
/// - soap_new__trt__RemoveAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfiguration(soap, _trt__RemoveAudioOutputConfiguration*) serialize to a stream
class _trt__RemoveAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
/// class _trt__RemoveAudioOutputConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfigurationResponse(soap, _trt__RemoveAudioOutputConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
/// class _trt__AddAudioDecoderConfiguration operations:
/// - soap_new__trt__AddAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfiguration(soap, _trt__AddAudioDecoderConfiguration*) serialize to a stream
class _trt__AddAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
/// class _trt__AddAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__AddAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfigurationResponse(soap, _trt__AddAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__AddAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
/// class _trt__RemoveAudioDecoderConfiguration operations:
/// - soap_new__trt__RemoveAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfiguration(soap, _trt__RemoveAudioDecoderConfiguration*) serialize to a stream
class _trt__RemoveAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
/// class _trt__RemoveAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfigurationResponse(soap, _trt__RemoveAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
/// class _trt__DeleteProfile operations:
/// - soap_new__trt__DeleteProfile(soap*) allocate
/// - soap_new__trt__DeleteProfile(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteProfile(soap*, _trt__DeleteProfile*) deserialize from a stream
/// - int soap_write__trt__DeleteProfile(soap, _trt__DeleteProfile*) serialize to a stream
class _trt__DeleteProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
/// class _trt__DeleteProfileResponse operations:
/// - soap_new__trt__DeleteProfileResponse(soap*) allocate
/// - soap_new__trt__DeleteProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteProfileResponse(soap, _trt__DeleteProfileResponse*) serialize to a stream
class _trt__DeleteProfileResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
/// class _trt__GetVideoEncoderConfigurations operations:
/// - soap_new__trt__GetVideoEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurations(soap, _trt__GetVideoEncoderConfigurations*) serialize to a stream
class _trt__GetVideoEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// class _trt__GetVideoEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationsResponse(soap, _trt__GetVideoEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
/// class _trt__GetVideoSourceConfigurations operations:
/// - soap_new__trt__GetVideoSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurations(soap, _trt__GetVideoSourceConfigurations*) serialize to a stream
class _trt__GetVideoSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// class _trt__GetVideoSourceConfigurationsResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationsResponse(soap, _trt__GetVideoSourceConfigurationsResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoSourceConfiguration* of length 0..unbounded.
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
/// class _trt__GetAudioEncoderConfigurations operations:
/// - soap_new__trt__GetAudioEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurations(soap, _trt__GetAudioEncoderConfigurations*) serialize to a stream
class _trt__GetAudioEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// class _trt__GetAudioEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationsResponse(soap, _trt__GetAudioEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
/// class _trt__GetAudioSourceConfigurations operations:
/// - soap_new__trt__GetAudioSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurations(soap, _trt__GetAudioSourceConfigurations*) serialize to a stream
class _trt__GetAudioSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// class _trt__GetAudioSourceConfigurationsResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationsResponse(soap, _trt__GetAudioSourceConfigurationsResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioSourceConfiguration* of length 0..unbounded.
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
/// class _trt__GetVideoAnalyticsConfigurations operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurations(soap, _trt__GetVideoAnalyticsConfigurations*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
/// class _trt__GetVideoAnalyticsConfigurationsResponse operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationsResponse(soap, _trt__GetVideoAnalyticsConfigurationsResponse*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoAnalyticsConfiguration* of length 0..unbounded.
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
/// class _trt__GetMetadataConfigurations operations:
/// - soap_new__trt__GetMetadataConfigurations(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurations(soap, _trt__GetMetadataConfigurations*) serialize to a stream
class _trt__GetMetadataConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// class _trt__GetMetadataConfigurationsResponse operations:
/// - soap_new__trt__GetMetadataConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationsResponse(soap, _trt__GetMetadataConfigurationsResponse*) serialize to a stream
class _trt__GetMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
/// Vector of tt__MetadataConfiguration* of length 0..unbounded.
    std::vector<tt__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
/// class _trt__GetAudioOutputConfigurations operations:
/// - soap_new__trt__GetAudioOutputConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurations(soap, _trt__GetAudioOutputConfigurations*) serialize to a stream
class _trt__GetAudioOutputConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// class _trt__GetAudioOutputConfigurationsResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationsResponse(soap, _trt__GetAudioOutputConfigurationsResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioOutputConfiguration* of length 0..unbounded.
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
/// class _trt__GetAudioDecoderConfigurations operations:
/// - soap_new__trt__GetAudioDecoderConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurations(soap, _trt__GetAudioDecoderConfigurations*) serialize to a stream
class _trt__GetAudioDecoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// class _trt__GetAudioDecoderConfigurationsResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationsResponse(soap, _trt__GetAudioDecoderConfigurationsResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioDecoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
/// class _trt__GetVideoSourceConfiguration operations:
/// - soap_new__trt__GetVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfiguration(soap, _trt__GetVideoSourceConfiguration*) serialize to a stream
class _trt__GetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
/// class _trt__GetVideoSourceConfigurationResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationResponse(soap, _trt__GetVideoSourceConfigurationResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
/// class _trt__GetVideoEncoderConfiguration operations:
/// - soap_new__trt__GetVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfiguration(soap, _trt__GetVideoEncoderConfiguration*) serialize to a stream
class _trt__GetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
/// class _trt__GetVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationResponse(soap, _trt__GetVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
/// class _trt__GetAudioSourceConfiguration operations:
/// - soap_new__trt__GetAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfiguration(soap, _trt__GetAudioSourceConfiguration*) serialize to a stream
class _trt__GetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
/// class _trt__GetAudioSourceConfigurationResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationResponse(soap, _trt__GetAudioSourceConfigurationResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
/// class _trt__GetAudioEncoderConfiguration operations:
/// - soap_new__trt__GetAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfiguration(soap, _trt__GetAudioEncoderConfiguration*) serialize to a stream
class _trt__GetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
/// class _trt__GetAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationResponse(soap, _trt__GetAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
/// class _trt__GetVideoAnalyticsConfiguration operations:
/// - soap_new__trt__GetVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfiguration(soap, _trt__GetVideoAnalyticsConfiguration*) serialize to a stream
class _trt__GetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
/// class _trt__GetVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationResponse(soap, _trt__GetVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
/// class _trt__GetMetadataConfiguration operations:
/// - soap_new__trt__GetMetadataConfiguration(soap*) allocate
/// - soap_new__trt__GetMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfiguration(soap, _trt__GetMetadataConfiguration*) serialize to a stream
class _trt__GetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
/// class _trt__GetMetadataConfigurationResponse operations:
/// - soap_new__trt__GetMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationResponse(soap, _trt__GetMetadataConfigurationResponse*) serialize to a stream
class _trt__GetMetadataConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
/// class _trt__GetAudioOutputConfiguration operations:
/// - soap_new__trt__GetAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfiguration(soap, _trt__GetAudioOutputConfiguration*) serialize to a stream
class _trt__GetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
/// class _trt__GetAudioOutputConfigurationResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationResponse(soap, _trt__GetAudioOutputConfigurationResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
/// class _trt__GetAudioDecoderConfiguration operations:
/// - soap_new__trt__GetAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfiguration(soap, _trt__GetAudioDecoderConfiguration*) serialize to a stream
class _trt__GetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
/// class _trt__GetAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationResponse(soap, _trt__GetAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
/// class _trt__GetCompatibleVideoEncoderConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurations(soap, _trt__GetCompatibleVideoEncoderConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleVideoEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
/// class _trt__GetCompatibleVideoSourceConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurations(soap, _trt__GetCompatibleVideoSourceConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleVideoSourceConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(soap, _trt__GetCompatibleVideoSourceConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoSourceConfiguration* of length 0..unbounded.
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
/// class _trt__GetCompatibleAudioEncoderConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurations(soap, _trt__GetCompatibleAudioEncoderConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleAudioEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
/// class _trt__GetCompatibleAudioSourceConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurations(soap, _trt__GetCompatibleAudioSourceConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleAudioSourceConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(soap, _trt__GetCompatibleAudioSourceConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioSourceConfiguration* of length 0..unbounded.
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
/// class _trt__GetCompatibleVideoAnalyticsConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(soap, _trt__GetCompatibleVideoAnalyticsConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoAnalyticsConfiguration* of length 0..unbounded.
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
/// class _trt__GetCompatibleMetadataConfigurations operations:
/// - soap_new__trt__GetCompatibleMetadataConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleMetadataConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurations(soap, _trt__GetCompatibleMetadataConfigurations*) serialize to a stream
class _trt__GetCompatibleMetadataConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleMetadataConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurationsResponse(soap, _trt__GetCompatibleMetadataConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__MetadataConfiguration* of length 0..unbounded.
    std::vector<tt__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
/// class _trt__GetCompatibleAudioOutputConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurations(soap, _trt__GetCompatibleAudioOutputConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioOutputConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleAudioOutputConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(soap, _trt__GetCompatibleAudioOutputConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioOutputConfiguration* of length 0..unbounded.
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
/// class _trt__GetCompatibleAudioDecoderConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurations(soap, _trt__GetCompatibleAudioDecoderConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioDecoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
/// class _trt__GetCompatibleAudioDecoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AudioDecoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// class _trt__SetVideoEncoderConfiguration operations:
/// - soap_new__trt__SetVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfiguration(soap, _trt__SetVideoEncoderConfiguration*) serialize to a stream
class _trt__SetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
/// class _trt__SetVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__SetVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfigurationResponse(soap, _trt__SetVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__SetVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// class _trt__SetVideoSourceConfiguration operations:
/// - soap_new__trt__SetVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfiguration(soap, _trt__SetVideoSourceConfiguration*) serialize to a stream
class _trt__SetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
/// class _trt__SetVideoSourceConfigurationResponse operations:
/// - soap_new__trt__SetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfigurationResponse(soap, _trt__SetVideoSourceConfigurationResponse*) serialize to a stream
class _trt__SetVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// class _trt__SetAudioEncoderConfiguration operations:
/// - soap_new__trt__SetAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfiguration(soap, _trt__SetAudioEncoderConfiguration*) serialize to a stream
class _trt__SetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
/// class _trt__SetAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__SetAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfigurationResponse(soap, _trt__SetAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__SetAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// class _trt__SetAudioSourceConfiguration operations:
/// - soap_new__trt__SetAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfiguration(soap, _trt__SetAudioSourceConfiguration*) serialize to a stream
class _trt__SetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
/// class _trt__SetAudioSourceConfigurationResponse operations:
/// - soap_new__trt__SetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfigurationResponse(soap, _trt__SetAudioSourceConfigurationResponse*) serialize to a stream
class _trt__SetAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
/// class _trt__SetVideoAnalyticsConfiguration operations:
/// - soap_new__trt__SetVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfiguration(soap, _trt__SetVideoAnalyticsConfiguration*) serialize to a stream
class _trt__SetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
/// class _trt__SetVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfigurationResponse(soap, _trt__SetVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__SetVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// class _trt__SetMetadataConfiguration operations:
/// - soap_new__trt__SetMetadataConfiguration(soap*) allocate
/// - soap_new__trt__SetMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfiguration(soap, _trt__SetMetadataConfiguration*) serialize to a stream
class _trt__SetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
/// class _trt__SetMetadataConfigurationResponse operations:
/// - soap_new__trt__SetMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfigurationResponse(soap, _trt__SetMetadataConfigurationResponse*) serialize to a stream
class _trt__SetMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// class _trt__SetAudioOutputConfiguration operations:
/// - soap_new__trt__SetAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfiguration(soap, _trt__SetAudioOutputConfiguration*) serialize to a stream
class _trt__SetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
/// class _trt__SetAudioOutputConfigurationResponse operations:
/// - soap_new__trt__SetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfigurationResponse(soap, _trt__SetAudioOutputConfigurationResponse*) serialize to a stream
class _trt__SetAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// class _trt__SetAudioDecoderConfiguration operations:
/// - soap_new__trt__SetAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfiguration(soap, _trt__SetAudioDecoderConfiguration*) serialize to a stream
class _trt__SetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
/// Element "Configuration" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
/// Element "ForcePersistence" of XSD type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
/// class _trt__SetAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__SetAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfigurationResponse(soap, _trt__SetAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__SetAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
/// class _trt__GetVideoSourceConfigurationOptions operations:
/// - soap_new__trt__GetVideoSourceConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptions(soap, _trt__GetVideoSourceConfigurationOptions*) serialize to a stream
class _trt__GetVideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetVideoSourceConfigurationOptionsResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptionsResponse(soap, _trt__GetVideoSourceConfigurationOptionsResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
/// class _trt__GetVideoEncoderConfigurationOptions operations:
/// - soap_new__trt__GetVideoEncoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptions(soap, _trt__GetVideoEncoderConfigurationOptions*) serialize to a stream
class _trt__GetVideoEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetVideoEncoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(soap, _trt__GetVideoEncoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
/// class _trt__GetAudioSourceConfigurationOptions operations:
/// - soap_new__trt__GetAudioSourceConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptions(soap, _trt__GetAudioSourceConfigurationOptions*) serialize to a stream
class _trt__GetAudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetAudioSourceConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptionsResponse(soap, _trt__GetAudioSourceConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
/// class _trt__GetAudioEncoderConfigurationOptions operations:
/// - soap_new__trt__GetAudioEncoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptions(soap, _trt__GetAudioEncoderConfigurationOptions*) serialize to a stream
class _trt__GetAudioEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetAudioEncoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(soap, _trt__GetAudioEncoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
/// class _trt__GetMetadataConfigurationOptions operations:
/// - soap_new__trt__GetMetadataConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptions(soap, _trt__GetMetadataConfigurationOptions*) serialize to a stream
class _trt__GetMetadataConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetMetadataConfigurationOptionsResponse operations:
/// - soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(soap, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a stream
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    tt__MetadataConfigurationOptions*    Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// class _trt__GetAudioOutputConfigurationOptions operations:
/// - soap_new__trt__GetAudioOutputConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(soap, _trt__GetAudioOutputConfigurationOptions*) serialize to a stream
class _trt__GetAudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(soap, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
/// class _trt__GetAudioDecoderConfigurationOptions operations:
/// - soap_new__trt__GetAudioDecoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(soap, _trt__GetAudioDecoderConfigurationOptions*) serialize to a stream
class _trt__GetAudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// class _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(soap, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
/// Element "Options" of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
/// class _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*) allocate
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, int num) allocate array
/// - soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a stream
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
/// Element "ConfigurationToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
/// class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*) allocate
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a stream
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
/// Element "TotalNumber" of XSD type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "JPEG" of XSD type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
/// class _trt__GetStreamUri operations:
/// - soap_new__trt__GetStreamUri(soap*) allocate
/// - soap_new__trt__GetStreamUri(soap*, int num) allocate array
/// - soap_new_req__trt__GetStreamUri(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetStreamUri(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetStreamUri(soap*, _trt__GetStreamUri*) deserialize from a stream
/// - int soap_write__trt__GetStreamUri(soap, _trt__GetStreamUri*) serialize to a stream
class _trt__GetStreamUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
/// Element "StreamSetup" of XSD type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
/// class _trt__GetStreamUriResponse operations:
/// - soap_new__trt__GetStreamUriResponse(soap*) allocate
/// - soap_new__trt__GetStreamUriResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetStreamUriResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetStreamUriResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetStreamUriResponse(soap, _trt__GetStreamUriResponse*) serialize to a stream
class _trt__GetStreamUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
/// class _trt__StartMulticastStreaming operations:
/// - soap_new__trt__StartMulticastStreaming(soap*) allocate
/// - soap_new__trt__StartMulticastStreaming(soap*, int num) allocate array
/// - soap_new_req__trt__StartMulticastStreaming(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StartMulticastStreaming(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreaming(soap, _trt__StartMulticastStreaming*) serialize to a stream
class _trt__StartMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
/// class _trt__StartMulticastStreamingResponse operations:
/// - soap_new__trt__StartMulticastStreamingResponse(soap*) allocate
/// - soap_new__trt__StartMulticastStreamingResponse(soap*, int num) allocate array
/// - soap_new_req__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreamingResponse(soap, _trt__StartMulticastStreamingResponse*) serialize to a stream
class _trt__StartMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
/// class _trt__StopMulticastStreaming operations:
/// - soap_new__trt__StopMulticastStreaming(soap*) allocate
/// - soap_new__trt__StopMulticastStreaming(soap*, int num) allocate array
/// - soap_new_req__trt__StopMulticastStreaming(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StopMulticastStreaming(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreaming(soap, _trt__StopMulticastStreaming*) serialize to a stream
class _trt__StopMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
/// class _trt__StopMulticastStreamingResponse operations:
/// - soap_new__trt__StopMulticastStreamingResponse(soap*) allocate
/// - soap_new__trt__StopMulticastStreamingResponse(soap*, int num) allocate array
/// - soap_new_req__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreamingResponse(soap, _trt__StopMulticastStreamingResponse*) serialize to a stream
class _trt__StopMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// class _trt__SetSynchronizationPoint operations:
/// - soap_new__trt__SetSynchronizationPoint(soap*) allocate
/// - soap_new__trt__SetSynchronizationPoint(soap*, int num) allocate array
/// - soap_new_req__trt__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPoint(soap, _trt__SetSynchronizationPoint*) serialize to a stream
class _trt__SetSynchronizationPoint
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// class _trt__SetSynchronizationPointResponse operations:
/// - soap_new__trt__SetSynchronizationPointResponse(soap*) allocate
/// - soap_new__trt__SetSynchronizationPointResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPointResponse(soap, _trt__SetSynchronizationPointResponse*) serialize to a stream
class _trt__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// class _trt__GetSnapshotUri operations:
/// - soap_new__trt__GetSnapshotUri(soap*) allocate
/// - soap_new__trt__GetSnapshotUri(soap*, int num) allocate array
/// - soap_new_req__trt__GetSnapshotUri(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetSnapshotUri(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUri(soap, _trt__GetSnapshotUri*) serialize to a stream
class _trt__GetSnapshotUri
{ public:
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
/// Element "ProfileToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// class _trt__GetSnapshotUriResponse operations:
/// - soap_new__trt__GetSnapshotUriResponse(soap*) allocate
/// - soap_new__trt__GetSnapshotUriResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetSnapshotUriResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetSnapshotUriResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUriResponse(soap, _trt__GetSnapshotUriResponse*) serialize to a stream
class _trt__GetSnapshotUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
/// Element "MediaUri" of XSD type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
/// class tt__VideoSource operations:
/// - soap_new_tt__VideoSource(soap*) allocate
/// - soap_new_tt__VideoSource(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSource(soap*, tt__VideoSource*) deserialize from a stream
/// - int soap_write_tt__VideoSource(soap, tt__VideoSource*) serialize to a stream
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
/// Element "Framerate" of XSD type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
/// Element "Imaging" of XSD type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
/// class tt__AudioSource operations:
/// - soap_new_tt__AudioSource(soap*) allocate
/// - soap_new_tt__AudioSource(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSource(soap*, tt__AudioSource*) deserialize from a stream
/// - int soap_write_tt__AudioSource(soap, tt__AudioSource*) serialize to a stream
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
/// Element "Channels" of XSD type xs:int.
    int                                  Channels                       1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__VideoSourceConfiguration operations:
/// - soap_new_tt__VideoSourceConfiguration(soap*) allocate
/// - soap_new_tt__VideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfiguration(soap, tt__VideoSourceConfiguration*) serialize to a stream
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
/// Element "Bounds" of XSD type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__VideoEncoderConfiguration operations:
/// - soap_new_tt__VideoEncoderConfiguration(soap*) allocate
/// - soap_new_tt__VideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfiguration(soap, tt__VideoEncoderConfiguration*) serialize to a stream
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
/// Element "Quality" of XSD type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "RateControl" of XSD type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "MPEG4" of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
/// Element "H264" of XSD type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// class tt__JpegOptions2 operations:
/// - soap_new_tt__JpegOptions2(soap*) allocate
/// - soap_new_tt__JpegOptions2(soap*, int num) allocate array
/// - soap_new_req_tt__JpegOptions2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegOptions2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegOptions2(soap*, tt__JpegOptions2*) deserialize from a stream
/// - int soap_write_tt__JpegOptions2(soap, tt__JpegOptions2*) serialize to a stream
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM tt__JpegOptions */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// class tt__Mpeg4Options2 operations:
/// - soap_new_tt__Mpeg4Options2(soap*) allocate
/// - soap_new_tt__Mpeg4Options2(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Options2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Options2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options2(soap, tt__Mpeg4Options2*) serialize to a stream
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;
    END OF INHERITED FROM tt__Mpeg4Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":H264Options.
///
/// class tt__H264Options2 operations:
/// - soap_new_tt__H264Options2(soap*) allocate
/// - soap_new_tt__H264Options2(soap*, int num) allocate array
/// - soap_new_req_tt__H264Options2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Options2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Options2(soap*, tt__H264Options2*) deserialize from a stream
/// - int soap_write_tt__H264Options2(soap, tt__H264Options2*) serialize to a stream
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
/// Element "GovLengthRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
/// Element "FrameRateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
/// Element "EncodingIntervalRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;
    END OF INHERITED FROM tt__H264Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "BitrateRange" of XSD type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AudioSourceConfiguration operations:
/// - soap_new_tt__AudioSourceConfiguration(soap*) allocate
/// - soap_new_tt__AudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfiguration(soap, tt__AudioSourceConfiguration*) serialize to a stream
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "SourceToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AudioEncoderConfiguration operations:
/// - soap_new_tt__AudioEncoderConfiguration(soap*) allocate
/// - soap_new_tt__AudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfiguration(soap, tt__AudioEncoderConfiguration*) serialize to a stream
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
/// Element "Encoding" of XSD type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
/// Element "Bitrate" of XSD type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
/// Element "SampleRate" of XSD type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__VideoAnalyticsConfiguration operations:
/// - soap_new_tt__VideoAnalyticsConfiguration(soap*) allocate
/// - soap_new_tt__VideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsConfiguration(soap, tt__VideoAnalyticsConfiguration*) serialize to a stream
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__MetadataConfiguration operations:
/// - soap_new_tt__MetadataConfiguration(soap*) allocate
/// - soap_new_tt__MetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) deserialize from a stream
/// - int soap_write_tt__MetadataConfiguration(soap, tt__MetadataConfiguration*) serialize to a stream
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
/// Element "PTZStatus" of XSD type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all,
///   none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
/// Element "Events" of XSD type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines if data to include from the analytics engine part shall be included in the stream
/// </BLOCKQUOTE></PRE>
/// Element "Analytics" of XSD type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
/// Element "SessionTimeout" of XSD type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
/// class tt__VideoOutput operations:
/// - soap_new_tt__VideoOutput(soap*) allocate
/// - soap_new_tt__VideoOutput(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutput(soap*, tt__VideoOutput*) deserialize from a stream
/// - int soap_write_tt__VideoOutput(soap, tt__VideoOutput*) serialize to a stream
class tt__VideoOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Layout" of XSD type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
/// Element "Resolution" of XSD type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
/// Element "RefreshRate" of XSD type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
/// Element "AspectRatio" of XSD type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    tt__VideoOutputExtension*            Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__VideoOutputConfiguration operations:
/// - soap_new_tt__VideoOutputConfiguration(soap*) allocate
/// - soap_new_tt__VideoOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoOutputConfiguration(soap, tt__VideoOutputConfiguration*) serialize to a stream
class tt__VideoOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
/// class tt__AudioOutput operations:
/// - soap_new_tt__AudioOutput(soap*) allocate
/// - soap_new_tt__AudioOutput(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutput(soap*, tt__AudioOutput*) deserialize from a stream
/// - int soap_write_tt__AudioOutput(soap, tt__AudioOutput*) serialize to a stream
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AudioOutputConfiguration operations:
/// - soap_new_tt__AudioOutputConfiguration(soap*) allocate
/// - soap_new_tt__AudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfiguration(soap, tt__AudioOutputConfiguration*) serialize to a stream
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
/// Element "OutputToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
/// Element "SendPrimacy" of XSD type xs:anyURI.
    xsd__anyURI*                         SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
/// Element "OutputLevel" of XSD type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
/// class tt__AudioDecoderConfiguration operations:
/// - soap_new_tt__AudioDecoderConfiguration(soap*) allocate
/// - soap_new_tt__AudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfiguration(soap, tt__AudioDecoderConfiguration*) serialize to a stream
class tt__AudioDecoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// class tt__NetworkInterface operations:
/// - soap_new_tt__NetworkInterface(soap*) allocate
/// - soap_new_tt__NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterface(soap*, tt__NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__NetworkInterface(soap, tt__NetworkInterface*) serialize to a stream
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
/// Element "Enabled" of XSD type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
/// Element "Info" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
/// Element "Link" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv4" of XSD type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
/// Element "IPv6" of XSD type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
///
/// class tt__CertificateUsage operations:
/// - soap_new_tt__CertificateUsage(soap*) allocate
/// - soap_new_tt__CertificateUsage(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateUsage(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateUsage(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateUsage(soap*, tt__CertificateUsage*) deserialize from a stream
/// - int soap_write_tt__CertificateUsage(soap, tt__CertificateUsage*) serialize to a stream
class tt__CertificateUsage
{ public:
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Attribute "Critical" of XSD type xs:boolean.
   @bool                                 Critical                       1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// class tt__RelayOutput operations:
/// - soap_new_tt__RelayOutput(soap*) allocate
/// - soap_new_tt__RelayOutput(soap*, int num) allocate array
/// - soap_new_req_tt__RelayOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelayOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelayOutput(soap*, tt__RelayOutput*) deserialize from a stream
/// - int soap_write_tt__RelayOutput(soap, tt__RelayOutput*) serialize to a stream
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Properties" of XSD type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// class tt__DigitalInput operations:
/// - soap_new_tt__DigitalInput(soap*) allocate
/// - soap_new_tt__DigitalInput(soap*, int num) allocate array
/// - soap_new_req_tt__DigitalInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DigitalInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DigitalInput(soap*, tt__DigitalInput*) deserialize from a stream
/// - int soap_write_tt__DigitalInput(soap, tt__DigitalInput*) serialize to a stream
class tt__DigitalInput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// class tt__PTZNode operations:
/// - soap_new_tt__PTZNode(soap*) allocate
/// - soap_new_tt__PTZNode(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNode(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNode(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNode(soap*, tt__PTZNode*) deserialize from a stream
/// - int soap_write_tt__PTZNode(soap, tt__PTZNode*) serialize to a stream
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
/// Element "SupportedPTZSpaces" of XSD type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
/// Element "MaximumNumberOfPresets" of XSD type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Element "HomeSupported" of XSD type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
/// Attribute "FixedHomePosition" of XSD type xs:boolean.
   @bool*                                FixedHomePosition              0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__PTZConfiguration operations:
/// - soap_new_tt__PTZConfiguration(soap*) allocate
/// - soap_new_tt__PTZConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) deserialize from a stream
/// - int soap_write_tt__PTZConfiguration(soap, tt__PTZConfiguration*) serialize to a stream
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
/// Element "NodeToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsolutePantTiltPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultAbsoluteZoomPositionSpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativePanTiltTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultRelativeZoomTranslationSpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousPanTiltVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultContinuousZoomVelocitySpace" of XSD type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZSpeed" of XSD type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
/// Element "DefaultPTZTimeout" of XSD type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
/// Element "PanTiltLimits" of XSD type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
/// Element "ZoomLimits" of XSD type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ObjectId.
///
/// class tt__Object operations:
/// - soap_new_tt__Object(soap*) allocate
/// - soap_new_tt__Object(soap*, int num) allocate array
/// - soap_new_req_tt__Object(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Object(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Object(soap*, tt__Object*) deserialize from a stream
/// - int soap_write_tt__Object(soap, tt__Object*) serialize to a stream
class tt__Object : public tt__ObjectId
{ public:
/*  INHERITED FROM tt__ObjectId:
/// Attribute "ObjectId" of XSD type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
    END OF INHERITED FROM tt__ObjectId */
/// Element "Appearance" of XSD type "http://www.onvif.org/ver10/schema":Appearance.
    tt__Appearance*                      Appearance                     0;	///< Optional element.
/// Element "Behaviour" of XSD type "http://www.onvif.org/ver10/schema":Behaviour.
    tt__Behaviour*                       Behaviour                      0;	///< Optional element.
/// Element "Extension" of XSD type "http://www.onvif.org/ver10/schema":ObjectExtension.
    tt__ObjectExtension*                 Extension                      0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
/// class tt__EventFilter operations:
/// - soap_new_tt__EventFilter(soap*) allocate
/// - soap_new_tt__EventFilter(soap*, int num) allocate array
/// - soap_new_req_tt__EventFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventFilter(soap*, tt__EventFilter*) deserialize from a stream
/// - int soap_write_tt__EventFilter(soap, tt__EventFilter*) serialize to a stream
class tt__EventFilter : public wsnt__FilterType
{ public:
/*  INHERITED FROM wsnt__FilterType:
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    END OF INHERITED FROM wsnt__FilterType */
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AnalyticsEngine operations:
/// - soap_new_tt__AnalyticsEngine(soap*) allocate
/// - soap_new_tt__AnalyticsEngine(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngine(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngine(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngine(soap, tt__AnalyticsEngine*) serialize to a stream
class tt__AnalyticsEngine : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of XSD type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AnalyticsEngineInput operations:
/// - soap_new_tt__AnalyticsEngineInput(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInput(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInput(soap, tt__AnalyticsEngineInput*) serialize to a stream
class tt__AnalyticsEngineInput : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "SourceIdentification" of XSD type "http://www.onvif.org/ver10/schema":SourceIdentification.
    tt__SourceIdentification*            SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of XSD type "http://www.onvif.org/ver10/schema":MetadataInput.
    tt__MetadataInput*                   MetadataInput                  1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of XSD type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// class tt__AnalyticsEngineControl operations:
/// - soap_new_tt__AnalyticsEngineControl(soap*) allocate
/// - soap_new_tt__AnalyticsEngineControl(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineControl(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineControl(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineControl(soap, tt__AnalyticsEngineControl*) serialize to a stream
class tt__AnalyticsEngineControl : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Element "Name" of XSD type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
/// Element "UseCount" of XSD type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
/// Attribute "token" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
/// Element "EngineToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
/// Element "EngineConfigToken" of XSD type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > InputToken                     1;
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > ReceiverToken                  1;
/// Element "Multicast" of XSD type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// Element "Subscription" of XSD type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          Subscription                   1;	///< Required element.
/// Element "Mode" of XSD type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// @todo <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__SubscribeCreationFailedFaultType operations:
/// - soap_new_wsnt__SubscribeCreationFailedFaultType(soap*) allocate
/// - soap_new_wsnt__SubscribeCreationFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(soap, wsnt__SubscribeCreationFailedFaultType*) serialize to a stream
class wsnt__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__SubscribeCreationFailedFaultType_Description operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, _wsrfbf__SubscribeCreationFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_Description(soap, _wsrfbf__SubscribeCreationFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__InvalidFilterFaultType operations:
/// - soap_new_wsnt__InvalidFilterFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidFilterFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidFilterFaultType(soap, wsnt__InvalidFilterFaultType*) serialize to a stream
class wsnt__InvalidFilterFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidFilterFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, _wsrfbf__InvalidFilterFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_ErrorCode(soap, _wsrfbf__InvalidFilterFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__InvalidFilterFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_Description(soap*, _wsrfbf__InvalidFilterFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_Description(soap, _wsrfbf__InvalidFilterFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidFilterFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, _wsrfbf__InvalidFilterFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_FaultCause(soap, _wsrfbf__InvalidFilterFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 1..unbounded.
    std::vector<xsd__QName             > UnknownFilter                  1;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*) allocate
/// - soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a stream
class wsnt__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__InvalidTopicExpressionFaultType operations:
/// - soap_new_wsnt__InvalidTopicExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidTopicExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(soap, wsnt__InvalidTopicExpressionFaultType*) serialize to a stream
class wsnt__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__InvalidTopicExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, _wsrfbf__InvalidTopicExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_Description(soap, _wsrfbf__InvalidTopicExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__TopicNotSupportedFaultType operations:
/// - soap_new_wsnt__TopicNotSupportedFaultType(soap*) allocate
/// - soap_new_wsnt__TopicNotSupportedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicNotSupportedFaultType(soap, wsnt__TopicNotSupportedFaultType*) serialize to a stream
class wsnt__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__TopicNotSupportedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__TopicNotSupportedFaultType_Description operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_Description(soap*, _wsrfbf__TopicNotSupportedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_Description(soap, _wsrfbf__TopicNotSupportedFaultType_Description*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__TopicNotSupportedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*) allocate
/// - soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a stream
class wsnt__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a stream
class wsnt__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__InvalidMessageContentExpressionFaultType operations:
/// - soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a stream
class wsnt__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*) allocate
/// - soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a stream
class wsnt__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
    std::vector<xsd__QName             > UnrecognizedPolicy             0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnsupportedPolicyRequestFaultType operations:
/// - soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*) allocate
/// - soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a stream
class wsnt__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_Description operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
    std::vector<xsd__QName             > UnsupportedPolicy              0;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__NotifyMessageNotSupportedFaultType operations:
/// - soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*) allocate
/// - soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a stream
class wsnt__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_Description operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*) allocate
/// - soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a stream
class wsnt__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*) allocate
/// - soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a stream
class wsnt__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnableToGetMessagesFaultType operations:
/// - soap_new_wsnt__UnableToGetMessagesFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToGetMessagesFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(soap, wsnt__UnableToGetMessagesFaultType*) serialize to a stream
class wsnt__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnableToGetMessagesFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, _wsrfbf__UnableToGetMessagesFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_Description(soap, _wsrfbf__UnableToGetMessagesFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToGetMessagesFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnableToDestroyPullPointFaultType operations:
/// - soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, wsnt__UnableToDestroyPullPointFaultType*) serialize to a stream
class wsnt__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnableToDestroyPullPointFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnableToCreatePullPointFaultType operations:
/// - soap_new_wsnt__UnableToCreatePullPointFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToCreatePullPointFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(soap, wsnt__UnableToCreatePullPointFaultType*) serialize to a stream
class wsnt__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnableToCreatePullPointFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, _wsrfbf__UnableToCreatePullPointFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_Description(soap, _wsrfbf__UnableToCreatePullPointFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnacceptableTerminationTimeFaultType operations:
/// - soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*) allocate
/// - soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a stream
class wsnt__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_Description operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of XSD type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of XSD type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__UnableToDestroySubscriptionFaultType operations:
/// - soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a stream
class wsnt__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__PauseFailedFaultType operations:
/// - soap_new_wsnt__PauseFailedFaultType(soap*) allocate
/// - soap_new_wsnt__PauseFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__PauseFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__PauseFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__PauseFailedFaultType(soap, wsnt__PauseFailedFaultType*) serialize to a stream
class wsnt__PauseFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__PauseFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, _wsrfbf__PauseFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_ErrorCode(soap, _wsrfbf__PauseFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__PauseFailedFaultType_Description operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_Description(soap*, _wsrfbf__PauseFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_Description(soap, _wsrfbf__PauseFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__PauseFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_FaultCause(soap*, _wsrfbf__PauseFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_FaultCause(soap, _wsrfbf__PauseFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsnt__ResumeFailedFaultType operations:
/// - soap_new_wsnt__ResumeFailedFaultType(soap*) allocate
/// - soap_new_wsnt__ResumeFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__ResumeFailedFaultType(soap, wsnt__ResumeFailedFaultType*) serialize to a stream
class wsnt__ResumeFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResumeFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, _wsrfbf__ResumeFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_ErrorCode(soap, _wsrfbf__ResumeFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__ResumeFailedFaultType_Description operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_Description(soap*, _wsrfbf__ResumeFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_Description(soap, _wsrfbf__ResumeFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResumeFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, _wsrfbf__ResumeFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_FaultCause(soap, _wsrfbf__ResumeFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// class wstop__TopicNamespaceType operations:
/// - soap_new_wstop__TopicNamespaceType(soap*) allocate
/// - soap_new_wstop__TopicNamespaceType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicNamespaceType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicNamespaceType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) deserialize from a stream
/// - int soap_write_wstop__TopicNamespaceType(soap, wstop__TopicNamespaceType*) serialize to a stream
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Vector of Topic of length 0..unbounded.
    std::vector<
/// class _wstop__TopicNamespaceType_Topic operations:
/// - soap_new__wstop__TopicNamespaceType_Topic(soap*) allocate
/// - soap_new__wstop__TopicNamespaceType_Topic(soap*, int num) allocate array
/// - soap_new_req__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set required members
/// - soap_new_set__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set all public members
/// - int soap_read__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a stream
/// - int soap_write__wstop__TopicNamespaceType_Topic(soap, _wstop__TopicNamespaceType_Topic*) serialize to a stream
    class _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
    std::vector<wstop__TopicType*      > Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @bool                                 final_                         0 = false;	///< Default attribute value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of XSD type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }>                                  *Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of XSD type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of XSD type xs:boolean.
   @bool                                 final_                         0 = false;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// class wstop__TopicType operations:
/// - soap_new_wstop__TopicType(soap*) allocate
/// - soap_new_wstop__TopicType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicType(soap*, wstop__TopicType*) deserialize from a stream
/// - int soap_write_wstop__TopicType(soap, wstop__TopicType*) serialize to a stream
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element "MessagePattern" of XSD type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
    std::vector<wstop__TopicType*      > Topic                          0;
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Attribute "name" of XSD type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of XSD type xs:boolean.
   @bool                                 final_                         0 = false;	///< Default attribute value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// class wstop__TopicSetType operations:
/// - soap_new_wstop__TopicSetType(soap*) allocate
/// - soap_new_wstop__TopicSetType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicSetType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicSetType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicSetType(soap*, wstop__TopicSetType*) deserialize from a stream
/// - int soap_write_wstop__TopicSetType(soap, wstop__TopicSetType*) serialize to a stream
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of XSD type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsrfr__ResourceUnknownFaultType operations:
/// - soap_new_wsrfr__ResourceUnknownFaultType(soap*) allocate
/// - soap_new_wsrfr__ResourceUnknownFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfr__ResourceUnknownFaultType(soap*, wsrfr__ResourceUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnknownFaultType(soap, wsrfr__ResourceUnknownFaultType*) serialize to a stream
class wsrfr__ResourceUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResourceUnknownFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__ResourceUnknownFaultType_Description operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_Description(soap*, _wsrfbf__ResourceUnknownFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_Description(soap, _wsrfbf__ResourceUnknownFaultType_Description*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResourceUnknownFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, _wsrfbf__ResourceUnknownFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_FaultCause(soap, _wsrfbf__ResourceUnknownFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// class wsrfr__ResourceUnavailableFaultType operations:
/// - soap_new_wsrfr__ResourceUnavailableFaultType(soap*) allocate
/// - soap_new_wsrfr__ResourceUnavailableFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfr__ResourceUnavailableFaultType(soap*, wsrfr__ResourceUnavailableFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnavailableFaultType(soap, wsrfr__ResourceUnavailableFaultType*) serialize to a stream
class wsrfr__ResourceUnavailableFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// @todo <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Element "Timestamp" of XSD type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResourceUnavailableFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute "dialect" of XSD type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
/// class _wsrfbf__ResourceUnavailableFaultType_Description operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_Description(soap*, _wsrfbf__ResourceUnavailableFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_Description(soap, _wsrfbf__ResourceUnavailableFaultType_Description*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_Description
    {
/// __item wraps "xs:string" simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResourceUnavailableFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_FaultCause
    {
/// @todo <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    }                                   *FaultCause                     0;	///< Optional element.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType is a complexType with simpleContent.
///
/// class wsd__ScopesType operations:
/// - soap_new_wsd__ScopesType(soap*) allocate
/// - soap_new_wsd__ScopesType(soap*, int num) allocate array
/// - soap_new_req_wsd__ScopesType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__ScopesType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__ScopesType(soap*, wsd__ScopesType*) deserialize from a stream
/// - int soap_write_wsd__ScopesType(soap, wsd__ScopesType*) serialize to a stream
class wsd__ScopesType
{ public:
/// __item wraps ""http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType" simpleContent.
    wsd__UriListType                     __item                        ;
/// Attribute "MatchBy" of XSD type xs:anyURI.
   @xsd__anyURI*                         MatchBy                        0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType is a complexType with complexContent restriction of XSD type xs:anyType.
///
/// class wsd__AppSequenceType operations:
/// - soap_new_wsd__AppSequenceType(soap*) allocate
/// - soap_new_wsd__AppSequenceType(soap*, int num) allocate array
/// - soap_new_req_wsd__AppSequenceType(soap*, ...) allocate, set required members
/// - soap_new_set_wsd__AppSequenceType(soap*, ...) allocate, set all public members
/// - int soap_read_wsd__AppSequenceType(soap*, wsd__AppSequenceType*) deserialize from a stream
/// - int soap_write_wsd__AppSequenceType(soap, wsd__AppSequenceType*) serialize to a stream
class wsd__AppSequenceType
{ public:
/// Attribute "InstanceId" of XSD type xs:unsignedInt.
   @unsigned int                         InstanceId                     1;	///< Required attribute.
/// Attribute "SequenceId" of XSD type xs:anyURI.
   @xsd__anyURI*                         SequenceId                     0;	///< Optional attribute.
/// Attribute "MessageNumber" of XSD type xs:unsignedInt.
   @unsigned int                         MessageNumber                  1;	///< Required attribute.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":ServiceNameType is a complexType with simpleContent.
///
/// class wsa__ServiceNameType operations:
/// - soap_new_wsa__ServiceNameType(soap*) allocate
/// - soap_new_wsa__ServiceNameType(soap*, int num) allocate array
/// - soap_new_req_wsa__ServiceNameType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__ServiceNameType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__ServiceNameType(soap*, wsa__ServiceNameType*) deserialize from a stream
/// - int soap_write_wsa__ServiceNameType(soap, wsa__ServiceNameType*) serialize to a stream
class wsa__ServiceNameType
{ public:
/// __item wraps "xs:QName" simpleContent.
    xsd__QName                           __item                        ;
/// Attribute "PortName" of XSD type xs:NCName.
   @xsd__NCName*                         PortName                       0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":Relationship is a complexType with simpleContent.
///
/// class wsa__Relationship operations:
/// - soap_new_wsa__Relationship(soap*) allocate
/// - soap_new_wsa__Relationship(soap*, int num) allocate array
/// - soap_new_req_wsa__Relationship(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__Relationship(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__Relationship(soap*, wsa__Relationship*) deserialize from a stream
/// - int soap_write_wsa__Relationship(soap, wsa__Relationship*) serialize to a stream
class wsa__Relationship
{ public:
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute "RelationshipType" of XSD type xs:QName.
   @xsd__QName*                          RelationshipType               0;	///< Optional attribute.
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfterType is a complexType with simpleContent.
///
/// class wsa__ReplyAfterType operations:
/// - soap_new_wsa__ReplyAfterType(soap*) allocate
/// - soap_new_wsa__ReplyAfterType(soap*, int num) allocate array
/// - soap_new_req_wsa__ReplyAfterType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__ReplyAfterType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__ReplyAfterType(soap*, wsa__ReplyAfterType*) deserialize from a stream
/// - int soap_write_wsa__ReplyAfterType(soap, wsa__ReplyAfterType*) serialize to a stream
class wsa__ReplyAfterType
{ public:
/// __item wraps "xs:nonNegativeInteger" simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfterType is a complexType with simpleContent.
///
/// class wsa__RetryAfterType operations:
/// - soap_new_wsa__RetryAfterType(soap*) allocate
/// - soap_new_wsa__RetryAfterType(soap*, int num) allocate array
/// - soap_new_req_wsa__RetryAfterType(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__RetryAfterType(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__RetryAfterType(soap*, wsa__RetryAfterType*) deserialize from a stream
/// - int soap_write_wsa__RetryAfterType(soap, wsa__RetryAfterType*) serialize to a stream
class wsa__RetryAfterType
{ public:
/// __item wraps "xs:nonNegativeInteger" simpleContent.
    xsd__nonNegativeInteger              __item                        ;
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedQName is a complexType with simpleContent.
///
/// class wsa__AttributedQName operations:
/// - soap_new_wsa__AttributedQName(soap*) allocate
/// - soap_new_wsa__AttributedQName(soap*, int num) allocate array
/// - soap_new_req_wsa__AttributedQName(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__AttributedQName(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__AttributedQName(soap*, wsa__AttributedQName*) deserialize from a stream
/// - int soap_write_wsa__AttributedQName(soap, wsa__AttributedQName*) serialize to a stream
class wsa__AttributedQName
{ public:
/// __item wraps "xs:QName" simpleContent.
    xsd__QName                           __item                        ;
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI is a complexType with simpleContent.
///
/// class wsa__AttributedURI operations:
/// - soap_new_wsa__AttributedURI(soap*) allocate
/// - soap_new_wsa__AttributedURI(soap*, int num) allocate array
/// - soap_new_req_wsa__AttributedURI(soap*, ...) allocate, set required members
/// - soap_new_set_wsa__AttributedURI(soap*, ...) allocate, set all public members
/// - int soap_read_wsa__AttributedURI(soap*, wsa__AttributedURI*) deserialize from a stream
/// - int soap_write_wsa__AttributedURI(soap, wsa__AttributedURI*) serialize to a stream
class wsa__AttributedURI
{ public:
/// __item wraps "xs:anyURI" simpleContent.
    xsd__anyURI                          __item                        ;
/// @todo <anyAttribute namespace="##other">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
typedef tds__DeviceServiceCapabilities _tds__Capabilities;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
typedef tt__VideoSourceConfiguration _tt__VideoSourceConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
typedef tt__AudioSourceConfiguration _tt__AudioSourceConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
typedef tt__VideoEncoderConfiguration _tt__VideoEncoderConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
typedef tt__AudioEncoderConfiguration _tt__AudioEncoderConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of XSD type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
typedef tt__VideoAnalyticsConfiguration _tt__VideoAnalyticsConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of XSD type "http://www.onvif.org/ver10/schema":PTZConfiguration.
typedef tt__PTZConfiguration _tt__PTZConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of XSD type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
typedef tt__MetadataConfiguration _tt__MetadataConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
typedef tt__AudioOutputConfiguration _tt__AudioOutputConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of XSD type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
typedef tt__AudioDecoderConfiguration _tt__AudioDecoderConfiguration;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of XSD type "http://www.onvif.org/ver10/schema":Polygon.
typedef tt__Polygon _tt__Polygon;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of XSD type "http://www.onvif.org/ver10/schema":Polyline.
typedef tt__Polyline _tt__Polyline;

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of XSD type "http://www.onvif.org/ver10/schema":MetadataStream.
typedef tt__MetadataStream _tt__MetadataStream;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
typedef wsnt__TopicExpressionType _wsnt__TopicExpression;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of XSD type xs:boolean.
typedef bool _wsnt__FixedTopicSet;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of XSD type xs:anyURI.
typedef xsd__anyURI _wsnt__TopicExpressionDialect;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
typedef wsa5__EndpointReferenceType _wsnt__ConsumerReference;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of XSD type "http://docs.oasis-open.org/wsn/b-2":FilterType.
typedef wsnt__FilterType _wsnt__Filter;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
typedef wsnt__SubscriptionPolicyType _wsnt__SubscriptionPolicy;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of XSD type xs:dateTime.
typedef time_t _wsnt__CreationTime;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
typedef wsa5__EndpointReferenceType _wsnt__SubscriptionReference;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
typedef wsnt__TopicExpressionType _wsnt__Topic;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of XSD type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
typedef wsa5__EndpointReferenceType _wsnt__ProducerReference;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of XSD type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
typedef wsnt__NotificationMessageHolderType _wsnt__NotificationMessage;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of XSD type xs:dateTime.
typedef time_t _wsnt__CurrentTime;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of XSD type xs:dateTime.
typedef time_t _wsnt__TerminationTime;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
typedef wsnt__QueryExpressionType _wsnt__ProducerProperties;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of XSD type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
typedef wsnt__QueryExpressionType _wsnt__MessageContent;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
typedef wsnt__SubscribeCreationFailedFaultType _wsnt__SubscribeCreationFailedFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
typedef wsnt__InvalidFilterFaultType _wsnt__InvalidFilterFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
typedef wsnt__TopicExpressionDialectUnknownFaultType _wsnt__TopicExpressionDialectUnknownFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
typedef wsnt__InvalidTopicExpressionFaultType _wsnt__InvalidTopicExpressionFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
typedef wsnt__TopicNotSupportedFaultType _wsnt__TopicNotSupportedFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
typedef wsnt__MultipleTopicsSpecifiedFaultType _wsnt__MultipleTopicsSpecifiedFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
typedef wsnt__InvalidProducerPropertiesExpressionFaultType _wsnt__InvalidProducerPropertiesExpressionFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
typedef wsnt__InvalidMessageContentExpressionFaultType _wsnt__InvalidMessageContentExpressionFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
typedef wsnt__UnrecognizedPolicyRequestFaultType _wsnt__UnrecognizedPolicyRequestFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
typedef wsnt__UnsupportedPolicyRequestFaultType _wsnt__UnsupportedPolicyRequestFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
typedef wsnt__NotifyMessageNotSupportedFaultType _wsnt__NotifyMessageNotSupportedFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
typedef wsnt__UnacceptableInitialTerminationTimeFaultType _wsnt__UnacceptableInitialTerminationTimeFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of XSD type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
typedef wsnt__NoCurrentMessageOnTopicFaultType _wsnt__NoCurrentMessageOnTopicFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
typedef wsnt__UnableToGetMessagesFaultType _wsnt__UnableToGetMessagesFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
typedef wsnt__UnableToDestroyPullPointFaultType _wsnt__UnableToDestroyPullPointFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
typedef wsnt__UnableToCreatePullPointFaultType _wsnt__UnableToCreatePullPointFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
typedef wsnt__UnacceptableTerminationTimeFaultType _wsnt__UnacceptableTerminationTimeFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of XSD type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
typedef wsnt__UnableToDestroySubscriptionFaultType _wsnt__UnableToDestroySubscriptionFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
typedef wsnt__PauseFailedFaultType _wsnt__PauseFailedFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of XSD type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
typedef wsnt__ResumeFailedFaultType _wsnt__ResumeFailedFault;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of XSD type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
typedef wsrfbf__BaseFaultType _wsrfbf__BaseFault;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
typedef wstop__TopicNamespaceType _wstop__TopicNamespace;

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of XSD type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
typedef wstop__TopicSetType _wstop__TopicSet;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
typedef xsd__anyURI _wstop__topicNamespaceLocation;

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
typedef bool _wstop__topic;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
typedef tev__Capabilities _tev__Capabilities;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of XSD type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
typedef wsrfr__ResourceUnknownFaultType _wsrfr__ResourceUnknownFault;

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of XSD type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
typedef wsrfr__ResourceUnavailableFaultType _wsrfr__ResourceUnavailableFault;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":Capabilities of XSD type "http://www.onvif.org/ver20/analytics/wsdl":Capabilities.
typedef tan__Capabilities _tan__Capabilities;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
typedef wsd__HelloType _dn__Hello;

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
typedef wsd__ResolveType _dn__HelloResponse;

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
typedef wsd__ProbeType _dn__Probe;

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
typedef wsd__ProbeMatchesType _dn__ProbeResponse;

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
typedef wsd__ByeType _dn__Bye;

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
typedef wsd__ResolveType _dn__ByeResponse;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Hello of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
typedef wsd__HelloType _wsd__Hello;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Bye of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
typedef wsd__ByeType _wsd__Bye;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Probe of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
typedef wsd__ProbeType _wsd__Probe;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatches of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
typedef wsd__ProbeMatchesType _wsd__ProbeMatches;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Resolve of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
typedef wsd__ResolveType _wsd__Resolve;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatches of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveMatchesType.
typedef wsd__ResolveMatchesType _wsd__ResolveMatches;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Types of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":QNameListType.
typedef wsd__QNameListType _wsd__Types;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Scopes of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ScopesType.
typedef wsd__ScopesType _wsd__Scopes;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":XAddrs of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
typedef wsd__UriListType _wsd__XAddrs;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":MetadataVersion of XSD type xs:unsignedInt.
typedef unsigned int _wsd__MetadataVersion;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":SupportedMatchingRules of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":UriListType.
typedef wsd__UriListType _wsd__SupportedMatchingRules;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Security of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SecurityType.
typedef wsd__SecurityType _wsd__Security;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":Sig of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":SigType.
typedef wsd__SigType _wsd__Sig;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequence of XSD type "http://schemas.xmlsoap.org/ws/2005/04/discovery":AppSequenceType.
typedef wsd__AppSequenceType _wsd__AppSequence;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.xmlsoap.org/ws/2005/04/discovery                          *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://schemas.xmlsoap.org/ws/2005/04/discovery":Id of simpleType xs:ID.
typedef xsd__ID _wsd__Id;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReference of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
typedef wsa__EndpointReferenceType _wsa__EndpointReference;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":MessageID of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
typedef wsa__AttributedURI _wsa__MessageID;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":RelatesTo of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":Relationship.
typedef wsa__Relationship _wsa__RelatesTo;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":To of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
typedef wsa__AttributedURI _wsa__To;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":Action of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":AttributedURI.
typedef wsa__AttributedURI _wsa__Action;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":From of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
typedef wsa__EndpointReferenceType _wsa__From;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyTo of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
typedef wsa__EndpointReferenceType _wsa__ReplyTo;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":FaultTo of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":EndpointReferenceType.
typedef wsa__EndpointReferenceType _wsa__FaultTo;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfter of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":ReplyAfterType.
typedef wsa__ReplyAfterType _wsa__ReplyAfter;

/// @brief Top-level root element "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfter of XSD type "http://schemas.xmlsoap.org/ws/2004/08/addressing":RetryAfterType.
typedef wsa__RetryAfterType _wsa__RetryAfter;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.xmlsoap.org/ws/2004/08/addressing                         *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://schemas.xmlsoap.org/ws/2004/08/addressing":Action of simpleType xs:anyURI.
// "_wsa__Action" attribute definition intentionally left blank.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of XSD type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
typedef trt__Capabilities _trt__Capabilities;


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap dn   service name:	RemoteDiscoveryBinding 
//gsoap dn   service type:	RemoteDiscoveryPort 
//gsoap dn   service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap dn   service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tan  service name:	RuleEngineBinding 
//gsoap tan  service type:	RuleEnginePort 
//gsoap tan  service namespace:	http://www.onvif.org/ver20/analytics/wsdl 
//gsoap tan  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev  service name:	PullPointSubscriptionBinding 
//gsoap tev  service type:	PullPointSubscription 
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl 
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref RemoteDiscoveryBinding

  - @ref RuleEngineBinding

  - @ref DeviceBinding

  - @ref PullPointSubscriptionBinding

  - @ref MediaBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"


*/

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __dn__Hello

  - @ref __dn__Bye

  - @ref __dn__Probe

@section RemoteDiscoveryBinding_ports Endpoints of Binding "RemoteDiscoveryBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_operations Operations of Binding "RuleEngineBinding"

  - @ref __tan__GetSupportedRules

  - @ref __tan__CreateRules

  - @ref __tan__DeleteRules

  - @ref __tan__GetRules

  - @ref __tan__ModifyRules

  - @ref __tan__GetServiceCapabilities

  - @ref __tan__GetSupportedAnalyticsModules

  - @ref __tan__CreateAnalyticsModules

  - @ref __tan__DeleteAnalyticsModules

  - @ref __tan__GetAnalyticsModules

  - @ref __tan__ModifyAnalyticsModules

@section RuleEngineBinding_ports Endpoints of Binding "RuleEngineBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

@section DeviceBinding_ports Endpoints of Binding "DeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe_

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Endpoints of Binding "PullPointSubscriptionBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

@section MediaBinding_ports Endpoints of Binding "MediaBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __dn__Hello                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__dn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___dn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsd__HelloType*                     dn__Hello,
    // output parameters:
    wsd__ResolveType                   &dn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __dn__Hello(
    struct soap *soap,
    // input parameters:
    wsd__HelloType*                     dn__Hello,
    // output parameters:
    wsd__ResolveType                   &dn__HelloResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap dn   service method-protocol:	Hello SOAP
//gsoap dn   service method-style:	Hello document
//gsoap dn   service method-encoding:	Hello literal
//gsoap dn   service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap dn   service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __dn__Hello(
    wsd__HelloType*                     dn__Hello,	///< Input parameter
    wsd__ResolveType                   &dn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __dn__Bye                                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__dn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___dn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsd__ByeType*                       dn__Bye,
    // output parameters:
    wsd__ResolveType                   &dn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __dn__Bye(
    struct soap *soap,
    // input parameters:
    wsd__ByeType*                       dn__Bye,
    // output parameters:
    wsd__ResolveType                   &dn__ByeResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap dn   service method-protocol:	Bye SOAP
//gsoap dn   service method-style:	Bye document
//gsoap dn   service method-encoding:	Bye literal
//gsoap dn   service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap dn   service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __dn__Bye(
    wsd__ByeType*                       dn__Bye,	///< Input parameter
    wsd__ResolveType                   &dn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __dn__Probe                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__dn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___dn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsd__ProbeType*                     dn__Probe,
    // output parameters:
    wsd__ProbeMatchesType              &dn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __dn__Probe(
    struct soap *soap,
    // input parameters:
    wsd__ProbeType*                     dn__Probe,
    // output parameters:
    wsd__ProbeMatchesType              &dn__ProbeResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap dn   service method-protocol:	Probe SOAP
//gsoap dn   service method-style:	Probe document
//gsoap dn   service method-encoding:	Probe literal
//gsoap dn   service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap dn   service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __dn__Probe(
    wsd__ProbeType*                     dn__Probe,	///< Input parameter
    wsd__ProbeMatchesType              &dn__ProbeResponse	///< Output parameter
);

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RuleEngineBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetSupportedRules                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetSupportedRules" of service binding "RuleEngineBinding".
				List all rules that are supported by the given VideoAnalyticsConfiguration.
				The result of this method may depend on the overall
Video analytics configuration of the device,
				which is available via the current set of profiles.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetSupportedRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // output parameters:
    _tan__GetSupportedRulesResponse    &tan__GetSupportedRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetSupportedRules(
    struct soap *soap,
    // input parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // output parameters:
    _tan__GetSupportedRulesResponse    &tan__GetSupportedRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	GetSupportedRules SOAP
//gsoap tan  service method-style:	GetSupportedRules document
//gsoap tan  service method-encoding:	GetSupportedRules literal
//gsoap tan  service method-input-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules
//gsoap tan  service method-output-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRulesResponse
int __tan__GetSupportedRules(
    _tan__GetSupportedRules*            tan__GetSupportedRules,	///< Input parameter
    _tan__GetSupportedRulesResponse    &tan__GetSupportedRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__CreateRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__CreateRules" of service binding "RuleEngineBinding".
				Add one or more rules to an existing VideoAnalyticsConfiguration.
				The available supported types can be retrieved via
<a href="#op.GetSupportedRules">GetSupportedRules</a>,
				where the Name of the supported rule correspond
to the type of an rule instance.<br/>
				Pass unique module names which can be later used
as reference.
				The Parameters of the rules must match those of
the corresponding description.
				<br/>
				Although this method is mandatory a device implementation
must not support adding rules.
				Instead it can provide a fixed set of predefined
configurations via the media service function
				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/CreateRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__CreateRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // output parameters:
    _tan__CreateRulesResponse          &tan__CreateRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__CreateRules(
    struct soap *soap,
    // input parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // output parameters:
    _tan__CreateRulesResponse          &tan__CreateRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	CreateRules SOAP
//gsoap tan  service method-style:	CreateRules document
//gsoap tan  service method-encoding:	CreateRules literal
//gsoap tan  service method-input-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRules
//gsoap tan  service method-output-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRulesResponse
int __tan__CreateRules(
    _tan__CreateRules*                  tan__CreateRules,	///< Input parameter
    _tan__CreateRulesResponse          &tan__CreateRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__DeleteRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__DeleteRules" of service binding "RuleEngineBinding".
				Remove one or more rules from a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__DeleteRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // output parameters:
    _tan__DeleteRulesResponse          &tan__DeleteRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__DeleteRules(
    struct soap *soap,
    // input parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // output parameters:
    _tan__DeleteRulesResponse          &tan__DeleteRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	DeleteRules SOAP
//gsoap tan  service method-style:	DeleteRules document
//gsoap tan  service method-encoding:	DeleteRules literal
//gsoap tan  service method-input-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRules
//gsoap tan  service method-output-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRulesResponse
int __tan__DeleteRules(
    _tan__DeleteRules*                  tan__DeleteRules,	///< Input parameter
    _tan__DeleteRulesResponse          &tan__DeleteRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetRules                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetRules" of service binding "RuleEngineBinding".
				List the currently assigned set of rules of a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__GetRules*                     tan__GetRules,
    // output parameters:
    _tan__GetRulesResponse             &tan__GetRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetRules(
    struct soap *soap,
    // input parameters:
    _tan__GetRules*                     tan__GetRules,
    // output parameters:
    _tan__GetRulesResponse             &tan__GetRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	GetRules SOAP
//gsoap tan  service method-style:	GetRules document
//gsoap tan  service method-encoding:	GetRules literal
//gsoap tan  service method-input-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRules
//gsoap tan  service method-output-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRulesResponse
int __tan__GetRules(
    _tan__GetRules*                     tan__GetRules,	///< Input parameter
    _tan__GetRulesResponse             &tan__GetRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__ModifyRules                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__ModifyRules" of service binding "RuleEngineBinding".
				Modify one or more rules of a VideoAnalyticsConfiguration.
The rules are referenced by their names.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyRulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__ModifyRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // output parameters:
    _tan__ModifyRulesResponse          &tan__ModifyRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__ModifyRules(
    struct soap *soap,
    // input parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // output parameters:
    _tan__ModifyRulesResponse          &tan__ModifyRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	ModifyRules SOAP
//gsoap tan  service method-style:	ModifyRules document
//gsoap tan  service method-encoding:	ModifyRules literal
//gsoap tan  service method-input-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRules
//gsoap tan  service method-output-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRulesResponse
int __tan__ModifyRules(
    _tan__ModifyRules*                  tan__ModifyRules,	///< Input parameter
    _tan__ModifyRulesResponse          &tan__ModifyRulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetServiceCapabilities" of service binding "RuleEngineBinding".
Returns the capabilities of the analytics service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__GetServiceCapabilities*       tan__GetServiceCapabilities,
    // output parameters:
    _tan__GetServiceCapabilitiesResponse&tan__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tan__GetServiceCapabilities*       tan__GetServiceCapabilities,
    // output parameters:
    _tan__GetServiceCapabilitiesResponse&tan__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tan  service method-style:	GetServiceCapabilities document
//gsoap tan  service method-encoding:	GetServiceCapabilities literal
//gsoap tan  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities
//gsoap tan  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilitiesResponse
int __tan__GetServiceCapabilities(
    _tan__GetServiceCapabilities*       tan__GetServiceCapabilities,	///< Input parameter
    _tan__GetServiceCapabilitiesResponse&tan__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetSupportedAnalyticsModules                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetSupportedAnalyticsModules" of service binding "RuleEngineBinding".
				List all analytics modules that are supported by
the given VideoAnalyticsConfiguration.
				The result of this method may depend on the overall
Video analytics configuration of the device,
				which is available via the current set of profiles.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetSupportedAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // output parameters:
    _tan__GetSupportedAnalyticsModulesResponse&tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetSupportedAnalyticsModules(
    struct soap *soap,
    // input parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // output parameters:
    _tan__GetSupportedAnalyticsModulesResponse&tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	GetSupportedAnalyticsModules SOAP
//gsoap tan  service method-style:	GetSupportedAnalyticsModules document
//gsoap tan  service method-encoding:	GetSupportedAnalyticsModules literal
//gsoap tan  service method-input-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules
//gsoap tan  service method-output-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModulesResponse
int __tan__GetSupportedAnalyticsModules(
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,	///< Input parameter
    _tan__GetSupportedAnalyticsModulesResponse&tan__GetSupportedAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__CreateAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__CreateAnalyticsModules" of service binding "RuleEngineBinding".
				Add one or more analytics modules to an existing
VideoAnalyticsConfiguration.
				The available supported types can be retrieved via
<a href="#op.GetSupportedAnalyticsModules">GetSupportedAnalyticsModules</a>,
				where the Name of the supported AnalyticsModules
correspond to the type of an AnalyticsModule instance.<br/>
				Pass unique module names which can be later used
as reference. The Parameters of the analytics module must match those of the corresponding
AnalyticsModuleDescription.
				<br/>
				Although this method is mandatory a device implementation
must not support adding modules.
				Instead it can provide a fixed set of predefined
configurations via the media service function
				<a href="media.wsdl#op.GetCompatibleVideoAnalyticsConfigurations">GetCompatibleVideoAnalyticsConfigurations</a>.
				<br/>
				The device shall ensure that a corresponding analytics
engine starts operation when a client
				subscribes directly or indirectly for events produced
by the analytics or rule engine or when a
				client requests the corresponding scene description
stream.
				An analytics module must be attached to a Video
source using the media profiles before it can be used.
				In case differing analytics configurations are attached
to the same profile it is undefined which
				of the analytics module configuration becomes active
if no stream is activated or multiple streams
				with different profiles are activated at the same
time.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__CreateAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // output parameters:
    _tan__CreateAnalyticsModulesResponse&tan__CreateAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__CreateAnalyticsModules(
    struct soap *soap,
    // input parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // output parameters:
    _tan__CreateAnalyticsModulesResponse&tan__CreateAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	CreateAnalyticsModules SOAP
//gsoap tan  service method-style:	CreateAnalyticsModules document
//gsoap tan  service method-encoding:	CreateAnalyticsModules literal
//gsoap tan  service method-input-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules
//gsoap tan  service method-output-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModulesResponse
int __tan__CreateAnalyticsModules(
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,	///< Input parameter
    _tan__CreateAnalyticsModulesResponse&tan__CreateAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__DeleteAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__DeleteAnalyticsModules" of service binding "RuleEngineBinding".
				Remove one or more analytics modules from a VideoAnalyticsConfiguration
referenced by their names.<br/>
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__DeleteAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // output parameters:
    _tan__DeleteAnalyticsModulesResponse&tan__DeleteAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__DeleteAnalyticsModules(
    struct soap *soap,
    // input parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // output parameters:
    _tan__DeleteAnalyticsModulesResponse&tan__DeleteAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	DeleteAnalyticsModules SOAP
//gsoap tan  service method-style:	DeleteAnalyticsModules document
//gsoap tan  service method-encoding:	DeleteAnalyticsModules literal
//gsoap tan  service method-input-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules
//gsoap tan  service method-output-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModulesResponse
int __tan__DeleteAnalyticsModules(
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,	///< Input parameter
    _tan__DeleteAnalyticsModulesResponse&tan__DeleteAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__GetAnalyticsModules                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__GetAnalyticsModules" of service binding "RuleEngineBinding".
				List the currently assigned set of analytics modules
of a VideoAnalyticsConfiguration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__GetAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // output parameters:
    _tan__GetAnalyticsModulesResponse  &tan__GetAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__GetAnalyticsModules(
    struct soap *soap,
    // input parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // output parameters:
    _tan__GetAnalyticsModulesResponse  &tan__GetAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	GetAnalyticsModules SOAP
//gsoap tan  service method-style:	GetAnalyticsModules document
//gsoap tan  service method-encoding:	GetAnalyticsModules literal
//gsoap tan  service method-input-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules
//gsoap tan  service method-output-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModulesResponse
int __tan__GetAnalyticsModules(
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,	///< Input parameter
    _tan__GetAnalyticsModulesResponse  &tan__GetAnalyticsModulesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tan__ModifyAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tan__ModifyAnalyticsModules" of service binding "RuleEngineBinding".
				Modify the settings of one or more analytics modules
of a VideoAnalyticsConfiguration. The modules are referenced by their names.
				It is allowed to pass only a subset to be modified.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

  - Addressing input action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

  - Addressing output action: "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModulesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tan__ModifyAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // output parameters:
    _tan__ModifyAnalyticsModulesResponse&tan__ModifyAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tan__ModifyAnalyticsModules(
    struct soap *soap,
    // input parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // output parameters:
    _tan__ModifyAnalyticsModulesResponse&tan__ModifyAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tan  service method-protocol:	ModifyAnalyticsModules SOAP
//gsoap tan  service method-style:	ModifyAnalyticsModules document
//gsoap tan  service method-encoding:	ModifyAnalyticsModules literal
//gsoap tan  service method-input-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules
//gsoap tan  service method-output-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModulesResponse
int __tan__ModifyAnalyticsModules(
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,	///< Input parameter
    _tan__ModifyAnalyticsModulesResponse&tan__ModifyAnalyticsModulesResponse	///< Output parameter
);

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_policy_enablers Policy Enablers of Binding "RuleEngineBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    _tds__GetServices*                  tds__GetServices,	///< Input parameter
    _tds__GetServicesResponse          &tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,	///< Input parameter
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Input parameter
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string.
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Input parameter
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Input parameter
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Input parameter
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Input parameter
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Input parameter
    _tds__SystemRebootResponse         &tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Input parameter
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Input parameter
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Input parameter
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Input parameter
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters cannot be altered through
the device management interface but are
				permanent device characteristics part of the device
firmware configurations. The scope type is
				indicated in the scope list returned in the get
scope parameters response. Configurable scope
				parameters can be set throught the set and add scope
parameters operations.
				The device shall support retrieval of discovery
scope parameters
				through the GetScopes command. As some scope parameters
are mandatory, the client
				always expects a scope list in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Input parameter
    _tds__GetScopesResponse            &tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Input parameter
    _tds__SetScopesResponse            &tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Input parameter
    _tds__AddScopesResponse            &tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Input parameter
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Input parameter
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Input parameter
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Input parameter
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Input parameter
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Input parameter
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    _tds__GetEndpointReference*         tds__GetEndpointReference,	///< Input parameter
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    _tds__GetRemoteUser*                tds__GetRemoteUser,	///< Input parameter
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    _tds__SetRemoteUser*                tds__SetRemoteUser,	///< Input parameter
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Input parameter
    _tds__GetUsersResponse             &tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes.
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Input parameter
    _tds__CreateUsersResponse          &tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Input parameter
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command.
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Input parameter
    _tds__SetUserResponse              &tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Input parameter
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Input parameter
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Input parameter
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Input parameter
    _tds__GetHostnameResponse          &tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952,
				other string shall be considered as invalid strings.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Input parameter
    _tds__SetHostnameResponse          &tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,	///< Input parameter
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Input parameter
    _tds__GetDNSResponse               &tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Input parameter
    _tds__SetDNSResponse               &tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Input parameter
    _tds__GetNTPResponse               &tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952,
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Input parameter
    _tds__SetNTPResponse               &tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Input parameter
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Input parameter
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Input parameter
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Input parameter
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Input parameter
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Input parameter
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Input parameter
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Input parameter
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Use GetCapalities to check if zero-zero-configuration is
supported.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Input parameter
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Input parameter
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Input parameter
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Input parameter
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Input parameter
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Input parameter
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Input parameter
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Input parameter
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".
This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Input parameter
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".
This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Input parameter
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Input parameter
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Input parameter
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".
This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Input parameter
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".
This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Input parameter
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".
TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Input parameter
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Input parameter
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".
This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Input parameter
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Input parameter
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp,
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washe.</li>
					<li>tt:WashingProcedue|On  Request to
start the washing procedue.</li>
					<li>tt: WashingProcedue |Off  Request
to stop the washing procedue.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,	///< Input parameter
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".
CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    _tds__GetCACertificates*            tds__GetCACertificates,	///< Input parameter
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".
There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".
This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,	///< Input parameter
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".
This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    _tds__LoadCACertificates*           tds__LoadCACertificates,	///< Input parameter
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".
This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,	///< Input parameter
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".
While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,	///< Input parameter
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".
This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,	///< Input parameter
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".
This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,	///< Input parameter
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".
This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,	///< Input parameter
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,	///< Input parameter
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    _tds__GetDot11Status*               tds__GetDot11Status,	///< Input parameter
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,	///< Input parameter
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    _tds__GetSystemUris*                tds__GetSystemUris,	///< Input parameter
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,	///< Input parameter
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    _tds__StartSystemRestore*           tds__StartSystemRestore,	///< Input parameter
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse	///< Output parameter
);

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding".
				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse"

  - SOAP Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse         &tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse         &tev__PullMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
int __tev__PullMessages(
    _tev__PullMessages*                 tev__PullMessages,	///< Input parameter
    _tev__PullMessagesResponse         &tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding".
				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse                 &tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse                 &tev__SeekResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse
int __tev__Seek(
    _tev__Seek*                         tev__Seek,	///< Input parameter
    _tev__SeekResponse                 &tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse
int __tev__SetSynchronizationPoint(
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,	///< Input parameter
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse
int __tev__GetServiceCapabilities(
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,	///< Input parameter
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.
				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,	///< Input parameter
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse
int __tev__GetEventProperties(
    _tev__GetEventProperties*           tev__GetEventProperties,	///< Input parameter
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
    _wsnt__Subscribe*                   wsnt__Subscribe,	///< Input parameter
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,	///< Input parameter
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
    _wsnt__GetMessages*                 wsnt__GetMessages,	///< Input parameter
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,	///< Input parameter
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,	///< Input parameter
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,	///< Input parameter
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,	///< Input parameter
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,	///< Input parameter
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    _trt__GetVideoSources*              trt__GetVideoSources,	///< Input parameter
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    _trt__GetAudioSources*              trt__GetAudioSources,	///< Input parameter
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,	///< Input parameter
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse        &trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse        &trt__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    _trt__CreateProfile*                trt__CreateProfile,	///< Input parameter
    _trt__CreateProfileResponse        &trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse           &trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse           &trt__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    _trt__GetProfile*                   trt__GetProfile,	///< Input parameter
    _trt__GetProfileResponse           &trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse          &trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse          &trt__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    _trt__GetProfiles*                  trt__GetProfiles,	///< Input parameter
    _trt__GetProfilesResponse          &trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,	///< Input parameter
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,	///< Input parameter
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,	///< Input parameter
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,	///< Input parameter
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,	///< Input parameter
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,	///< Input parameter
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,	///< Input parameter
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    _trt__DeleteProfile*                trt__DeleteProfile,	///< Input parameter
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,	///< Input parameter
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,	///< Input parameter
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,	///< Input parameter
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,	///< Input parameter
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,	///< Input parameter
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,	///< Input parameter
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,	///< Input parameter
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,	///< Input parameter
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,	///< Input parameter
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified,
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    _trt__GetStreamUri*                 trt__GetStreamUri,	///< Input parameter
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,	///< Input parameter
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,	///< Input parameter
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,	///< Input parameter
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,	///< Input parameter
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse	///< Output parameter
);

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, _tds__GetServices*);
    @endcode

  - <GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    @endcode

  - <GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> @ref _tds__Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__Capabilities(struct soap*, _tds__Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__Capabilities(struct soap*, _tds__Capabilities*);
    @endcode

  - <GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    @endcode

  - <GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    @endcode

  - <SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    @endcode

  - <SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    @endcode

  - <GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    @endcode

  - <SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    @endcode

  - <UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    @endcode

  - <SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    @endcode

  - <RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    @endcode

  - <RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    @endcode

  - <GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    @endcode

  - <GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    @endcode

  - <GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    @endcode

  - <GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    @endcode

  - <GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    @endcode

  - <GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*);
    @endcode

  - <GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    @endcode

  - <SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*);
    @endcode

  - <SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    @endcode

  - <AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*);
    @endcode

  - <AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    @endcode

  - <RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    @endcode

  - <RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    @endcode

  - <GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    @endcode

  - <GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    @endcode

  - <SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    @endcode

  - <SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    @endcode

  - <GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    @endcode

  - <GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    @endcode

  - <SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    @endcode

  - <SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    @endcode

  - <GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    @endcode

  - <GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    @endcode

  - <GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    @endcode

  - <GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    @endcode

  - <SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    @endcode

  - <SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    @endcode

  - <GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*);
    @endcode

  - <GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    @endcode

  - <CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    @endcode

  - <CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    @endcode

  - <DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    @endcode

  - <DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    @endcode

  - <SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, _tds__SetUser*);
    @endcode

  - <SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    @endcode

  - <GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    @endcode

  - <GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    @endcode

  - <GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    @endcode

  - <GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    @endcode

  - <GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*);
    @endcode

  - <GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    @endcode

  - <SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*);
    @endcode

  - <SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    @endcode

  - <SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    @endcode

  - <SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*);
    @endcode

  - <GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    @endcode

  - <SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*);
    @endcode

  - <SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    @endcode

  - <GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*);
    @endcode

  - <GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    @endcode

  - <SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*);
    @endcode

  - <SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    @endcode

  - <GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    @endcode

  - <GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    @endcode

  - <SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    @endcode

  - <SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    @endcode

  - <GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    @endcode

  - <GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    @endcode

  - <SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    @endcode

  - <GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    @endcode

  - <SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    @endcode

  - <GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    @endcode

  - <SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    @endcode

  - <GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    @endcode

  - <SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    @endcode

  - <SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    @endcode

  - <GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    @endcode

  - <GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    @endcode

  - <SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    @endcode

  - <SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    @endcode

  - <AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    @endcode

  - <AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    @endcode

  - <RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    @endcode

  - <RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    @endcode

  - <GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    @endcode

  - <SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    @endcode

  - <SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    @endcode

  - <CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    @endcode

  - <CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    @endcode

  - <GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    @endcode

  - <GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    @endcode

  - <GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    @endcode

  - <GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    @endcode

  - <SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    @endcode

  - <SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    @endcode

  - <DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    @endcode

  - <DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    @endcode

  - <GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    @endcode

  - <GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    @endcode

  - <LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    @endcode

  - <LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    @endcode

  - <GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    @endcode

  - <GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    @endcode

  - <SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    @endcode

  - <SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    @endcode

  - <GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    @endcode

  - <GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    @endcode

  - <LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    @endcode

  - <GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    @endcode

  - <LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    @endcode

  - <LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    @endcode

  - <CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    @endcode

  - <CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    @endcode

  - <SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    @endcode

  - <GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    @endcode

  - <GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    @endcode

  - <DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    @endcode

  - <GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    @endcode

  - <SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    @endcode

  - <SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    @endcode

  - <SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    @endcode

  - <SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    @endcode

  - <SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    @endcode

  - <GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    @endcode

  - <GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    @endcode

  - <ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    @endcode

  - <ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    @endcode

  - <GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    @endcode

  - <StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    @endcode

  - <StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    @endcode

  - <StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    @endcode

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <VideoSourceConfiguration> @ref _tt__VideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__VideoSourceConfiguration(struct soap*, _tt__VideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__VideoSourceConfiguration(struct soap*, _tt__VideoSourceConfiguration*);
    @endcode

  - <AudioSourceConfiguration> @ref _tt__AudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__AudioSourceConfiguration(struct soap*, _tt__AudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__AudioSourceConfiguration(struct soap*, _tt__AudioSourceConfiguration*);
    @endcode

  - <VideoEncoderConfiguration> @ref _tt__VideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__VideoEncoderConfiguration(struct soap*, _tt__VideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__VideoEncoderConfiguration(struct soap*, _tt__VideoEncoderConfiguration*);
    @endcode

  - <AudioEncoderConfiguration> @ref _tt__AudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__AudioEncoderConfiguration(struct soap*, _tt__AudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__AudioEncoderConfiguration(struct soap*, _tt__AudioEncoderConfiguration*);
    @endcode

  - <VideoAnalyticsConfiguration> @ref _tt__VideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__VideoAnalyticsConfiguration(struct soap*, _tt__VideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__VideoAnalyticsConfiguration(struct soap*, _tt__VideoAnalyticsConfiguration*);
    @endcode

  - <PTZConfiguration> @ref _tt__PTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__PTZConfiguration(struct soap*, _tt__PTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__PTZConfiguration(struct soap*, _tt__PTZConfiguration*);
    @endcode

  - <MetadataConfiguration> @ref _tt__MetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__MetadataConfiguration(struct soap*, _tt__MetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__MetadataConfiguration(struct soap*, _tt__MetadataConfiguration*);
    @endcode

  - <AudioOutputConfiguration> @ref _tt__AudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__AudioOutputConfiguration(struct soap*, _tt__AudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__AudioOutputConfiguration(struct soap*, _tt__AudioOutputConfiguration*);
    @endcode

  - <AudioDecoderConfiguration> @ref _tt__AudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__AudioDecoderConfiguration(struct soap*, _tt__AudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__AudioDecoderConfiguration(struct soap*, _tt__AudioDecoderConfiguration*);
    @endcode

  - <Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, _tt__Message*);
    @endcode

  - <Polygon> @ref _tt__Polygon
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Polygon(struct soap*, _tt__Polygon*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Polygon(struct soap*, _tt__Polygon*);
    @endcode

  - <Polyline> @ref _tt__Polyline
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Polyline(struct soap*, _tt__Polyline*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Polyline(struct soap*, _tt__Polyline*);
    @endcode

  - <MetadataStream> @ref _tt__MetadataStream
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__MetadataStream(struct soap*, _tt__MetadataStream*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__MetadataStream(struct soap*, _tt__MetadataStream*);
    @endcode

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <TopicExpression> @ref _wsnt__TopicExpression
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__TopicExpression(struct soap*, _wsnt__TopicExpression*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__TopicExpression(struct soap*, _wsnt__TopicExpression*);
    @endcode

  - <FixedTopicSet> @ref _wsnt__FixedTopicSet
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__FixedTopicSet(struct soap*, _wsnt__FixedTopicSet*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__FixedTopicSet(struct soap*, _wsnt__FixedTopicSet*);
    @endcode

  - <TopicExpressionDialect> @ref _wsnt__TopicExpressionDialect
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__TopicExpressionDialect(struct soap*, _wsnt__TopicExpressionDialect*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__TopicExpressionDialect(struct soap*, _wsnt__TopicExpressionDialect*);
    @endcode

  - <NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    @endcode

  - <ConsumerReference> @ref _wsnt__ConsumerReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ConsumerReference(struct soap*, _wsnt__ConsumerReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ConsumerReference(struct soap*, _wsnt__ConsumerReference*);
    @endcode

  - <Filter> @ref _wsnt__Filter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Filter(struct soap*, _wsnt__Filter*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Filter(struct soap*, _wsnt__Filter*);
    @endcode

  - <SubscriptionPolicy> @ref _wsnt__SubscriptionPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionPolicy(struct soap*, _wsnt__SubscriptionPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionPolicy(struct soap*, _wsnt__SubscriptionPolicy*);
    @endcode

  - <CreationTime> @ref _wsnt__CreationTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreationTime(struct soap*, _wsnt__CreationTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreationTime(struct soap*, _wsnt__CreationTime*);
    @endcode

  - <SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    @endcode

  - <SubscriptionReference> @ref _wsnt__SubscriptionReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionReference(struct soap*, _wsnt__SubscriptionReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionReference(struct soap*, _wsnt__SubscriptionReference*);
    @endcode

  - <Topic> @ref _wsnt__Topic
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Topic(struct soap*, _wsnt__Topic*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Topic(struct soap*, _wsnt__Topic*);
    @endcode

  - <ProducerReference> @ref _wsnt__ProducerReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ProducerReference(struct soap*, _wsnt__ProducerReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ProducerReference(struct soap*, _wsnt__ProducerReference*);
    @endcode

  - <NotificationMessage> @ref _wsnt__NotificationMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationMessage(struct soap*, _wsnt__NotificationMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationMessage(struct soap*, _wsnt__NotificationMessage*);
    @endcode

  - <Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*);
    @endcode

  - <CurrentTime> @ref _wsnt__CurrentTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CurrentTime(struct soap*, _wsnt__CurrentTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CurrentTime(struct soap*, _wsnt__CurrentTime*);
    @endcode

  - <TerminationTime> @ref _wsnt__TerminationTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__TerminationTime(struct soap*, _wsnt__TerminationTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__TerminationTime(struct soap*, _wsnt__TerminationTime*);
    @endcode

  - <ProducerProperties> @ref _wsnt__ProducerProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ProducerProperties(struct soap*, _wsnt__ProducerProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ProducerProperties(struct soap*, _wsnt__ProducerProperties*);
    @endcode

  - <MessageContent> @ref _wsnt__MessageContent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__MessageContent(struct soap*, _wsnt__MessageContent*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__MessageContent(struct soap*, _wsnt__MessageContent*);
    @endcode

  - <UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    @endcode

  - <Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    @endcode

  - <SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    @endcode

  - <GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    @endcode

  - <GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <SubscribeCreationFailedFault> @ref _wsnt__SubscribeCreationFailedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeCreationFailedFault(struct soap*, _wsnt__SubscribeCreationFailedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeCreationFailedFault(struct soap*, _wsnt__SubscribeCreationFailedFault*);
    @endcode

  - <InvalidFilterFault> @ref _wsnt__InvalidFilterFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__InvalidFilterFault(struct soap*, _wsnt__InvalidFilterFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__InvalidFilterFault(struct soap*, _wsnt__InvalidFilterFault*);
    @endcode

  - <TopicExpressionDialectUnknownFault> @ref _wsnt__TopicExpressionDialectUnknownFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__TopicExpressionDialectUnknownFault(struct soap*, _wsnt__TopicExpressionDialectUnknownFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__TopicExpressionDialectUnknownFault(struct soap*, _wsnt__TopicExpressionDialectUnknownFault*);
    @endcode

  - <InvalidTopicExpressionFault> @ref _wsnt__InvalidTopicExpressionFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__InvalidTopicExpressionFault(struct soap*, _wsnt__InvalidTopicExpressionFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__InvalidTopicExpressionFault(struct soap*, _wsnt__InvalidTopicExpressionFault*);
    @endcode

  - <TopicNotSupportedFault> @ref _wsnt__TopicNotSupportedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__TopicNotSupportedFault(struct soap*, _wsnt__TopicNotSupportedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__TopicNotSupportedFault(struct soap*, _wsnt__TopicNotSupportedFault*);
    @endcode

  - <MultipleTopicsSpecifiedFault> @ref _wsnt__MultipleTopicsSpecifiedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__MultipleTopicsSpecifiedFault(struct soap*, _wsnt__MultipleTopicsSpecifiedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__MultipleTopicsSpecifiedFault(struct soap*, _wsnt__MultipleTopicsSpecifiedFault*);
    @endcode

  - <InvalidProducerPropertiesExpressionFault> @ref _wsnt__InvalidProducerPropertiesExpressionFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__InvalidProducerPropertiesExpressionFault(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__InvalidProducerPropertiesExpressionFault(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFault*);
    @endcode

  - <InvalidMessageContentExpressionFault> @ref _wsnt__InvalidMessageContentExpressionFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__InvalidMessageContentExpressionFault(struct soap*, _wsnt__InvalidMessageContentExpressionFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__InvalidMessageContentExpressionFault(struct soap*, _wsnt__InvalidMessageContentExpressionFault*);
    @endcode

  - <UnrecognizedPolicyRequestFault> @ref _wsnt__UnrecognizedPolicyRequestFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnrecognizedPolicyRequestFault(struct soap*, _wsnt__UnrecognizedPolicyRequestFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnrecognizedPolicyRequestFault(struct soap*, _wsnt__UnrecognizedPolicyRequestFault*);
    @endcode

  - <UnsupportedPolicyRequestFault> @ref _wsnt__UnsupportedPolicyRequestFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsupportedPolicyRequestFault(struct soap*, _wsnt__UnsupportedPolicyRequestFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsupportedPolicyRequestFault(struct soap*, _wsnt__UnsupportedPolicyRequestFault*);
    @endcode

  - <NotifyMessageNotSupportedFault> @ref _wsnt__NotifyMessageNotSupportedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotifyMessageNotSupportedFault(struct soap*, _wsnt__NotifyMessageNotSupportedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotifyMessageNotSupportedFault(struct soap*, _wsnt__NotifyMessageNotSupportedFault*);
    @endcode

  - <UnacceptableInitialTerminationTimeFault> @ref _wsnt__UnacceptableInitialTerminationTimeFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnacceptableInitialTerminationTimeFault(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnacceptableInitialTerminationTimeFault(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFault*);
    @endcode

  - <NoCurrentMessageOnTopicFault> @ref _wsnt__NoCurrentMessageOnTopicFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NoCurrentMessageOnTopicFault(struct soap*, _wsnt__NoCurrentMessageOnTopicFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NoCurrentMessageOnTopicFault(struct soap*, _wsnt__NoCurrentMessageOnTopicFault*);
    @endcode

  - <GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    @endcode

  - <GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    @endcode

  - <DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    @endcode

  - <DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    @endcode

  - <UnableToGetMessagesFault> @ref _wsnt__UnableToGetMessagesFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnableToGetMessagesFault(struct soap*, _wsnt__UnableToGetMessagesFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnableToGetMessagesFault(struct soap*, _wsnt__UnableToGetMessagesFault*);
    @endcode

  - <UnableToDestroyPullPointFault> @ref _wsnt__UnableToDestroyPullPointFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnableToDestroyPullPointFault(struct soap*, _wsnt__UnableToDestroyPullPointFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnableToDestroyPullPointFault(struct soap*, _wsnt__UnableToDestroyPullPointFault*);
    @endcode

  - <CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    @endcode

  - <CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    @endcode

  - <UnableToCreatePullPointFault> @ref _wsnt__UnableToCreatePullPointFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnableToCreatePullPointFault(struct soap*, _wsnt__UnableToCreatePullPointFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnableToCreatePullPointFault(struct soap*, _wsnt__UnableToCreatePullPointFault*);
    @endcode

  - <Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*);
    @endcode

  - <RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    @endcode

  - <UnacceptableTerminationTimeFault> @ref _wsnt__UnacceptableTerminationTimeFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnacceptableTerminationTimeFault(struct soap*, _wsnt__UnacceptableTerminationTimeFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnacceptableTerminationTimeFault(struct soap*, _wsnt__UnacceptableTerminationTimeFault*);
    @endcode

  - <Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    @endcode

  - <UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    @endcode

  - <UnableToDestroySubscriptionFault> @ref _wsnt__UnableToDestroySubscriptionFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnableToDestroySubscriptionFault(struct soap*, _wsnt__UnableToDestroySubscriptionFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnableToDestroySubscriptionFault(struct soap*, _wsnt__UnableToDestroySubscriptionFault*);
    @endcode

  - <PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    @endcode

  - <PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    @endcode

  - <ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <PauseFailedFault> @ref _wsnt__PauseFailedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseFailedFault(struct soap*, _wsnt__PauseFailedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseFailedFault(struct soap*, _wsnt__PauseFailedFault*);
    @endcode

  - <ResumeFailedFault> @ref _wsnt__ResumeFailedFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeFailedFault(struct soap*, _wsnt__ResumeFailedFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeFailedFault(struct soap*, _wsnt__ResumeFailedFault*);
    @endcode

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <BaseFault> @ref _wsrfbf__BaseFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsrfbf__BaseFault(struct soap*, _wsrfbf__BaseFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsrfbf__BaseFault(struct soap*, _wsrfbf__BaseFault*);
    @endcode

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <TopicNamespace> @ref _wstop__TopicNamespace
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wstop__TopicNamespace(struct soap*, _wstop__TopicNamespace*);
    // Writer (returns SOAP_OK on success):
    soap_write__wstop__TopicNamespace(struct soap*, _wstop__TopicNamespace*);
    @endcode

  - <TopicSet> @ref _wstop__TopicSet
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wstop__TopicSet(struct soap*, _wstop__TopicSet*);
    // Writer (returns SOAP_OK on success):
    soap_write__wstop__TopicSet(struct soap*, _wstop__TopicSet*);
    @endcode

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> @ref _tev__Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Capabilities(struct soap*, _tev__Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Capabilities(struct soap*, _tev__Capabilities*);
    @endcode

  - <CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    @endcode

  - <CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, _tev__PullMessages*);
    @endcode

  - <PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    @endcode

  - <PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    @endcode

  - <Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, _tev__Seek*);
    @endcode

  - <SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    @endcode

  - <SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    @endcode

  - <SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    @endcode

  - <GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    @endcode

  - <GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    @endcode

@section default Top-level root elements of schema ""

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <ResourceUnknownFault> @ref _wsrfr__ResourceUnknownFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsrfr__ResourceUnknownFault(struct soap*, _wsrfr__ResourceUnknownFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsrfr__ResourceUnknownFault(struct soap*, _wsrfr__ResourceUnknownFault*);
    @endcode

  - <ResourceUnavailableFault> @ref _wsrfr__ResourceUnavailableFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsrfr__ResourceUnavailableFault(struct soap*, _wsrfr__ResourceUnavailableFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsrfr__ResourceUnavailableFault(struct soap*, _wsrfr__ResourceUnavailableFault*);
    @endcode

@section tan Top-level root elements of schema "http://www.onvif.org/ver20/analytics/wsdl"

  - <GetServiceCapabilities> @ref _tan__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetServiceCapabilities(struct soap*, _tan__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetServiceCapabilities(struct soap*, _tan__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _tan__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetServiceCapabilitiesResponse(struct soap*, _tan__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetServiceCapabilitiesResponse(struct soap*, _tan__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> @ref _tan__Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__Capabilities(struct soap*, _tan__Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__Capabilities(struct soap*, _tan__Capabilities*);
    @endcode

  - <GetSupportedRules> @ref _tan__GetSupportedRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    @endcode

  - <GetSupportedRulesResponse> @ref _tan__GetSupportedRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    @endcode

  - <CreateRules> @ref _tan__CreateRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRules(struct soap*, _tan__CreateRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRules(struct soap*, _tan__CreateRules*);
    @endcode

  - <CreateRulesResponse> @ref _tan__CreateRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    @endcode

  - <DeleteRules> @ref _tan__DeleteRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    @endcode

  - <DeleteRulesResponse> @ref _tan__DeleteRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    @endcode

  - <ModifyRules> @ref _tan__ModifyRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    @endcode

  - <ModifyRulesResponse> @ref _tan__ModifyRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    @endcode

  - <GetRules> @ref _tan__GetRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRules(struct soap*, _tan__GetRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRules(struct soap*, _tan__GetRules*);
    @endcode

  - <GetRulesResponse> @ref _tan__GetRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    @endcode

  - <GetSupportedAnalyticsModules> @ref _tan__GetSupportedAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    @endcode

  - <GetSupportedAnalyticsModulesResponse> @ref _tan__GetSupportedAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    @endcode

  - <CreateAnalyticsModules> @ref _tan__CreateAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    @endcode

  - <CreateAnalyticsModulesResponse> @ref _tan__CreateAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    @endcode

  - <DeleteAnalyticsModules> @ref _tan__DeleteAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    @endcode

  - <DeleteAnalyticsModulesResponse> @ref _tan__DeleteAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    @endcode

  - <ModifyAnalyticsModules> @ref _tan__ModifyAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    @endcode

  - <ModifyAnalyticsModulesResponse> @ref _tan__ModifyAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    @endcode

  - <GetAnalyticsModules> @ref _tan__GetAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    @endcode

  - <GetAnalyticsModulesResponse> @ref _tan__GetAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    @endcode

@section dn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <Hello> @ref _dn__Hello
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__Hello(struct soap*, _dn__Hello*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__Hello(struct soap*, _dn__Hello*);
    @endcode

  - <HelloResponse> @ref _dn__HelloResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__HelloResponse(struct soap*, _dn__HelloResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__HelloResponse(struct soap*, _dn__HelloResponse*);
    @endcode

  - <Probe> @ref _dn__Probe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__Probe(struct soap*, _dn__Probe*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__Probe(struct soap*, _dn__Probe*);
    @endcode

  - <ProbeResponse> @ref _dn__ProbeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__ProbeResponse(struct soap*, _dn__ProbeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__ProbeResponse(struct soap*, _dn__ProbeResponse*);
    @endcode

  - <Bye> @ref _dn__Bye
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__Bye(struct soap*, _dn__Bye*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__Bye(struct soap*, _dn__Bye*);
    @endcode

  - <ByeResponse> @ref _dn__ByeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__dn__ByeResponse(struct soap*, _dn__ByeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__dn__ByeResponse(struct soap*, _dn__ByeResponse*);
    @endcode

@section wsd Top-level root elements of schema "http://schemas.xmlsoap.org/ws/2005/04/discovery"

  - <Hello> @ref _wsd__Hello
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Hello(struct soap*, _wsd__Hello*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Hello(struct soap*, _wsd__Hello*);
    @endcode

  - <Bye> @ref _wsd__Bye
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Bye(struct soap*, _wsd__Bye*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Bye(struct soap*, _wsd__Bye*);
    @endcode

  - <Probe> @ref _wsd__Probe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Probe(struct soap*, _wsd__Probe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Probe(struct soap*, _wsd__Probe*);
    @endcode

  - <ProbeMatches> @ref _wsd__ProbeMatches
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__ProbeMatches(struct soap*, _wsd__ProbeMatches*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__ProbeMatches(struct soap*, _wsd__ProbeMatches*);
    @endcode

  - <Resolve> @ref _wsd__Resolve
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Resolve(struct soap*, _wsd__Resolve*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Resolve(struct soap*, _wsd__Resolve*);
    @endcode

  - <ResolveMatches> @ref _wsd__ResolveMatches
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__ResolveMatches(struct soap*, _wsd__ResolveMatches*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__ResolveMatches(struct soap*, _wsd__ResolveMatches*);
    @endcode

  - <Types> @ref _wsd__Types
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Types(struct soap*, _wsd__Types*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Types(struct soap*, _wsd__Types*);
    @endcode

  - <Scopes> @ref _wsd__Scopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Scopes(struct soap*, _wsd__Scopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Scopes(struct soap*, _wsd__Scopes*);
    @endcode

  - <XAddrs> @ref _wsd__XAddrs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__XAddrs(struct soap*, _wsd__XAddrs*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__XAddrs(struct soap*, _wsd__XAddrs*);
    @endcode

  - <MetadataVersion> @ref _wsd__MetadataVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__MetadataVersion(struct soap*, _wsd__MetadataVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__MetadataVersion(struct soap*, _wsd__MetadataVersion*);
    @endcode

  - <SupportedMatchingRules> @ref _wsd__SupportedMatchingRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__SupportedMatchingRules(struct soap*, _wsd__SupportedMatchingRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__SupportedMatchingRules(struct soap*, _wsd__SupportedMatchingRules*);
    @endcode

  - <Security> @ref _wsd__Security
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Security(struct soap*, _wsd__Security*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Security(struct soap*, _wsd__Security*);
    @endcode

  - <Sig> @ref _wsd__Sig
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__Sig(struct soap*, _wsd__Sig*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__Sig(struct soap*, _wsd__Sig*);
    @endcode

  - <AppSequence> @ref _wsd__AppSequence
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsd__AppSequence(struct soap*, _wsd__AppSequence*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsd__AppSequence(struct soap*, _wsd__AppSequence*);
    @endcode

@section wsa Top-level root elements of schema "http://schemas.xmlsoap.org/ws/2004/08/addressing"

  - <EndpointReference> @ref _wsa__EndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__EndpointReference(struct soap*, _wsa__EndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__EndpointReference(struct soap*, _wsa__EndpointReference*);
    @endcode

  - <MessageID> @ref _wsa__MessageID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__MessageID(struct soap*, _wsa__MessageID*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__MessageID(struct soap*, _wsa__MessageID*);
    @endcode

  - <RelatesTo> @ref _wsa__RelatesTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__RelatesTo(struct soap*, _wsa__RelatesTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__RelatesTo(struct soap*, _wsa__RelatesTo*);
    @endcode

  - <To> @ref _wsa__To
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__To(struct soap*, _wsa__To*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__To(struct soap*, _wsa__To*);
    @endcode

  - <Action> @ref _wsa__Action
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__Action(struct soap*, _wsa__Action*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__Action(struct soap*, _wsa__Action*);
    @endcode

  - <From> @ref _wsa__From
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__From(struct soap*, _wsa__From*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__From(struct soap*, _wsa__From*);
    @endcode

  - <ReplyTo> @ref _wsa__ReplyTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__ReplyTo(struct soap*, _wsa__ReplyTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__ReplyTo(struct soap*, _wsa__ReplyTo*);
    @endcode

  - <FaultTo> @ref _wsa__FaultTo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__FaultTo(struct soap*, _wsa__FaultTo*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__FaultTo(struct soap*, _wsa__FaultTo*);
    @endcode

  - <ReplyAfter> @ref _wsa__ReplyAfter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__ReplyAfter(struct soap*, _wsa__ReplyAfter*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__ReplyAfter(struct soap*, _wsa__ReplyAfter*);
    @endcode

  - <RetryAfter> @ref _wsa__RetryAfter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsa__RetryAfter(struct soap*, _wsa__RetryAfter*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsa__RetryAfter(struct soap*, _wsa__RetryAfter*);
    @endcode

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    @endcode

  - <GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <Capabilities> @ref _trt__Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__Capabilities(struct soap*, _trt__Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__Capabilities(struct soap*, _trt__Capabilities*);
    @endcode

  - <GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    @endcode

  - <GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    @endcode

  - <GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    @endcode

  - <GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    @endcode

  - <GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    @endcode

  - <GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    @endcode

  - <CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    @endcode

  - <CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    @endcode

  - <GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*);
    @endcode

  - <GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    @endcode

  - <GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    @endcode

  - <GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    @endcode

  - <AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    @endcode

  - <AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    @endcode

  - <AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    @endcode

  - <AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    @endcode

  - <RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    @endcode

  - <RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    @endcode

  - <AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    @endcode

  - <RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    @endcode

  - <AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    @endcode

  - <DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    @endcode

  - <GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    @endcode

  - <GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    @endcode

  - <GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    @endcode

  - <GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    @endcode

  - <GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    @endcode

  - <GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    @endcode

  - <GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    @endcode

  - <GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    @endcode

  - <GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    @endcode

  - <SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    @endcode

  - <SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    @endcode

  - <SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    @endcode

  - <SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    @endcode

  - <GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    @endcode

  - <StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    @endcode

  - <StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    @endcode

  - <StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    @endcode

  - <StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    @endcode

  - <SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    @endcode

  - <SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    @endcode

  - <GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    @endcode

  - <GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    @endcode

*/

/* End of web.h */
struct SOAP_ENV__Header {
char*            wsa__MessageID 0;_wsa__RelatesTo *wsa__RelatesTo 0;_wsa__From      *wsa__From      0;_wsa__ReplyTo   *wsa__ReplyTo   0;_wsa__FaultTo   *wsa__FaultTo   0;char*            wsa__To        0;char*            wsa__Action    0;wsd__AppSequenceType *wsd__AppSequence 0;};